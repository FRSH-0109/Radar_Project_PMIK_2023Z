.TH "RadarApp/ServoDriver/servo_driver.c" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RadarApp/ServoDriver/servo_driver.c \- File containing code of servomechanism driver controlled by PWM, which was created for Radar embedded project\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'servo_driver\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBservoDriverInit\fP (\fBservoDriverStruct\fP *servoDriver, float dMin, float dMax, uint16_t pMin, uint16_t pMax)"
.br
.ti -1c
.RI "void \fBservoDriverStart\fP (\fBservoDriverStruct\fP *servoDriver)"
.br
.ti -1c
.RI "void \fBservoDriverStop\fP (\fBservoDriverStruct\fP *servoDriver)"
.br
.ti -1c
.RI "bool \fBservoDriverSetDegrees\fP (\fBservoDriverStruct\fP *servoDriver, float degrees)"
.br
.ti -1c
.RI "uint16_t \fBservoDriverDegreesToPulseWidth\fP (\fBservoDriverStruct\fP *servoDriver, float degrees)"
.br
.ti -1c
.RI "\fB__attribute__\fP ((weak))"
.br
.in -1c
.SH "Detailed Description"
.PP 
File containing code of servomechanism driver controlled by PWM, which was created for Radar embedded project\&. 


.PP
\fBAuthor\fP
.RS 4
Kami Ko≈õnik, Kacper Radzikowski 
.RE
.PP
\fBDate\fP
.RS 4
20 Nov 2023 
.RE
.PP
\fBSee also\fP
.RS 4
https://github.com/FRSH-0109/Radar_Project_PMIK_2023Z 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "__attribute__ ((weak))"

.SS "uint16_t servoDriverDegreesToPulseWidth (\fBservoDriverStruct\fP * servoDriver, float degrees)"
Function for converting degrees value into pulse width
.PP
\fBParameters\fP
.RS 4
\fIservoDriver\fP pointer to \fBservoDriverStruct\fP struct 
.br
\fIdegrees\fP value of degrees to convert 
.RE
.PP
\fBReturns\fP
.RS 4
uint16_t value of corresponding pulse width 
.RE
.PP

.SS "void servoDriverInit (\fBservoDriverStruct\fP * servoDriver, float dMin, float dMax, uint16_t pMin, uint16_t pMax)"
Function for initialization of servo structure instance
.PP
\fBParameters\fP
.RS 4
\fIservoDriver\fP pointer to \fBservoDriverStruct\fP struct 
.br
\fIdMin\fP value of minimal degrees movement for servo 
.br
\fIdMax\fP value of maximal degrees movement for servo 
.br
\fIpMin\fP value of minimal pulse width corresponding to minimal degrees value 
.br
\fIpMax\fP value of maximal pulse width corresponding to minimal degrees value 
.RE
.PP

.SS "bool servoDriverSetDegrees (\fBservoDriverStruct\fP * servoDriver, float degrees)"
Function for setting servo position in degrees
.PP
\fBParameters\fP
.RS 4
\fIservoDriver\fP pointer to \fBservoDriverStruct\fP struct 
.br
\fIdegrees\fP value of degrees to set 
.RE
.PP
\fBReturns\fP
.RS 4
bool is action was successful 
.RE
.PP

.SS "void servoDriverStart (\fBservoDriverStruct\fP * servoDriver)"
Function for starting servo movement
.PP
\fBParameters\fP
.RS 4
\fIservoDriver\fP pointer to \fBservoDriverStruct\fP struct 
.RE
.PP

.SS "void servoDriverStop (\fBservoDriverStruct\fP * servoDriver)"
Function for stopping servo movement
.PP
\fBParameters\fP
.RS 4
\fIservoDriver\fP pointer to \fBservoDriverStruct\fP struct 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

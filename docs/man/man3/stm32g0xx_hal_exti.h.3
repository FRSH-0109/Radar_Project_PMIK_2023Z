.TH "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_exti.h" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_exti.h \- Header file of EXTI HAL module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32g0xx_hal_def\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBEXTI_HandleTypeDef\fP"
.br
.RI "EXTI Handle structure definition\&. "
.ti -1c
.RI "struct \fBEXTI_ConfigTypeDef\fP"
.br
.RI "EXTI Configuration structure definition\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBEXTI_LINE_0\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x00u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_1\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x01u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_2\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x02u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_3\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x03u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_4\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x04u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_5\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x05u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_6\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x06u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_7\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x07u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_8\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x08u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_9\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x09u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_10\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x0Au)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_11\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x0Bu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_12\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x0Cu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_13\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x0Du)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_14\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x0Eu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_15\fP   (\fBEXTI_GPIO\fP     | \fBEXTI_REG1\fP | 0x0Fu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_16\fP   (\fBEXTI_CONFIG\fP   | \fBEXTI_REG1\fP | 0x10u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_17\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x11u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_18\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x12u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_19\fP   (\fBEXTI_DIRECT\fP   | \fBEXTI_REG1\fP | 0x13u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_20\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x14u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_21\fP   (\fBEXTI_DIRECT\fP   | \fBEXTI_REG1\fP | 0x15u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_22\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x16u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_23\fP   (\fBEXTI_DIRECT\fP   | \fBEXTI_REG1\fP | 0x17u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_24\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x18u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_25\fP   (\fBEXTI_DIRECT\fP   | \fBEXTI_REG1\fP | 0x19u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_26\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x1Au)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_27\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x1Bu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_28\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x1Cu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_29\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x1Du)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_30\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG1\fP | 0x1Eu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_31\fP   (\fBEXTI_DIRECT\fP   | \fBEXTI_REG1\fP | 0x1Fu)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_32\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG2\fP | 0x00u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_33\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG2\fP | 0x01u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_34\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG2\fP | 0x02u)"
.br
.ti -1c
.RI "#define \fBEXTI_LINE_35\fP   (\fBEXTI_RESERVED\fP | \fBEXTI_REG2\fP | 0x03u)"
.br
.ti -1c
.RI "#define \fBEXTI_MODE_NONE\fP   0x00000000u"
.br
.ti -1c
.RI "#define \fBEXTI_MODE_INTERRUPT\fP   0x00000001u"
.br
.ti -1c
.RI "#define \fBEXTI_MODE_EVENT\fP   0x00000002u"
.br
.ti -1c
.RI "#define \fBEXTI_TRIGGER_NONE\fP   0x00000000u"
.br
.ti -1c
.RI "#define \fBEXTI_TRIGGER_RISING\fP   0x00000001u"
.br
.ti -1c
.RI "#define \fBEXTI_TRIGGER_FALLING\fP   0x00000002u"
.br
.ti -1c
.RI "#define \fBEXTI_TRIGGER_RISING_FALLING\fP   (\fBEXTI_TRIGGER_RISING\fP | \fBEXTI_TRIGGER_FALLING\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_GPIOA\fP   0x00000000u"
.br
.ti -1c
.RI "#define \fBEXTI_GPIOB\fP   0x00000001u"
.br
.ti -1c
.RI "#define \fBEXTI_GPIOC\fP   0x00000002u"
.br
.ti -1c
.RI "#define \fBEXTI_GPIOD\fP   0x00000003u"
.br
.ti -1c
.RI "#define \fBEXTI_GPIOF\fP   0x00000005u"
.br
.ti -1c
.RI "#define \fBEXTI_PROPERTY_SHIFT\fP   24u"
.br
.RI "EXTI Line property definition\&. "
.ti -1c
.RI "#define \fBEXTI_DIRECT\fP   (0x01uL << \fBEXTI_PROPERTY_SHIFT\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_CONFIG\fP   (0x02uL << \fBEXTI_PROPERTY_SHIFT\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_GPIO\fP   ((0x04uL << \fBEXTI_PROPERTY_SHIFT\fP) | \fBEXTI_CONFIG\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_RESERVED\fP   (0x08uL << \fBEXTI_PROPERTY_SHIFT\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_PROPERTY_MASK\fP   (\fBEXTI_DIRECT\fP | \fBEXTI_CONFIG\fP | \fBEXTI_GPIO\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_REG_SHIFT\fP   16u"
.br
.RI "EXTI Register and bit usage\&. "
.ti -1c
.RI "#define \fBEXTI_REG1\fP   (0x00uL << \fBEXTI_REG_SHIFT\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_REG2\fP   (0x01uL << \fBEXTI_REG_SHIFT\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_REG_MASK\fP   (\fBEXTI_REG1\fP | \fBEXTI_REG2\fP)"
.br
.ti -1c
.RI "#define \fBEXTI_PIN_MASK\fP   0x0000001Fu"
.br
.ti -1c
.RI "#define \fBEXTI_MODE_MASK\fP   (\fBEXTI_MODE_EVENT\fP | \fBEXTI_MODE_INTERRUPT\fP)"
.br
.RI "EXTI Mask for interrupt & event mode\&. "
.ti -1c
.RI "#define \fBEXTI_TRIGGER_MASK\fP   (\fBEXTI_TRIGGER_RISING\fP | \fBEXTI_TRIGGER_FALLING\fP)"
.br
.RI "EXTI Mask for trigger possibilities\&. "
.ti -1c
.RI "#define \fBEXTI_LINE_NB\fP   32uL"
.br
.RI "EXTI Line number\&. "
.ti -1c
.RI "#define \fBIS_EXTI_LINE\fP(__EXTI_LINE__)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_MODE\fP(__MODE__)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_TRIGGER\fP(__EXTI_LINE__)   (((__EXTI_LINE__) & ~\fBEXTI_TRIGGER_MASK\fP) == 0x00u)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_PENDING_EDGE\fP(__EXTI_LINE__)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_CONFIG_LINE\fP(__EXTI_LINE__)   (((__EXTI_LINE__) & \fBEXTI_CONFIG\fP) != 0x00u)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_GPIO_PORT\fP(__PORT__)"
.br
.ti -1c
.RI "#define \fBIS_EXTI_GPIO_PIN\fP(__PIN__)   ((__PIN__) < 16u)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBEXTI_CallbackIDTypeDef\fP { \fBHAL_EXTI_COMMON_CB_ID\fP = 0x00U, \fBHAL_EXTI_RISING_CB_ID\fP = 0x01U, \fBHAL_EXTI_FALLING_CB_ID\fP = 0x02U }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_SetConfigLine\fP (\fBEXTI_HandleTypeDef\fP *hexti, \fBEXTI_ConfigTypeDef\fP *pExtiConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_GetConfigLine\fP (\fBEXTI_HandleTypeDef\fP *hexti, \fBEXTI_ConfigTypeDef\fP *pExtiConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_ClearConfigLine\fP (\fBEXTI_HandleTypeDef\fP *hexti)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_RegisterCallback\fP (\fBEXTI_HandleTypeDef\fP *hexti, \fBEXTI_CallbackIDTypeDef\fP CallbackID, void(*pPendingCbfn)(void))"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_EXTI_GetHandle\fP (\fBEXTI_HandleTypeDef\fP *hexti, uint32_t ExtiLine)"
.br
.ti -1c
.RI "void \fBHAL_EXTI_IRQHandler\fP (\fBEXTI_HandleTypeDef\fP *hexti)"
.br
.ti -1c
.RI "uint32_t \fBHAL_EXTI_GetPending\fP (\fBEXTI_HandleTypeDef\fP *hexti, uint32_t Edge)"
.br
.ti -1c
.RI "void \fBHAL_EXTI_ClearPending\fP (\fBEXTI_HandleTypeDef\fP *hexti, uint32_t Edge)"
.br
.ti -1c
.RI "void \fBHAL_EXTI_GenerateSWI\fP (\fBEXTI_HandleTypeDef\fP *hexti)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Header file of EXTI HAL module\&. 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team 
.RE
.PP
\fBAttention\fP
.RS 4
.RE
.PP
Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&.
.PP
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component\&. If no LICENSE file comes with this software, it is provided AS-IS\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

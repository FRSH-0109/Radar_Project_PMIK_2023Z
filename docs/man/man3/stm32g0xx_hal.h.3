.TH "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h \- This file contains all the functions prototypes for the HAL module driver\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32g0xx_hal_conf\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSYSCFG_BOOT_MAINFLASH\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBSYSCFG_BOOT_SYSTEMFLASH\fP   \fBSYSCFG_CFGR1_MEM_MODE_0\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_BOOT_SRAM\fP   (\fBSYSCFG_CFGR1_MEM_MODE_1\fP | \fBSYSCFG_CFGR1_MEM_MODE_0\fP)"
.br
.ti -1c
.RI "#define \fBSYSCFG_BREAK_SP\fP   \fBSYSCFG_CFGR2_SPL\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_BREAK_LOCKUP\fP   \fBSYSCFG_CFGR2_CLL\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_BREAK_ECC\fP   \fBSYSCFG_CFGR2_ECCL\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_REMAP_PA11\fP   \fBSYSCFG_CFGR1_PA11_RMP\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_REMAP_PA12\fP   \fBSYSCFG_CFGR1_PA12_RMP\fP"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_IRDA_ENV_SEL_TIM16\fP   (\fBSYSCFG_CFGR1_IR_MOD_0\fP & \fBSYSCFG_CFGR1_IR_MOD_1\fP)"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_IRDA_ENV_SEL_USART1\fP   (\fBSYSCFG_CFGR1_IR_MOD_0\fP)"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_IRDA_ENV_SEL_USART2\fP   (\fBSYSCFG_CFGR1_IR_MOD_1\fP)"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_IRDA_POLARITY_NOT_INVERTED\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_IRDA_POLARITY_INVERTED\fP   \fBSYSCFG_CFGR1_IR_POL\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_PB6\fP   \fBSYSCFG_CFGR1_I2C_PB6_FMP\fP"
.br
.RI "Fast mode Plus driving capability on a specific GPIO\&. "
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_PB7\fP   \fBSYSCFG_CFGR1_I2C_PB7_FMP\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_PB8\fP   \fBSYSCFG_CFGR1_I2C_PB8_FMP\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_PB9\fP   \fBSYSCFG_CFGR1_I2C_PB9_FMP\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_PA9\fP   \fBSYSCFG_CFGR1_I2C_PA9_FMP\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_PA10\fP   \fBSYSCFG_CFGR1_I2C_PA10_FMP\fP"
.br
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_I2C1\fP   \fBSYSCFG_CFGR1_I2C1_FMP\fP"
.br
.RI "Fast mode Plus driving capability on a specific GPIO\&. "
.ti -1c
.RI "#define \fBSYSCFG_FASTMODEPLUS_I2C2\fP   \fBSYSCFG_CFGR1_I2C2_FMP\fP"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE0\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE1\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE2\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE3\fP   0x00000003U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE4\fP   0x00000004U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE5\fP   0x00000005U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE6\fP   0x00000006U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE7\fP   0x00000007U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE8\fP   0x00000008U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE9\fP   0x00000009U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE10\fP   0x0000000AU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE11\fP   0x0000000BU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE12\fP   0x0000000CU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE13\fP   0x0000000DU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE14\fP   0x0000000EU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE15\fP   0x0000000FU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE16\fP   0x00000010U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE17\fP   0x00000011U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE18\fP   0x00000012U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE19\fP   0x00000013U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE20\fP   0x00000014U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE21\fP   0x00000015U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE22\fP   0x00000016U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE23\fP   0x00000017U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE24\fP   0x00000018U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE25\fP   0x00000019U"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE26\fP   0x0000001AU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE27\fP   0x0000001BU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE28\fP   0x0000001CU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE29\fP   0x0000001DU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE30\fP   0x0000001EU"
.br
.ti -1c
.RI "#define \fBHAL_SYSCFG_ITLINE31\fP   0x0000001FU"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_WWDG\fP   ((\fBHAL_SYSCFG_ITLINE0\fP << 0x18U) | \fBSYSCFG_ITLINE0_SR_EWDG\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_RTC\fP   ((\fBHAL_SYSCFG_ITLINE2\fP << 0x18U) | \fBSYSCFG_ITLINE2_SR_RTC\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TAMPER\fP   ((\fBHAL_SYSCFG_ITLINE2\fP << 0x18U) | \fBSYSCFG_ITLINE2_SR_TAMPER\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_FLASH_ECC\fP   ((\fBHAL_SYSCFG_ITLINE3\fP << 0x18U) | \fBSYSCFG_ITLINE3_SR_FLASH_ECC\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_FLASH_ITF\fP   ((\fBHAL_SYSCFG_ITLINE3\fP << 0x18U) | \fBSYSCFG_ITLINE3_SR_FLASH_ITF\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_CLK_CTRL\fP   ((\fBHAL_SYSCFG_ITLINE4\fP << 0x18U) | \fBSYSCFG_ITLINE4_SR_CLK_CTRL\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI0\fP   ((\fBHAL_SYSCFG_ITLINE5\fP << 0x18U) | \fBSYSCFG_ITLINE5_SR_EXTI0\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI1\fP   ((\fBHAL_SYSCFG_ITLINE5\fP << 0x18U) | \fBSYSCFG_ITLINE5_SR_EXTI1\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI2\fP   ((\fBHAL_SYSCFG_ITLINE6\fP << 0x18U) | \fBSYSCFG_ITLINE6_SR_EXTI2\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI3\fP   ((\fBHAL_SYSCFG_ITLINE6\fP << 0x18U) | \fBSYSCFG_ITLINE6_SR_EXTI3\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI4\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI4\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI5\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI5\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI6\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI6\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI7\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI7\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI8\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI8\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI9\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI9\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI10\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI10\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI11\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI11\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI12\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI12\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI13\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI13\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI14\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI14\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_EXTI15\fP   ((\fBHAL_SYSCFG_ITLINE7\fP << 0x18U) | \fBSYSCFG_ITLINE7_SR_EXTI15\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_DMA1_CH1\fP   ((\fBHAL_SYSCFG_ITLINE9\fP << 0x18U) | \fBSYSCFG_ITLINE9_SR_DMA1_CH1\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_DMA1_CH2\fP   ((\fBHAL_SYSCFG_ITLINE10\fP << 0x18U) | \fBSYSCFG_ITLINE10_SR_DMA1_CH2\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_DMA1_CH3\fP   ((\fBHAL_SYSCFG_ITLINE10\fP << 0x18U) | \fBSYSCFG_ITLINE10_SR_DMA1_CH3\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_DMAMUX1\fP   ((\fBHAL_SYSCFG_ITLINE11\fP << 0x18U) | \fBSYSCFG_ITLINE11_SR_DMAMUX1\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_DMA1_CH4\fP   ((\fBHAL_SYSCFG_ITLINE11\fP << 0x18U) | \fBSYSCFG_ITLINE11_SR_DMA1_CH4\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_DMA1_CH5\fP   ((\fBHAL_SYSCFG_ITLINE11\fP << 0x18U) | \fBSYSCFG_ITLINE11_SR_DMA1_CH5\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_ADC\fP   ((\fBHAL_SYSCFG_ITLINE12\fP << 0x18U) | \fBSYSCFG_ITLINE12_SR_ADC\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM1_BRK\fP   ((\fBHAL_SYSCFG_ITLINE13\fP << 0x18U) | \fBSYSCFG_ITLINE13_SR_TIM1_BRK\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM1_UPD\fP   ((\fBHAL_SYSCFG_ITLINE13\fP << 0x18U) | \fBSYSCFG_ITLINE13_SR_TIM1_UPD\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM1_TRG\fP   ((\fBHAL_SYSCFG_ITLINE13\fP << 0x18U) | \fBSYSCFG_ITLINE13_SR_TIM1_TRG\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM1_CCU\fP   ((\fBHAL_SYSCFG_ITLINE13\fP << 0x18U) | \fBSYSCFG_ITLINE13_SR_TIM1_CCU\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM1_CC\fP   ((\fBHAL_SYSCFG_ITLINE14\fP << 0x18U) | \fBSYSCFG_ITLINE14_SR_TIM1_CC\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM3\fP   ((\fBHAL_SYSCFG_ITLINE16\fP << 0x18U) | \fBSYSCFG_ITLINE16_SR_TIM3_GLB\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM14\fP   ((\fBHAL_SYSCFG_ITLINE19\fP << 0x18U) | \fBSYSCFG_ITLINE19_SR_TIM14_GLB\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM16\fP   ((\fBHAL_SYSCFG_ITLINE21\fP << 0x18U) | \fBSYSCFG_ITLINE21_SR_TIM16_GLB\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_TIM17\fP   ((\fBHAL_SYSCFG_ITLINE22\fP << 0x18U) | \fBSYSCFG_ITLINE22_SR_TIM17_GLB\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_I2C1\fP   ((\fBHAL_SYSCFG_ITLINE23\fP << 0x18U) | \fBSYSCFG_ITLINE23_SR_I2C1_GLB\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_I2C2\fP   ((\fBHAL_SYSCFG_ITLINE24\fP << 0x18U) | \fBSYSCFG_ITLINE24_SR_I2C2_GLB\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_SPI1\fP   ((\fBHAL_SYSCFG_ITLINE25\fP << 0x18U) | \fBSYSCFG_ITLINE25_SR_SPI1\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_SPI2\fP   ((\fBHAL_SYSCFG_ITLINE26\fP << 0x18U) | \fBSYSCFG_ITLINE26_SR_SPI2\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_USART1\fP   ((\fBHAL_SYSCFG_ITLINE27\fP << 0x18U) | \fBSYSCFG_ITLINE27_SR_USART1_GLB\fP)"
.br
.ti -1c
.RI "#define \fBHAL_ITLINE_USART2\fP   ((\fBHAL_SYSCFG_ITLINE28\fP << 0x18U) | \fBSYSCFG_ITLINE28_SR_USART2_GLB\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_GET_PENDING_IT\fP(__SOURCE__)   (\fBSYSCFG\fP\->IT_LINE_SR[((__SOURCE__) >> 0x18U)] & ((__SOURCE__) & 0x00FFFFFF))"
.br
.RI "ISR wrapper check\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_REMAPMEMORY_FLASH\fP()   \fBCLEAR_BIT\fP(\fBSYSCFG\fP\->CFGR1, \fBSYSCFG_CFGR1_MEM_MODE\fP)"
.br
.RI "Main Flash memory mapped at 0x00000000\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_REMAPMEMORY_SYSTEMFLASH\fP()   \fBMODIFY_REG\fP(\fBSYSCFG\fP\->CFGR1, \fBSYSCFG_CFGR1_MEM_MODE\fP, \fBSYSCFG_CFGR1_MEM_MODE_0\fP)"
.br
.RI "System Flash memory mapped at 0x00000000\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_REMAPMEMORY_SRAM\fP()     \fBMODIFY_REG\fP(\fBSYSCFG\fP\->CFGR1, \fBSYSCFG_CFGR1_MEM_MODE\fP, (\fBSYSCFG_CFGR1_MEM_MODE_1\fP|\fBSYSCFG_CFGR1_MEM_MODE_0\fP))"
.br
.RI "Embedded SRAM mapped at 0x00000000\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_GET_BOOT_MODE\fP()   \fBREAD_BIT\fP(\fBSYSCFG\fP\->CFGR1, \fBSYSCFG_CFGR1_MEM_MODE\fP)"
.br
.RI "Return the boot mode as configured by user\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_BREAK_ECC_LOCK\fP()   \fBSET_BIT\fP(\fBSYSCFG\fP\->CFGR2, \fBSYSCFG_CFGR2_ECCL\fP)"
.br
.RI "SYSCFG Break ECC lock\&. Enable and lock the connection of Flash ECC error connection to TIM1 Break input\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_BREAK_LOCKUP_LOCK\fP()   \fBSET_BIT\fP(\fBSYSCFG\fP\->CFGR2, \fBSYSCFG_CFGR2_CLL\fP)"
.br
.RI "SYSCFG Break Cortex-M0+ Lockup lock\&. Enables and locks the connection of Cortex-M0+ LOCKUP (Hardfault) output to TIM1/15/16/17 Break input\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_BREAK_SRAMPARITY_LOCK\fP()   \fBSET_BIT\fP(\fBSYSCFG\fP\->CFGR2,\fBSYSCFG_CFGR2_SPL\fP)"
.br
.RI "SYSCFG Break SRAM PARITY lock Enables and locks the SRAM_PARITY error signal with Break Input of TIMER1/15/16/17\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_RAM_PARITYCHECK_DISABLE\fP()   (\fBSYSCFG\fP\->CFGR2 |= \fBSYSCFG_CFGR2_SPF\fP)"
.br
.RI "Parity check on RAM disable macro\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_CLEAR_FLAG\fP()   \fBSET_BIT\fP(\fBSYSCFG\fP\->CFGR2, \fBSYSCFG_CFGR2_SPF\fP)"
.br
.RI "Set the PEF bit to clear the SRAM Parity Error Flag\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_FASTMODEPLUS_ENABLE\fP(__FASTMODEPLUS__)"
.br
.RI "Fast-mode Plus driving capability enable/disable macros\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_FASTMODEPLUS_DISABLE\fP(__FASTMODEPLUS__)"
.br
.ti -1c
.RI "#define \fB__HAL_SYSCFG_GET_PENDING_IT\fP(__SOURCE__)     (\fBSYSCFG\fP\->IT_LINE_SR[((__SOURCE__) >> 0x18U)] & ((__SOURCE__) & 0x00FFFFFFU))"
.br
.RI "ISR wrapper check\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_IRDA_ENV_SELECTION\fP(__SOURCE__)"
.br
.RI "selection of the modulation envelope signal macro, using bits [7:6] of SYSCFG_CFGR1 register "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_GET_IRDA_ENV_SELECTION\fP()   ((\fBSYSCFG\fP\->CFGR1) & 0x000000C0U)"
.br
.ti -1c
.RI "#define \fB__HAL_SYSCFG_IRDA_OUT_POLARITY_SELECTION\fP(__SEL__)"
.br
.RI "IROut Polarity Selection, using bit[5] of SYSCFG_CFGR1 register\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_GET_POLARITY\fP()   \fBREAD_BIT\fP(\fBSYSCFG\fP\->CFGR1, \fBSYSCFG_CFGR1_IR_POL\fP)"
.br
.RI "Return the IROut Polarity mode as configured by user\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_BREAK_ENABLE\fP(__BREAK__)"
.br
.RI "Break input to TIM1/15/16/17 capability enable/disable macros\&. "
.ti -1c
.RI "#define \fB__HAL_SYSCFG_BREAK_DISABLE\fP(__BREAK__)"
.br
.ti -1c
.RI "#define \fBIS_SYSCFG_BREAK_CONFIG\fP(__CONFIG__)"
.br
.ti -1c
.RI "#define \fBIS_HAL_SYSCFG_IRDA_ENV_SEL\fP(SEL)"
.br
.ti -1c
.RI "#define \fBIS_HAL_SYSCFG_IRDA_POL_SEL\fP(SEL)"
.br
.ti -1c
.RI "#define \fBIS_SYSCFG_FASTMODEPLUS\fP(__PIN__)"
.br
.ti -1c
.RI "#define \fBIS_HAL_REMAP_PIN\fP(RMP)"
.br
.ti -1c
.RI "#define \fBIS_TICKFREQ\fP(FREQ)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBHAL_TickFreqTypeDef\fP { \fBHAL_TICK_FREQ_10HZ\fP = 100U, \fBHAL_TICK_FREQ_100HZ\fP = 10U, \fBHAL_TICK_FREQ_1KHZ\fP = 1U, \fBHAL_TICK_FREQ_DEFAULT\fP = HAL_TICK_FREQ_1KHZ }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_Init\fP (void)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_DeInit\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_MspInit\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_MspDeInit\fP (void)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_InitTick\fP (uint32_t TickPriority)"
.br
.ti -1c
.RI "void \fBHAL_IncTick\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_Delay\fP (uint32_t Delay)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetTick\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetTickPrio\fP (void)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_SetTickFreq\fP (\fBHAL_TickFreqTypeDef\fP Freq)"
.br
.ti -1c
.RI "\fBHAL_TickFreqTypeDef\fP \fBHAL_GetTickFreq\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_SuspendTick\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_ResumeTick\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetHalVersion\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetREVID\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetDEVID\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetUIDw0\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetUIDw1\fP (void)"
.br
.ti -1c
.RI "uint32_t \fBHAL_GetUIDw2\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_DBGMCU_EnableDBGStopMode\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_DBGMCU_DisableDBGStopMode\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_DBGMCU_EnableDBGStandbyMode\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_DBGMCU_DisableDBGStandbyMode\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_SYSCFG_EnableIOAnalogSwitchBooster\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_SYSCFG_DisableIOAnalogSwitchBooster\fP (void)"
.br
.ti -1c
.RI "void \fBHAL_SYSCFG_EnableRemap\fP (uint32_t PinRemap)"
.br
.ti -1c
.RI "void \fBHAL_SYSCFG_DisableRemap\fP (uint32_t PinRemap)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fB__IO\fP uint32_t \fBuwTick\fP"
.br
.ti -1c
.RI "uint32_t \fBuwTickPrio\fP"
.br
.ti -1c
.RI "\fBHAL_TickFreqTypeDef\fP \fBuwTickFreq\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This file contains all the functions prototypes for the HAL module driver\&. 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team 
.RE
.PP
\fBAttention\fP
.RS 4
.RE
.PP
Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&.
.PP
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component\&. If no LICENSE file comes with this software, it is provided AS-IS\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

.TH "RCC_APB1_Force_Release_Reset" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RCC_APB1_Force_Release_Reset \- APB1 Peripheral Force Release Reset
.PP
 \- Force or release APB1 peripheral reset\&.  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__HAL_RCC_APB1_FORCE_RESET\fP()   \fBWRITE_REG\fP(\fBRCC\fP\->APBRSTR1, 0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_TIM3_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_TIM3RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_TIM6_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM6RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_TIM7_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM7RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_SPI2_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_SPI2RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_USART2_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_USART2RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_USART3_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART3RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_USART4_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART4RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_I2C1_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C1RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_I2C2_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C2RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_DBGMCU_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_DBGRST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_PWR_FORCE_RESET\fP()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_PWRRST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_APB1_RELEASE_RESET\fP()   \fBWRITE_REG\fP(\fBRCC\fP\->APBRSTR1, 0x00000000U)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_TIM3_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_TIM3RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_TIM6_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM6RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_TIM7_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM7RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_SPI2_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_SPI2RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_USART2_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_USART2RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_USART3_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART3RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_USART4_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART4RST)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_I2C1_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C1RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_I2C2_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C2RST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_DBGMCU_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_DBGRST\fP)"
.br
.ti -1c
.RI "#define \fB__HAL_RCC_PWR_RELEASE_RESET\fP()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_PWRRST\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Force or release APB1 peripheral reset\&. 


.SH "Macro Definition Documentation"
.PP 
.SS "#define __HAL_RCC_APB1_FORCE_RESET()   \fBWRITE_REG\fP(\fBRCC\fP\->APBRSTR1, 0xFFFFFFFFU)"

.SS "#define __HAL_RCC_APB1_RELEASE_RESET()   \fBWRITE_REG\fP(\fBRCC\fP\->APBRSTR1, 0x00000000U)"

.SS "#define __HAL_RCC_DBGMCU_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_DBGRST\fP)"

.SS "#define __HAL_RCC_DBGMCU_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_DBGRST\fP)"

.SS "#define __HAL_RCC_I2C1_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C1RST\fP)"

.SS "#define __HAL_RCC_I2C1_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C1RST\fP)"

.SS "#define __HAL_RCC_I2C2_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C2RST\fP)"

.SS "#define __HAL_RCC_I2C2_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_I2C2RST\fP)"

.SS "#define __HAL_RCC_PWR_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_PWRRST\fP)"

.SS "#define __HAL_RCC_PWR_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_PWRRST\fP)"

.SS "#define __HAL_RCC_SPI2_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_SPI2RST\fP)"

.SS "#define __HAL_RCC_SPI2_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_SPI2RST\fP)"

.SS "#define __HAL_RCC_TIM3_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_TIM3RST\fP)"

.SS "#define __HAL_RCC_TIM3_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_TIM3RST\fP)"

.SS "#define __HAL_RCC_TIM6_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM6RST)"

.SS "#define __HAL_RCC_TIM6_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM6RST)"

.SS "#define __HAL_RCC_TIM7_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM7RST)"

.SS "#define __HAL_RCC_TIM7_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_TIM7RST)"

.SS "#define __HAL_RCC_USART2_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_USART2RST\fP)"

.SS "#define __HAL_RCC_USART2_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, \fBRCC_APBRSTR1_USART2RST\fP)"

.SS "#define __HAL_RCC_USART3_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART3RST)"

.SS "#define __HAL_RCC_USART3_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART3RST)"

.SS "#define __HAL_RCC_USART4_FORCE_RESET()   \fBSET_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART4RST)"

.SS "#define __HAL_RCC_USART4_RELEASE_RESET()   \fBCLEAR_BIT\fP(\fBRCC\fP\->APBRSTR1, RCC_APBRSTR1_USART4RST)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

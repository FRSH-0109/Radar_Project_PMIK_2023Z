.TH "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_flash_ex.c" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_flash_ex.c \- Extended FLASH HAL module driver\&. This file provides firmware functions to manage the following functionalities of the FLASH extended peripheral:  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32g0xx_hal\&.h'\fP
.br

.SH "Detailed Description"
.PP 
Extended FLASH HAL module driver\&. This file provides firmware functions to manage the following functionalities of the FLASH extended peripheral: 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team
.IP "\(bu" 2
Extended programming operations functions
.PP
.RE
.PP
.PP
.nf
==============================================================================
                  ##### Flash Extended features #####
 ==============================================================================

 [\&.\&.] Comparing to other previous devices, the FLASH interface for STM32G0xx
      devices contains the following additional features

      (+) Capacity up to 128 Kbytes with single bank architecture supporting read-while-write
          capability (RWW)
      (+) Single bank memory organization
      (+) PCROP protection

                       ##### How to use this driver #####
==============================================================================
 [\&.\&.] This driver provides functions to configure and program the FLASH memory
      of all STM32G0xx devices\&. It includes
     (#) Flash Memory Erase functions:
          (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
               HAL_FLASH_Lock() functions
          (++) Erase function: Erase page, erase all sectors
          (++) There are two modes of erase :
            (+++) Polling Mode using HAL_FLASHEx_Erase()
            (+++) Interrupt Mode using HAL_FLASHEx_Erase_IT()

     (#) Option Bytes Programming function: Use HAL_FLASHEx_OBProgram() to :
       (++) Set/Reset the write protection
       (++) Set the Read protection Level
       (++) Program the user Option Bytes
       (++) Configure the PCROP protection
       (++) Set Securable memory area and boot entry point

     (#) Get Option Bytes Configuration function: Use HAL_FLASHEx_OBGetConfig() to :
       (++) Get the value of a write protection area
       (++) Know if the read protection is activated
       (++) Get the value of the user Option Bytes
       (++) Get Securable memory area and boot entry point information

     (#) Enable or disable debugger usage using HAL_FLASHEx_EnableDebugger and
         HAL_FLASHEx_DisableDebugger\&.

     (#) Check is flash content is empty or not using HAL_FLASHEx_FlashEmptyCheck\&.
         and modify this setting (for flash loader purpose e\&.g\&.) using
         HAL_FLASHEx_ForceFlashEmpty\&.

     (#) Enable securable memory area protectionusing HAL_FLASHEx_EnableSecMemProtection.fi
.PP
.PP
\fBAttention\fP
.RS 4
.RE
.PP
Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&.
.PP
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component\&. If no LICENSE file comes with this software, it is provided AS-IS\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

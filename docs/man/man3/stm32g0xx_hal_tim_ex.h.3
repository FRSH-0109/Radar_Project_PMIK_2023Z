.TH "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim_ex.h" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim_ex.h \- Header file of TIM HAL Extended module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32g0xx_hal_def\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBTIM_HallSensor_InitTypeDef\fP"
.br
.RI "TIM Hall sensor Configuration Structure definition\&. "
.ti -1c
.RI "struct \fBTIMEx_BreakInputConfigTypeDef\fP"
.br
.RI "TIM Break/Break2 input configuration\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTIM_TIM1_ETR_GPIO\fP   0x00000000U                                 /* !< TIM1_ETR is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM1_ETR_ADC1_AWD1\fP   (\fBTIM1_AF1_ETRSEL_1\fP | \fBTIM1_AF1_ETRSEL_0\fP)     /* !< TIM1_ETR is connected to \fBADC1\fP AWD1 */"
.br
.ti -1c
.RI "#define \fBTIM_TIM1_ETR_ADC1_AWD2\fP   \fBTIM1_AF1_ETRSEL_2\fP                           /* !< TIM1_ETR is connected to \fBADC1\fP AWD2 */"
.br
.ti -1c
.RI "#define \fBTIM_TIM1_ETR_ADC1_AWD3\fP   (\fBTIM1_AF1_ETRSEL_2\fP | \fBTIM1_AF1_ETRSEL_0\fP)     /* !< TIM1_ETR is connected to \fBADC1\fP AWD3 */"
.br
.ti -1c
.RI "#define \fBTIM_BREAKINPUT_BRK\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBTIM_BREAKINPUT_BRK2\fP   0x00000002U"
.br
.ti -1c
.RI "#define \fBTIM_BREAKINPUTSOURCE_BKIN\fP   0x00000001U                               /* !< An external source (GPIO) is connected to the BKIN pin  */"
.br
.ti -1c
.RI "#define \fBTIM_BREAKINPUTSOURCE_DISABLE\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_BREAKINPUTSOURCE_ENABLE\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBTIM_BREAKINPUTSOURCE_POLARITY_LOW\fP   0x00000001U"
.br
.ti -1c
.RI "#define \fBTIM_BREAKINPUTSOURCE_POLARITY_HIGH\fP   0x00000000U"
.br
.ti -1c
.RI "#define \fBTIM_TIM1_TI1_GPIO\fP   0x00000000U                       /* !< TIM1_TI1 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM1_TI2_GPIO\fP   0x00000000U                       /* !< TIM1_TI2 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM1_TI3_GPIO\fP   0x00000000U                       /* !< TIM1_TI3 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM3_TI1_GPIO\fP   0x00000000U                       /* !< TIM3_TI1 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM3_TI2_GPIO\fP   0x00000000U                       /* !< TIM3_TI2 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM3_TI3_GPIO\fP   0x00000000U                       /* !< TIM3_TI3 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM14_TI1_GPIO\fP   0x00000000U                       /* !< TIM14_TI1 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM14_TI1_RTC\fP   0x00000001U                       /* !< TIM14_TI1 is connected to \fBRTC\fP clock */"
.br
.ti -1c
.RI "#define \fBTIM_TIM14_TI1_HSE_32\fP   0x00000002U                       /* !< TIM14_TI1 is connected to HSE div 32 */"
.br
.ti -1c
.RI "#define \fBTIM_TIM14_TI1_MCO\fP   0x00000003U                       /* !< TIM14_TI1 is connected to MCO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM16_TI1_GPIO\fP   0x00000000U                       /* !< TIM16_TI1 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM16_TI1_LSI\fP   0x00000001U                       /* !< TIM16_TI1 is connected to LSI */"
.br
.ti -1c
.RI "#define \fBTIM_TIM16_TI1_LSE\fP   0x00000002U                       /* !< TIM16_TI1 is connected to LSE */"
.br
.ti -1c
.RI "#define \fBTIM_TIM16_TI1_RTC_WAKEUP\fP   0x00000003U                       /* !< TIM16_TI1 is connected to TRC wakeup interrupt */"
.br
.ti -1c
.RI "#define \fBTIM_TIM17_TI1_GPIO\fP   0x00000000U                       /* !< TIM17_TI1 is connected to GPIO */"
.br
.ti -1c
.RI "#define \fBTIM_TIM17_TI1_HSE_32\fP   0x00000002U                       /* !< TIM17_TI1 is connected to HSE div 32 */"
.br
.ti -1c
.RI "#define \fBTIM_TIM17_TI1_MCO\fP   0x00000003U                       /* !< TIM17_TI1 is connected to MCO */"
.br
.ti -1c
.RI "#define \fBIS_TIM_REMAP\fP(__REMAP__)   ((((__REMAP__) & 0xFFFC3FFFU) == 0x00000000U))"
.br
.ti -1c
.RI "#define \fBIS_TIM_BREAKINPUT\fP(__BREAKINPUT__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_BREAKINPUTSOURCE\fP(__SOURCE__)   ((__SOURCE__) == \fBTIM_BREAKINPUTSOURCE_BKIN\fP)"
.br
.ti -1c
.RI "#define \fBIS_TIM_BREAKINPUTSOURCE_STATE\fP(__STATE__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_BREAKINPUTSOURCE_POLARITY\fP(__POLARITY__)"
.br
.ti -1c
.RI "#define \fBIS_TIM_TISEL\fP(__TISEL__)   ((((__TISEL__) & 0xF0F0F0F0U) == 0x00000000U))"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_Init\fP (\fBTIM_HandleTypeDef\fP *htim, const \fBTIM_HallSensor_InitTypeDef\fP *sConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_DeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIMEx_HallSensor_MspInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIMEx_HallSensor_MspDeInit\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_Start\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_Stop\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t *pData, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_HallSensor_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OCN_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OCN_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OCN_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OCN_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OCN_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel, const uint32_t *pData, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OCN_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_PWMN_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_PWMN_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_PWMN_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_PWMN_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_PWMN_Start_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel, const uint32_t *pData, uint16_t Length)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_PWMN_Stop_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OnePulseN_Start\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OnePulseN_Stop\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OnePulseN_Start_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_OnePulseN_Stop_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t OutputChannel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_ConfigCommutEvent\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t InputTrigger, uint32_t CommutationSource)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_ConfigCommutEvent_IT\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t InputTrigger, uint32_t CommutationSource)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_ConfigCommutEvent_DMA\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t InputTrigger, uint32_t CommutationSource)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_MasterConfigSynchronization\fP (\fBTIM_HandleTypeDef\fP *htim, const \fBTIM_MasterConfigTypeDef\fP *sMasterConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_ConfigBreakDeadTime\fP (\fBTIM_HandleTypeDef\fP *htim, const \fBTIM_BreakDeadTimeConfigTypeDef\fP *sBreakDeadTimeConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_ConfigBreakInput\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t BreakInput, const \fBTIMEx_BreakInputConfigTypeDef\fP *sBreakInputConfig)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_GroupChannel5\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Channels)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_RemapConfig\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t Remap)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_TISelection\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t TISelection, uint32_t Channel)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_DisarmBreakInput\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t BreakInput)"
.br
.ti -1c
.RI "\fBHAL_StatusTypeDef\fP \fBHAL_TIMEx_ReArmBreakInput\fP (\fBTIM_HandleTypeDef\fP *htim, uint32_t BreakInput)"
.br
.ti -1c
.RI "void \fBHAL_TIMEx_CommutCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIMEx_CommutHalfCpltCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIMEx_BreakCallback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "void \fBHAL_TIMEx_Break2Callback\fP (\fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_StateTypeDef\fP \fBHAL_TIMEx_HallSensor_GetState\fP (const \fBTIM_HandleTypeDef\fP *htim)"
.br
.ti -1c
.RI "\fBHAL_TIM_ChannelStateTypeDef\fP \fBHAL_TIMEx_GetChannelNState\fP (const \fBTIM_HandleTypeDef\fP *htim, uint32_t ChannelN)"
.br
.ti -1c
.RI "void \fBTIMEx_DMACommutationCplt\fP (\fBDMA_HandleTypeDef\fP *hdma)"
.br
.ti -1c
.RI "void \fBTIMEx_DMACommutationHalfCplt\fP (\fBDMA_HandleTypeDef\fP *hdma)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Header file of TIM HAL Extended module\&. 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team 
.RE
.PP
\fBAttention\fP
.RS 4
.RE
.PP
Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&.
.PP
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component\&. If no LICENSE file comes with this software, it is provided AS-IS\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

.TH "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_exti.c" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_exti.c \- EXTI HAL module driver\&. This file provides firmware functions to manage the following functionalities of the General Purpose Input/Output (EXTI) peripheral:  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32g0xx_hal\&.h'\fP
.br

.SH "Detailed Description"
.PP 
EXTI HAL module driver\&. This file provides firmware functions to manage the following functionalities of the General Purpose Input/Output (EXTI) peripheral: 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team
.IP "\(bu" 2
Initialization and de-initialization functions
.IP "\(bu" 2
IO operation functions
.PP
.RE
.PP
\fBAttention\fP
.RS 4
.RE
.PP
Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&.
.PP
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component\&. If no LICENSE file comes with this software, it is provided AS-IS\&.
.PP
.PP
.nf
==============================================================================
                  ##### EXTI Peripheral features #####
==============================================================================
[\&.\&.]
  (+) Each Exti line can be configured within this driver\&.

  (+) Exti line can be configured in 3 different modes
      (++) Interrupt
      (++) Event
      (++) Both of them

  (+) Configurable Exti lines can be configured with 3 different triggers
      (++) Rising
      (++) Falling
      (++) Both of them

  (+) When set in interrupt mode, configurable Exti lines have two diffenrents
      interrupt pending registers which allow to distinguish which transition
      occurs:
      (++) Rising edge pending interrupt
      (++) Falling

  (+) Exti lines 0 to 15 are linked to gpio pin number 0 to 15\&. Gpio port can
      be selected through multiplexer\&.

                   ##### How to use this driver #####
==============================================================================
[\&.\&.]

  (#) Configure the EXTI line using HAL_EXTI_SetConfigLine()\&.
      (++) Choose the interrupt line number by setting 'Line' member from
           EXTI_ConfigTypeDef structure\&.
      (++) Configure the interrupt and/or event mode using 'Mode' member from
           EXTI_ConfigTypeDef structure\&.
      (++) For configurable lines, configure rising and/or falling trigger
           'Trigger' member from EXTI_ConfigTypeDef structure\&.
      (++) For Exti lines linked to gpio, choose gpio port using 'GPIOSel'
           member from GPIO_InitTypeDef structure\&.

  (#) Get current Exti configuration of a dedicated line using
      HAL_EXTI_GetConfigLine()\&.
      (++) Provide exiting handle as parameter\&.
      (++) Provide pointer on EXTI_ConfigTypeDef structure as second parameter\&.

  (#) Clear Exti configuration of a dedicated line using HAL_EXTI_GetConfigLine()\&.
      (++) Provide exiting handle as parameter\&.

  (#) Register callback to treat Exti interrupts using HAL_EXTI_RegisterCallback()\&.
      (++) Provide exiting handle as first parameter\&.
      (++) Provide which callback will be registered using one value from
           EXTI_CallbackIDTypeDef\&.
      (++) Provide callback function pointer\&.

  (#) Get interrupt pending bit using HAL_EXTI_GetPending()\&.

  (#) Clear interrupt pending bit using HAL_EXTI_GetPending()\&.

  (#) Generate software interrupt using HAL_EXTI_GenerateSWI()\&..fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

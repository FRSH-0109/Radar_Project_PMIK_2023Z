.TH "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_cortex.c" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_cortex.c \- CORTEX HAL module driver\&. This file provides firmware functions to manage the following functionalities of the CORTEX:  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32g0xx_hal\&.h'\fP
.br

.SH "Detailed Description"
.PP 
CORTEX HAL module driver\&. This file provides firmware functions to manage the following functionalities of the CORTEX: 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team
.IP "\(bu" 2
Initialization and Configuration functions
.IP "\(bu" 2
Peripheral Control functions
.PP
.RE
.PP
.PP
.nf
==============================================================================
                      ##### How to use this driver #####
==============================================================================
  [\&.\&.]
  *** How to configure Interrupts using CORTEX HAL driver ***
  ===========================================================
  [\&.\&.]
  This section provides functions allowing to configure the NVIC interrupts (IRQ)\&.
  The Cortex M0+ exceptions are managed by CMSIS functions\&.
    (#) Enable and Configure the priority of the selected IRQ Channels\&.
           The priority can be 0\&.\&.3\&.

      -@- Lower priority values gives higher priority\&.
      -@- Priority Order:
          (#@) Lowest priority\&.
          (#@) Lowest hardware priority (IRQn position)\&.

    (#)  Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority()

    (#)  Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ()

    -@-  Negative value of IRQn_Type are not allowed\&.

  *** How to configure Systick using CORTEX HAL driver ***
  ========================================================
  [\&.\&.]
  Setup SysTick Timer for time base\&.

 (+) The HAL_SYSTICK_Config()function calls the SysTick_Config() function which
     is a CMSIS function that:
      (++) Configures the SysTick Reload register with value passed as function parameter\&.
      (++) Configures the SysTick IRQ priority to the lowest value (0x03)\&.
      (++) Resets the SysTick Counter register\&.
      (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK)\&.
      (++) Enables the SysTick Interrupt\&.
      (++) Starts the SysTick Counter\&.

 (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
     __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
     HAL_SYSTICK_Config() function call\&. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
     inside the stm32g0xx_hal_cortex\&.h file\&.

 (+) You can change the SysTick IRQ priority by calling the
     HAL_NVIC_SetPriority(SysTick_IRQn,\&.\&.\&.) function just after the HAL_SYSTICK_Config() function
     call\&. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS function\&.

 (+) To adjust the SysTick time base, use the following formula:

     Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
     (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
     (++) Reload Value should not exceed 0xFFFFFF.fi
.PP
.PP
\fBAttention\fP
.RS 4
.RE
.PP
Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&.
.PP
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component\&. If no LICENSE file comes with this software, it is provided AS-IS\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

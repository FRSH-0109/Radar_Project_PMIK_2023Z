.TH "CMSIS_CORE" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CMSIS_CORE \- Status and Control Registers
.PP
 \- Core Register type definitions\&.  

.SH SYNOPSIS
.br
.PP
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBNested Vectored Interrupt Controller (NVIC)\fP"
.br
.RI "Type definitions for the NVIC Registers\&. "
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "union \fBAPSR_Type\fP"
.br
.RI "Union type to access the Application Program Status Register (APSR)\&. "
.ti -1c
.RI "union \fBIPSR_Type\fP"
.br
.RI "Union type to access the Interrupt Program Status Register (IPSR)\&. "
.ti -1c
.RI "union \fBxPSR_Type\fP"
.br
.RI "Union type to access the Special-Purpose Program Status Registers (xPSR)\&. "
.ti -1c
.RI "union \fBCONTROL_Type\fP"
.br
.RI "Union type to access the Control Registers (CONTROL)\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Msk\fP   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Msk\fP   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Msk\fP   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Msk\fP   (1UL << \fBSCB_CCR_BP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Msk\fP   (1UL << \fBSCB_CCR_IC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Msk\fP   (1UL << \fBSCB_CCR_DC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Msk\fP   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Msk\fP   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Msk\fP   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Msk\fP   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Msk\fP   (1UL << \fBSCB_CCR_BP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Msk\fP   (1UL << \fBSCB_CCR_IC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Msk\fP   (1UL << \fBSCB_CCR_DC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Msk\fP   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Msk\fP   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Msk\fP   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Msk\fP   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Msk\fP   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Msk\fP   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Msk\fP   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Msk\fP   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Msk\fP   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Msk\fP   (1UL << \fBSCB_CCR_BP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Msk\fP   (1UL << \fBSCB_CCR_IC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Msk\fP   (1UL << \fBSCB_CCR_DC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Msk\fP   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Msk\fP   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Msk\fP   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Msk\fP   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Msk\fP   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Msk\fP   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Msk\fP   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Msk\fP   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Msk\fP   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Msk\fP   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Msk\fP   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Msk\fP   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Msk\fP   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Msk\fP   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Msk\fP   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Msk\fP   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Msk\fP   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Msk\fP   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Msk\fP   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Msk\fP   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Msk\fP   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_SZ_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_SZ_Msk\fP   (0xFUL << \fBSCB_ITCMCR_SZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RETEN_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RETEN_Msk\fP   (1UL << \fBSCB_ITCMCR_RETEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RMW_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RMW_Msk\fP   (1UL << \fBSCB_ITCMCR_RMW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_EN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_EN_Msk\fP   (1UL /*<< \fBSCB_ITCMCR_EN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_SZ_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_SZ_Msk\fP   (0xFUL << \fBSCB_DTCMCR_SZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RETEN_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RETEN_Msk\fP   (1UL << \fBSCB_DTCMCR_RETEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RMW_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RMW_Msk\fP   (1UL << \fBSCB_DTCMCR_RMW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_EN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_EN_Msk\fP   (1UL /*<< \fBSCB_DTCMCR_EN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_SZ_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_SZ_Msk\fP   (7UL << \fBSCB_AHBPCR_SZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_EN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_EN_Msk\fP   (1UL /*<< \fBSCB_AHBPCR_EN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CACR_FORCEWT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_CACR_FORCEWT_Msk\fP   (1UL << \fBSCB_CACR_FORCEWT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CACR_ECCEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CACR_ECCEN_Msk\fP   (1UL << \fBSCB_CACR_ECCEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CACR_SIWT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CACR_SIWT_Msk\fP   (1UL /*<< \fBSCB_CACR_SIWT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_INITCOUNT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_INITCOUNT_Msk\fP   (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_TPRI_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_TPRI_Msk\fP   (0x1FFUL << SCB_AHBPCR_TPRI_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_CTL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_CTL_Msk\fP   (3UL /*<< SCB_AHBPCR_CTL_Pos*/)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIMTYPE_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIMTYPE_Msk\fP   (3UL << \fBSCB_ABFSR_AXIMTYPE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_EPPB_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_EPPB_Msk\fP   (1UL << \fBSCB_ABFSR_EPPB_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIM_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIM_Msk\fP   (1UL << \fBSCB_ABFSR_AXIM_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AHBP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AHBP_Msk\fP   (1UL << \fBSCB_ABFSR_AHBP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_DTCM_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_DTCM_Msk\fP   (1UL << \fBSCB_ABFSR_DTCM_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_ITCM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_ITCM_Msk\fP   (1UL /*<< \fBSCB_ABFSR_ITCM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLBASE_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLBASE_Msk\fP   (1UL << \fBSCB_VTOR_TBLBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x3FFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Msk\fP   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Msk\fP   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Msk\fP   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Msk\fP   (0x3UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Msk\fP   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Msk\fP   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Msk\fP   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Msk\fP   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Msk\fP   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Msk\fP   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFNC_RETURN\fP   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_PREFIX\fP   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_S\fP   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_DCRS\fP   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_FTYPE\fP   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_MODE\fP   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_SPSEL\fP   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_ES\fP   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"
.br
.ti -1c
.RI "#define \fBEXC_INTEGRITY_SIGNATURE\fP   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Msk\fP   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Msk\fP   (0x3UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Msk\fP   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data2_Msk\fP   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data1_Msk\fP   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data0_Msk\fP   (0xFFUL /*<< \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID2S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID1S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data2_Msk\fP   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data1_Msk\fP   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data0_Msk\fP   (0xFFUL /*<< \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID2S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID1S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Msk\fP   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Msk\fP   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Msk\fP   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Msk\fP   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Msk\fP   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFNC_RETURN\fP   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_PREFIX\fP   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_S\fP   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_DCRS\fP   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_FTYPE\fP   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_MODE\fP   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_SPSEL\fP   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_ES\fP   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"
.br
.ti -1c
.RI "#define \fBEXC_INTEGRITY_SIGNATURE\fP   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISFOLD_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISFOLD_Msk\fP   (1UL << \fBSCnSCB_ACTLR_DISFOLD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISDEFWBUF_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISDEFWBUF_Msk\fP   (1UL << \fBSCnSCB_ACTLR_DISDEFWBUF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Msk\fP   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Msk\fP   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Msk\fP   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Msk\fP   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Msk\fP   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Msk\fP   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Msk\fP   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Msk\fP   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Msk\fP   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Msk\fP   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Msk\fP   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Msk\fP   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Msk\fP   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Msk\fP   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data2_Msk\fP   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data1_Msk\fP   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data0_Msk\fP   (0xFFUL /*<< \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID2S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID1S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data2_Msk\fP   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data1_Msk\fP   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data0_Msk\fP   (0xFFUL /*<< \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID2S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID1S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Msk\fP   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Msk\fP   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Msk\fP   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Msk\fP   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Msk\fP   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Msk\fP   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Msk\fP   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Msk\fP   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Msk\fP   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Msk\fP   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Msk\fP   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Msk\fP   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Msk\fP   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Msk\fP   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Msk\fP   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Msk\fP   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Msk\fP   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Msk\fP   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Msk\fP   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Msk\fP   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Msk\fP   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Msk\fP   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Msk\fP   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR2_VFP_Misc_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR2_VFP_Misc_Msk\fP   (0xFUL << \fBFPU_MVFR2_VFP_Misc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Msk\fP   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Msk\fP   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Msk\fP   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Msk\fP   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBFPU_BASE\fP   (\fBSCS_BASE\fP +  0x0F30UL)"
.br
.ti -1c
.RI "#define \fBFPU\fP   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
.br
.ti -1c
.RI "#define \fBFNC_RETURN\fP   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_PREFIX\fP   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_S\fP   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_DCRS\fP   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_FTYPE\fP   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_MODE\fP   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_SPSEL\fP   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_ES\fP   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"
.br
.ti -1c
.RI "#define \fBEXC_INTEGRITY_SIGNATURE\fP   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER_FPU\fP   (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after return, restore floating\-point state */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP_FPU\fP   (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after return, restore floating\-point state  */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP_FPU\fP   (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after return, restore floating\-point state  */"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.in -1c
.in +1c
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Msk\fP   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Msk\fP   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Msk\fP   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Msk\fP   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Msk\fP   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Msk\fP   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBAPSR_N_Msk\fP   (1UL << \fBAPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBAPSR_Z_Msk\fP   (1UL << \fBAPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBAPSR_C_Msk\fP   (1UL << \fBAPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBAPSR_V_Msk\fP   (1UL << \fBAPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBAPSR_Q_Msk\fP   (1UL << \fBAPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBIPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBxPSR_N_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBxPSR_N_Msk\fP   (1UL << \fBxPSR_N_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBxPSR_Z_Msk\fP   (1UL << \fBxPSR_Z_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_C_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBxPSR_C_Msk\fP   (1UL << \fBxPSR_C_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_V_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBxPSR_V_Msk\fP   (1UL << \fBxPSR_V_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBxPSR_Q_Msk\fP   (1UL << \fBxPSR_Q_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_2_Msk\fP   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_T_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBxPSR_T_Msk\fP   (1UL << \fBxPSR_T_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBxPSR_ICI_IT_1_Msk\fP   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBxPSR_ISR_Msk\fP   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCONTROL_SPSEL_Msk\fP   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCONTROL_nPRIV_Msk\fP   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   \fBSCB_ICSR_PENDNMISET_Pos\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   \fBSCB_ICSR_PENDNMISET_Msk\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Msk\fP   (0x3UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Msk\fP   (0x3UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Msk\fP   (0x3UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Msk\fP   (0x3UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x1UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Msk\fP   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Msk\fP   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   \fBSCB_ICSR_PENDNMISET_Pos\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   \fBSCB_ICSR_PENDNMISET_Msk\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   \fBSCB_ICSR_PENDNMISET_Pos\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   \fBSCB_ICSR_PENDNMISET_Msk\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   \fBSCB_ICSR_PENDNMISET_Pos\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   \fBSCB_ICSR_PENDNMISET_Msk\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x3FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Msk\fP   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Msk\fP   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Msk\fP   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Msk\fP   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Msk\fP   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Msk\fP   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Msk\fP   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Msk\fP   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Msk\fP   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   \fBSCB_ICSR_PENDNMISET_Pos\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   \fBSCB_ICSR_PENDNMISET_Msk\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x3FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   \fBSCB_ICSR_PENDNMISET_Pos\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   \fBSCB_ICSR_PENDNMISET_Msk\fP"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x3FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Msk\fP   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Msk\fP   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISFOLD_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISFOLD_Msk\fP   (1UL << \fBSCnSCB_ACTLR_DISFOLD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISDEFWBUF_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISDEFWBUF_Msk\fP   (1UL << \fBSCnSCB_ACTLR_DISDEFWBUF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Msk\fP   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Msk\fP   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Msk\fP   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Msk\fP   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Msk\fP   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Msk\fP   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Msk\fP   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Msk\fP   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBNVIC_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_RETTOBASE_Msk\fP   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIGROUP_Msk\fP   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTRESET_Msk\fP   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DIV_0_TRP_Msk\fP   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_USERSETMPEND_Msk\fP   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_NONBASETHRDENA_Msk\fP   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SYSTICKACT_Msk\fP   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_PENDSVACT_Msk\fP   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MONITORACT_Msk\fP   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLACT_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_USGFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_BUSFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_MEMFAULTACT_Msk\fP   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_USGFAULTSR_Msk\fP   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BUSFAULTSR_Msk\fP   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MEMFAULTSR_Msk\fP   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MMARVALID_Msk\fP   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MUNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DACCVIOL_Msk\fP   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IACCVIOL_Msk\fP   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_BFARVALID_Msk\fP   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKERR_Msk\fP   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNSTKERR_Msk\fP   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IMPRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_PRECISERR_Msk\fP   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_IBUSERR_Msk\fP   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_DIVBYZERO_Msk\fP   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNALIGNED_Msk\fP   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_NOCP_Msk\fP   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVPC_Msk\fP   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_INVSTATE_Msk\fP   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_UNDEFINSTR_Msk\fP   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_DEBUGEVT_Msk\fP   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_FORCED_Msk\fP   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_HFSR_VECTTBL_Msk\fP   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_EXTERNAL_Msk\fP   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_VCATCH_Msk\fP   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_DWTTRAP_Msk\fP   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_BKPT_Msk\fP   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DFSR_HALTED_Msk\fP   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ICTR_INTLINESNUM_Msk\fP   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISFOLD_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISFOLD_Msk\fP   (1UL << \fBSCnSCB_ACTLR_DISFOLD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Msk\fP   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TPR_PRIVMASK_Msk\fP   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBITM_TCR_BUSY_Msk\fP   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TraceBusID_Msk\fP   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBITM_TCR_GTSFREQ_Msk\fP   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPrescale_Msk\fP   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SWOENA_Msk\fP   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBITM_TCR_DWTENA_Msk\fP   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_TCR_SYNCENA_Msk\fP   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSENA_Msk\fP   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_TCR_ITMENA_Msk\fP   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBITM_LSR_ByteAcc_Msk\fP   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Access_Msk\fP   (1UL << \fBITM_LSR_Access_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_LSR_Present_Msk\fP   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NUMCOMP_Msk\fP   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOTRCPKT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOEXTTRIG_Msk\fP   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOCYCCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_NOPRFCNT_Msk\fP   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_FOLDEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_LSUEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SLEEPEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CPIEVTENA_Msk\fP   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_EXCTRCENA_Msk\fP   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_PCSAMPLENA_Msk\fP   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_SYNCTAP_Msk\fP   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCTAP_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTINIT_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_POSTPRESET_Msk\fP   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCCNTENA_Msk\fP   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_CPICNT_CPICNT_Msk\fP   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_EXCCNT_EXCCNT_Msk\fP   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_SLEEPCNT_SLEEPCNT_Msk\fP   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_LSUCNT_LSUCNT_Msk\fP   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FOLDCNT_FOLDCNT_Msk\fP   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_MASK_MASK_Msk\fP   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCHED_Msk\fP   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR1_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVADDR0_Msk\fP   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVSIZE_Msk\fP   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_LNK1ENA_Msk\fP   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_DATAVMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_CYCMATCH_Msk\fP   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_EMITRANGE_Msk\fP   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_FUNCTION_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ACPR_PRESCALER_Msk\fP   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_SPPR_TXMODE_Msk\fP   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtNonStop_Msk\fP   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_TCPresent_Msk\fP   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FtStopped_Msk\fP   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FFSR_FlInProg_Msk\fP   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_TrigIn_Msk\fP   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_EnFCont_Msk\fP   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_TRIGGER_TRIGGER_Msk\fP   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM2_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM1_Msk\fP   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO0_ETM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_ATVALID_Msk\fP   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ETM_bytecount_Msk\fP   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM2_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM1_Msk\fP   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_FIFO1_ITM0_Msk\fP   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITCTRL_Mode_Msk\fP   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NRZVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MANCVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_PTINVALID_Msk\fP   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_MinBufSz_Msk\fP   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_AsynClkIn_Msk\fP   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_NrTraceInput_Msk\fP   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_SubType_Msk\fP   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_DEVTYPE_MajorType_Msk\fP   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_DBGKEY_Msk\fP   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESET_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RETIRE_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_LOCKUP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_SLEEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_REGRDY_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_SNAPSTALL_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_MASKINTS_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_STEP_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_HALT_Msk\fP   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_C_DEBUGEN_Msk\fP   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGWnR_Msk\fP   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DCRSR_REGSEL_Msk\fP   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_TRCENA_Msk\fP   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_REQ_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_STEP_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_PEND_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_MON_EN_Msk\fP   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_HARDERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_INTERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_BUSERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_STATERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CHKERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_NOCPERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_MMERR_Msk\fP   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DEMCR_VC_CORERESET_Msk\fP   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBITM_BASE\fP   (0xE0000000UL)"
.br
.ti -1c
.RI "#define \fBDWT_BASE\fP   (0xE0001000UL)"
.br
.ti -1c
.RI "#define \fBTPI_BASE\fP   (0xE0040000UL)"
.br
.ti -1c
.RI "#define \fBCoreDebug_BASE\fP   (0xE000EDF0UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBITM\fP   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBDWT\fP   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBTPI\fP   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBCoreDebug\fP   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriorityGrouping\fP   \fB__NVIC_SetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriorityGrouping\fP   \fB__NVIC_GetPriorityGrouping\fP"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetActive\fP   \fB__NVIC_GetActive\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Msk\fP   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fB_VAL2FLD\fP(field,  value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"
.br
.RI "Mask and shift a bit field value for use in a register bit range\&. "
.ti -1c
.RI "#define \fB_FLD2VAL\fP(field,  value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"
.br
.RI "Mask and shift a register value to extract a bit filed value\&. "
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fBNVIC_EnableIRQ\fP   \fB__NVIC_EnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetEnableIRQ\fP   \fB__NVIC_GetEnableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_DisableIRQ\fP   \fB__NVIC_DisableIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPendingIRQ\fP   \fB__NVIC_GetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPendingIRQ\fP   \fB__NVIC_SetPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_ClearPendingIRQ\fP   \fB__NVIC_ClearPendingIRQ\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetPriority\fP   \fB__NVIC_SetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetPriority\fP   \fB__NVIC_GetPriority\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SystemReset\fP   \fB__NVIC_SystemReset\fP"
.br
.ti -1c
.RI "#define \fBNVIC_SetVector\fP   \fB__NVIC_SetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_GetVector\fP   \fB__NVIC_GetVector\fP"
.br
.ti -1c
.RI "#define \fBNVIC_USER_IRQ_OFFSET\fP   16"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER\fP   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP\fP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP\fP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"
.br
.in -1c
.in +1c
.ti -1c
.RI "#define \fBAPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Msk\fP   (0xFUL << \fBAPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Msk\fP   (0xFUL << \fBxPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Msk\fP   (1UL << \fBCONTROL_FPCA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Msk\fP   (0xFUL << \fBAPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Msk\fP   (0xFUL << \fBxPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Msk\fP   (1UL << \fBCONTROL_FPCA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Msk\fP   (0xFUL << \fBAPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Msk\fP   (0xFUL << \fBxPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Msk\fP   (1UL << \fBCONTROL_FPCA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Msk\fP   (0xFUL << \fBAPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Msk\fP   (0xFUL << \fBxPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Msk\fP   (1UL << \fBCONTROL_FPCA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Msk\fP   (0xFUL << \fBAPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Msk\fP   (0xFUL << \fBxPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Msk\fP   (1UL << \fBCONTROL_FPCA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBAPSR_GE_Msk\fP   (0xFUL << \fBAPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBxPSR_GE_Msk\fP   (0xFUL << \fBxPSR_GE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCONTROL_FPCA_Msk\fP   (1UL << \fBCONTROL_FPCA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Msk\fP   (1UL << \fBSCB_CCR_BP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Msk\fP   (1UL << \fBSCB_CCR_IC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Msk\fP   (1UL << \fBSCB_CCR_DC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Msk\fP   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Msk\fP   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Msk\fP   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Msk\fP   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Msk\fP   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Msk\fP   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Msk\fP   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Msk\fP   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Msk\fP   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Msk\fP   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Msk\fP   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Msk\fP   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Msk\fP   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Msk\fP   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Msk\fP   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Msk\fP   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Msk\fP   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Msk\fP   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Msk\fP   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Msk\fP   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Msk\fP   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_SZ_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_SZ_Msk\fP   (0xFUL << \fBSCB_ITCMCR_SZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RETEN_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RETEN_Msk\fP   (1UL << \fBSCB_ITCMCR_RETEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RMW_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_RMW_Msk\fP   (1UL << \fBSCB_ITCMCR_RMW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_EN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ITCMCR_EN_Msk\fP   (1UL /*<< \fBSCB_ITCMCR_EN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_SZ_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_SZ_Msk\fP   (0xFUL << \fBSCB_DTCMCR_SZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RETEN_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RETEN_Msk\fP   (1UL << \fBSCB_DTCMCR_RETEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RMW_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_RMW_Msk\fP   (1UL << \fBSCB_DTCMCR_RMW_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_EN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_DTCMCR_EN_Msk\fP   (1UL /*<< \fBSCB_DTCMCR_EN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_SZ_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_SZ_Msk\fP   (7UL << \fBSCB_AHBPCR_SZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_EN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AHBPCR_EN_Msk\fP   (1UL /*<< \fBSCB_AHBPCR_EN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CACR_FORCEWT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_CACR_FORCEWT_Msk\fP   (1UL << \fBSCB_CACR_FORCEWT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CACR_ECCEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CACR_ECCEN_Msk\fP   (1UL << \fBSCB_CACR_ECCEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CACR_SIWT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CACR_SIWT_Msk\fP   (1UL /*<< \fBSCB_CACR_SIWT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_INITCOUNT_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_INITCOUNT_Msk\fP   (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_TPRI_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_TPRI_Msk\fP   (0x1FFUL << SCB_AHBPCR_TPRI_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_CTL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_AHBSCR_CTL_Msk\fP   (3UL /*<< SCB_AHBPCR_CTL_Pos*/)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIMTYPE_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIMTYPE_Msk\fP   (3UL << \fBSCB_ABFSR_AXIMTYPE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_EPPB_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_EPPB_Msk\fP   (1UL << \fBSCB_ABFSR_EPPB_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIM_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AXIM_Msk\fP   (1UL << \fBSCB_ABFSR_AXIM_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AHBP_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_AHBP_Msk\fP   (1UL << \fBSCB_ABFSR_AHBP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_DTCM_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_DTCM_Msk\fP   (1UL << \fBSCB_ABFSR_DTCM_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_ITCM_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_ABFSR_ITCM_Msk\fP   (1UL /*<< \fBSCB_ABFSR_ITCM_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Msk\fP   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Msk\fP   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Msk\fP   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Msk\fP   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Msk\fP   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Msk\fP   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Msk\fP   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Msk\fP   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Msk\fP   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Msk\fP   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Msk\fP   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Msk\fP   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Msk\fP   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Msk\fP   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Msk\fP   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Msk\fP   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_BASE\fP   (\fBSCS_BASE\fP +  0x0F30UL)"
.br
.ti -1c
.RI "#define \fBFPU\fP   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Msk\fP   (1UL << \fBSCB_CCR_BP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Msk\fP   (1UL << \fBSCB_CCR_IC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Msk\fP   (1UL << \fBSCB_CCR_DC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Msk\fP   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Msk\fP   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Msk\fP   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Msk\fP   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Msk\fP   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Msk\fP   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Msk\fP   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Msk\fP   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Msk\fP   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Msk\fP   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Msk\fP   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Msk\fP   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Msk\fP   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Msk\fP   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Msk\fP   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Msk\fP   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Msk\fP   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Msk\fP   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Msk\fP   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Msk\fP   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Msk\fP   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Msk\fP   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Msk\fP   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Msk\fP   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Msk\fP   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Msk\fP   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Msk\fP   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Msk\fP   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Msk\fP   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Msk\fP   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Msk\fP   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Msk\fP   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Msk\fP   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Msk\fP   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Msk\fP   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Msk\fP   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Msk\fP   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_BASE\fP   (\fBSCS_BASE\fP +  0x0F30UL)"
.br
.ti -1c
.RI "#define \fBFPU\fP   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Msk\fP   (1UL << \fBSCB_CCR_BP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Msk\fP   (1UL << \fBSCB_CCR_IC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Msk\fP   (1UL << \fBSCB_CCR_DC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Msk\fP   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Msk\fP   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Msk\fP   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Msk\fP   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Msk\fP   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Msk\fP   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Msk\fP   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Msk\fP   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Msk\fP   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Msk\fP   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Msk\fP   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Msk\fP   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Msk\fP   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Msk\fP   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Msk\fP   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Msk\fP   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Msk\fP   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Msk\fP   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Msk\fP   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Msk\fP   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Msk\fP   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Msk\fP   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Msk\fP   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Msk\fP   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Msk\fP   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Msk\fP   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Msk\fP   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Msk\fP   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Msk\fP   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Msk\fP   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Msk\fP   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Msk\fP   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Msk\fP   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Msk\fP   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Msk\fP   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Msk\fP   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Msk\fP   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_BASE\fP   (\fBSCS_BASE\fP +  0x0F30UL)"
.br
.ti -1c
.RI "#define \fBFPU\fP   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Pos\fP   18U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_BP_Msk\fP   (1UL << \fBSCB_CCR_BP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Pos\fP   17U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_IC_Msk\fP   (1UL << \fBSCB_CCR_IC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_DC_Msk\fP   (1UL << \fBSCB_CCR_DC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Msk\fP   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Msk\fP   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOUU_Msk\fP   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CLIDR_LOC_Msk\fP   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_FORMAT_Msk\fP   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_CWG_Msk\fP   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_ERG_Msk\fP   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_DMINLINE_Msk\fP   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CTR_IMINLINE_Msk\fP   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WT_Msk\fP   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WB_Msk\fP   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_RA_Msk\fP   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_WA_Msk\fP   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_NUMSETS_Msk\fP   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_ASSOCIATIVITY_Msk\fP   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CCSIDR_LINESIZE_Msk\fP   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_LEVEL_Msk\fP   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_CSSELR_IND_Msk\fP   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_STIR_INTID_Msk\fP   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_WAY_Msk\fP   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_WAY_Msk\fP   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCSW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_WAY_Msk\fP   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_DCCISW_SET_Msk\fP   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Msk\fP   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Msk\fP   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Msk\fP   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Msk\fP   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Msk\fP   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Msk\fP   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Msk\fP   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Msk\fP   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Msk\fP   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Msk\fP   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Msk\fP   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Msk\fP   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Msk\fP   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Msk\fP   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Msk\fP   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Msk\fP   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_BASE\fP   (\fBSCS_BASE\fP +  0x0F30UL)"
.br
.ti -1c
.RI "#define \fBFPU\fP   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Pos\fP   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_MLSPERR_Msk\fP   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Pos\fP   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_LSPERR_Msk\fP   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_ASPEN_Msk\fP   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPEN_Msk\fP   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MONRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_BFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_MMRDY_Msk\fP   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_HFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_THREAD_Msk\fP   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_USER_Msk\fP   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPACT_Msk\fP   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBFPU_FPCAR_ADDRESS_Msk\fP   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_AHP_Msk\fP   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_DN_Msk\fP   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_FZ_Msk\fP   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Pos\fP   22U"
.br
.ti -1c
.RI "#define \fBFPU_FPDSCR_RMode_Msk\fP   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_rounding_modes_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Short_vectors_Msk\fP   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Square_root_Msk\fP   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Divide_Msk\fP   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Pos\fP   12U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_FP_excep_trapping_Msk\fP   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Double_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_Single_precision_Msk\fP   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR0_A_SIMD_registers_Msk\fP   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_fused_MAC_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FP_HPFP_Msk\fP   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_D_NaN_mode_Msk\fP   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR1_FtZ_mode_Msk\fP   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_MVFR2_VFP_Misc_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBFPU_MVFR2_VFP_Misc_Msk\fP   (0xFUL << \fBFPU_MVFR2_VFP_Misc_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_BASE\fP   (\fBSCS_BASE\fP +  0x0F30UL)"
.br
.ti -1c
.RI "#define \fBFPU\fP   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_HANDLER_FPU\fP   (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after return, restore floating\-point state */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_MSP_FPU\fP   (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after return, restore floating\-point state  */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_THREAD_PSP_FPU\fP   (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after return, restore floating\-point state  */"
.br
.in -1c
.in +1c
.ti -1c
.RI "#define \fBxPSR_IT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_IT_Msk\fP   (3UL << \fBxPSR_IT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Msk\fP   (1UL << \fBCONTROL_SFPA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_IT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_IT_Msk\fP   (3UL << \fBxPSR_IT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Msk\fP   (1UL << \fBCONTROL_SFPA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_IT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_IT_Msk\fP   (3UL << \fBxPSR_IT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Msk\fP   (1UL << \fBCONTROL_SFPA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBxPSR_IT_Pos\fP   25U"
.br
.ti -1c
.RI "#define \fBxPSR_IT_Msk\fP   (3UL << \fBxPSR_IT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCONTROL_SFPA_Msk\fP   (1UL << \fBCONTROL_SFPA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Msk\fP   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Msk\fP   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Msk\fP   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Msk\fP   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Msk\fP   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Msk\fP   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Msk\fP   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Msk\fP   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Msk\fP   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Msk\fP   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Msk\fP   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Msk\fP   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Msk\fP   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Msk\fP   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Msk\fP   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Msk\fP   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Msk\fP   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Msk\fP   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Msk\fP   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Msk\fP   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Msk\fP   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Msk\fP   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Msk\fP   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Msk\fP   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Msk\fP   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Msk\fP   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Msk\fP   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Msk\fP   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Msk\fP   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Msk\fP   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Msk\fP   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Msk\fP   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Msk\fP   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Msk\fP   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Msk\fP   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Msk\fP   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Msk\fP   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Msk\fP   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Msk\fP   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Msk\fP   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Msk\fP   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Msk\fP   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Msk\fP   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Msk\fP   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Msk\fP   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Msk\fP   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Msk\fP   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Msk\fP   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFNC_RETURN\fP   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_PREFIX\fP   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_S\fP   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_DCRS\fP   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_FTYPE\fP   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_MODE\fP   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_SPSEL\fP   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_ES\fP   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"
.br
.ti -1c
.RI "#define \fBEXC_INTEGRITY_SIGNATURE\fP   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Pos\fP   31U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMISET_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Pos\fP   30U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDNMICLR_Msk\fP   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_STTNS_Msk\fP   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Pos\fP   14U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_PRIS_Msk\fP   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Pos\fP   13U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_BFHFNMINS_Msk\fP   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQS_Msk\fP   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEPS_Msk\fP   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKOFHFNMIGN_Msk\fP   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP   21U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP   20U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTPENDED_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP   19U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTENA_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_NMIACT_Msk\fP   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SECUREFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_HARDFAULTACT_Msk\fP   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Pos\fP   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
.br
.ti -1c
.RI "#define \fBSCB_CFSR_STKOF_Msk\fP   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Pos\fP   11U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP11_Msk\fP   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CP10_Msk\fP   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBSCB_NSACR_CPn_Msk\fP   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBITM_STIM_DISABLED_Msk\fP   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBITM_STIM_FIFOREADY_Msk\fP   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TRACEBUSID_Msk\fP   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBITM_TCR_TSPRESCALE_Msk\fP   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Pos\fP   5U"
.br
.ti -1c
.RI "#define \fBITM_TCR_STALLENA_Msk\fP   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Pos\fP   23U"
.br
.ti -1c
.RI "#define \fBDWT_CTRL_CYCDISS_Msk\fP   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ID_Msk\fP   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Pos\fP   4U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_ACTION_Msk\fP   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBDWT_FUNCTION_MATCH_Msk\fP   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_FFCR_FOnMan_Msk\fP   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF2_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data2_Msk\fP   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data1_Msk\fP   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD0_ATB_IF1_data0_Msk\fP   (0xFFUL /*<< \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID2S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_AFVALID1S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY2S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR2_ATREADY1S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP   24U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF1_bytecount_Msk\fP   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data2_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data2_Msk\fP   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP   8U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data1_Msk\fP   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITFTTD1_ATB_IF2_data0_Msk\fP   (0xFFUL /*<< \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID2S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_AFVALID1S_Msk\fP   (0x1UL << \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY2S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBTPI_ITATBCTR0_ATREADY1S_Msk\fP   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Pos\fP   6U"
.br
.ti -1c
.RI "#define \fBTPI_DEVID_FIFOSZ_Msk\fP   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Pos\fP   29U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_LSPENS_Msk\fP   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Pos\fP   28U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRET_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Pos\fP   27U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_CLRONRETS_Msk\fP   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_TS_Msk\fP   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Pos\fP   10U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_UFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Pos\fP   9U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SPLIMVIOL_Msk\fP   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Pos\fP   7U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_SFRDY_Msk\fP   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBFPU_FPCCR_S_Msk\fP   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP   26U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DHCSR_S_RESTART_ST_Msk\fP   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP   3U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP   2U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Msk\fP   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Msk\fP   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Pos\fP   16U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_CDS_Msk\fP   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Pos\fP   1U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSEL_Msk\fP   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP   0U"
.br
.ti -1c
.RI "#define \fBCoreDebug_DSCSR_SBRSELEN_Msk\fP   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
.br
.ti -1c
.RI "#define \fBFNC_RETURN\fP   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_PREFIX\fP   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_S\fP   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_DCRS\fP   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_FTYPE\fP   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_MODE\fP   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_SPSEL\fP   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"
.br
.ti -1c
.RI "#define \fBEXC_RETURN_ES\fP   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"
.br
.ti -1c
.RI "#define \fBEXC_INTEGRITY_SIGNATURE\fP   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"
.br
.in -1c
.SH "Detailed Description"
.PP 
Core Register type definitions\&. 


.SH "Macro Definition Documentation"
.PP 
.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _FLD2VAL(field, value)   (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)"

.PP
Mask and shift a register value to extract a bit filed value\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of register\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted bit field value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define _VAL2FLD(field, value)   (((uint32_t)(value) << field ## _Pos) & field ## _Msk)"

.PP
Mask and shift a bit field value for use in a register bit range\&. 
.PP
\fBParameters\fP
.RS 4
\fIfield\fP Name of the register bit field\&. 
.br
\fIvalue\fP Value of the bit field\&. This parameter is interpreted as an uint32_t type\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Masked and shifted value\&. 
.RE
.PP

.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Msk   (1UL << \fBAPSR_C_Pos\fP)"
APSR: C Mask 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_C_Pos   29U"
APSR: C Position 
.SS "#define APSR_GE_Msk   (0xFUL << \fBAPSR_GE_Pos\fP)"
APSR: GE Mask 
.SS "#define APSR_GE_Msk   (0xFUL << \fBAPSR_GE_Pos\fP)"
APSR: GE Mask 
.SS "#define APSR_GE_Msk   (0xFUL << \fBAPSR_GE_Pos\fP)"
APSR: GE Mask 
.SS "#define APSR_GE_Msk   (0xFUL << \fBAPSR_GE_Pos\fP)"
APSR: GE Mask 
.SS "#define APSR_GE_Msk   (0xFUL << \fBAPSR_GE_Pos\fP)"
APSR: GE Mask 
.SS "#define APSR_GE_Msk   (0xFUL << \fBAPSR_GE_Pos\fP)"
APSR: GE Mask 
.SS "#define APSR_GE_Pos   16U"
APSR: GE Position 
.SS "#define APSR_GE_Pos   16U"
APSR: GE Position 
.SS "#define APSR_GE_Pos   16U"
APSR: GE Position 
.SS "#define APSR_GE_Pos   16U"
APSR: GE Position 
.SS "#define APSR_GE_Pos   16U"
APSR: GE Position 
.SS "#define APSR_GE_Pos   16U"
APSR: GE Position 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Msk   (1UL << \fBAPSR_N_Pos\fP)"
APSR: N Mask 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_N_Pos   31U"
APSR: N Position 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Msk   (1UL << \fBAPSR_Q_Pos\fP)"
APSR: Q Mask 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_Q_Pos   27U"
APSR: Q Position 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Msk   (1UL << \fBAPSR_V_Pos\fP)"
APSR: V Mask 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_V_Pos   28U"
APSR: V Position 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Msk   (1UL << \fBAPSR_Z_Pos\fP)"
APSR: Z Mask 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define APSR_Z_Pos   30U"
APSR: Z Position 
.SS "#define CONTROL_FPCA_Msk   (1UL << \fBCONTROL_FPCA_Pos\fP)"
CONTROL: FPCA Mask 
.SS "#define CONTROL_FPCA_Msk   (1UL << \fBCONTROL_FPCA_Pos\fP)"
CONTROL: FPCA Mask 
.SS "#define CONTROL_FPCA_Msk   (1UL << \fBCONTROL_FPCA_Pos\fP)"
CONTROL: FPCA Mask 
.SS "#define CONTROL_FPCA_Msk   (1UL << \fBCONTROL_FPCA_Pos\fP)"
CONTROL: FPCA Mask 
.SS "#define CONTROL_FPCA_Msk   (1UL << \fBCONTROL_FPCA_Pos\fP)"
CONTROL: FPCA Mask 
.SS "#define CONTROL_FPCA_Msk   (1UL << \fBCONTROL_FPCA_Pos\fP)"
CONTROL: FPCA Mask 
.SS "#define CONTROL_FPCA_Pos   2U"
CONTROL: FPCA Position 
.SS "#define CONTROL_FPCA_Pos   2U"
CONTROL: FPCA Position 
.SS "#define CONTROL_FPCA_Pos   2U"
CONTROL: FPCA Position 
.SS "#define CONTROL_FPCA_Pos   2U"
CONTROL: FPCA Position 
.SS "#define CONTROL_FPCA_Pos   2U"
CONTROL: FPCA Position 
.SS "#define CONTROL_FPCA_Pos   2U"
CONTROL: FPCA Position 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Msk   (1UL /*<< \fBCONTROL_nPRIV_Pos\fP*/)"
CONTROL: nPRIV Mask 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_nPRIV_Pos   0U"
CONTROL: nPRIV Position 
.SS "#define CONTROL_SFPA_Msk   (1UL << \fBCONTROL_SFPA_Pos\fP)"
CONTROL: SFPA Mask 
.SS "#define CONTROL_SFPA_Msk   (1UL << \fBCONTROL_SFPA_Pos\fP)"
CONTROL: SFPA Mask 
.SS "#define CONTROL_SFPA_Msk   (1UL << \fBCONTROL_SFPA_Pos\fP)"
CONTROL: SFPA Mask 
.SS "#define CONTROL_SFPA_Msk   (1UL << \fBCONTROL_SFPA_Pos\fP)"
CONTROL: SFPA Mask 
.SS "#define CONTROL_SFPA_Pos   3U"
CONTROL: SFPA Position 
.SS "#define CONTROL_SFPA_Pos   3U"
CONTROL: SFPA Position 
.SS "#define CONTROL_SFPA_Pos   3U"
CONTROL: SFPA Position 
.SS "#define CONTROL_SFPA_Pos   3U"
CONTROL: SFPA Position 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Msk   (1UL << \fBCONTROL_SPSEL_Pos\fP)"
CONTROL: SPSEL Mask 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CONTROL_SPSEL_Pos   1U"
CONTROL: SPSEL Position 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP   )"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
Core Debug configuration struct 
.SS "#define CoreDebug   ((\fBCoreDebug_Type\fP *)     \fBCoreDebug_BASE\fP)"
Core Debug configuration struct 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_BASE   (0xE000EDF0UL)"
Core Debug Base Address 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPIDEN Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPIDEN Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPIDEN Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPIDEN Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPIDEN Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPIDEN Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U"
CoreDebug DAUTHCTRL: INTSPIDEN Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U"
CoreDebug DAUTHCTRL: INTSPIDEN Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U"
CoreDebug DAUTHCTRL: INTSPIDEN Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U"
CoreDebug DAUTHCTRL: INTSPIDEN Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U"
CoreDebug DAUTHCTRL: INTSPIDEN Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U"
CoreDebug DAUTHCTRL: INTSPIDEN Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPNIDEN, Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPNIDEN, Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPNIDEN, Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPNIDEN, Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPNIDEN, Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_INTSPNIDEN_Pos\fP)"
CoreDebug DAUTHCTRL: INTSPNIDEN, Mask 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos   3U"
CoreDebug DAUTHCTRL: INTSPNIDEN, Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos   3U"
CoreDebug DAUTHCTRL: INTSPNIDEN, Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos   3U"
CoreDebug DAUTHCTRL: INTSPNIDEN, Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos   3U"
CoreDebug DAUTHCTRL: INTSPNIDEN, Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos   3U"
CoreDebug DAUTHCTRL: INTSPNIDEN, Position 
.SS "#define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos   3U"
CoreDebug DAUTHCTRL: INTSPNIDEN, Position 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
CoreDebug DAUTHCTRL: SPIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
CoreDebug DAUTHCTRL: SPIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
CoreDebug DAUTHCTRL: SPIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
CoreDebug DAUTHCTRL: SPIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
CoreDebug DAUTHCTRL: SPIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk   (1UL /*<< \fBCoreDebug_DAUTHCTRL_SPIDENSEL_Pos\fP*/)"
CoreDebug DAUTHCTRL: SPIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U"
CoreDebug DAUTHCTRL: SPIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U"
CoreDebug DAUTHCTRL: SPIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U"
CoreDebug DAUTHCTRL: SPIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U"
CoreDebug DAUTHCTRL: SPIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U"
CoreDebug DAUTHCTRL: SPIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U"
CoreDebug DAUTHCTRL: SPIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
CoreDebug DAUTHCTRL: SPNIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
CoreDebug DAUTHCTRL: SPNIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
CoreDebug DAUTHCTRL: SPNIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
CoreDebug DAUTHCTRL: SPNIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
CoreDebug DAUTHCTRL: SPNIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk   (1UL << \fBCoreDebug_DAUTHCTRL_SPNIDENSEL_Pos\fP)"
CoreDebug DAUTHCTRL: SPNIDENSEL Mask 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos   2U"
CoreDebug DAUTHCTRL: SPNIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos   2U"
CoreDebug DAUTHCTRL: SPNIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos   2U"
CoreDebug DAUTHCTRL: SPNIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos   2U"
CoreDebug DAUTHCTRL: SPNIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos   2U"
CoreDebug DAUTHCTRL: SPNIDENSEL Position 
.SS "#define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos   2U"
CoreDebug DAUTHCTRL: SPNIDENSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Msk   (0x1FUL /*<< \fBCoreDebug_DCRSR_REGSEL_Pos\fP*/)"
CoreDebug DCRSR: REGSEL Mask 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGSEL_Pos   0U"
CoreDebug DCRSR: REGSEL Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Msk   (1UL << \fBCoreDebug_DCRSR_REGWnR_Pos\fP)"
CoreDebug DCRSR: REGWnR Mask 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DCRSR_REGWnR_Pos   16U"
CoreDebug DCRSR: REGWnR Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Msk   (1UL << \fBCoreDebug_DEMCR_MON_EN_Pos\fP)"
CoreDebug DEMCR: MON_EN Mask 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_EN_Pos   16U"
CoreDebug DEMCR: MON_EN Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Msk   (1UL << \fBCoreDebug_DEMCR_MON_PEND_Pos\fP)"
CoreDebug DEMCR: MON_PEND Mask 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_PEND_Pos   17U"
CoreDebug DEMCR: MON_PEND Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Msk   (1UL << \fBCoreDebug_DEMCR_MON_REQ_Pos\fP)"
CoreDebug DEMCR: MON_REQ Mask 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_REQ_Pos   19U"
CoreDebug DEMCR: MON_REQ Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Msk   (1UL << \fBCoreDebug_DEMCR_MON_STEP_Pos\fP)"
CoreDebug DEMCR: MON_STEP Mask 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_MON_STEP_Pos   18U"
CoreDebug DEMCR: MON_STEP Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Msk   (1UL << \fBCoreDebug_DEMCR_TRCENA_Pos\fP)"
CoreDebug DEMCR: TRCENA Mask 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_TRCENA_Pos   24U"
CoreDebug DEMCR: TRCENA Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_BUSERR_Pos\fP)"
CoreDebug DEMCR: VC_BUSERR Mask 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_BUSERR_Pos   8U"
CoreDebug DEMCR: VC_BUSERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_CHKERR_Pos\fP)"
CoreDebug DEMCR: VC_CHKERR Mask 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CHKERR_Pos   6U"
CoreDebug DEMCR: VC_CHKERR Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< \fBCoreDebug_DEMCR_VC_CORERESET_Pos\fP*/)"
CoreDebug DEMCR: VC_CORERESET Mask 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_CORERESET_Pos   0U"
CoreDebug DEMCR: VC_CORERESET Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_HARDERR_Pos\fP)"
CoreDebug DEMCR: VC_HARDERR Mask 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_HARDERR_Pos   10U"
CoreDebug DEMCR: VC_HARDERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_INTERR_Pos\fP)"
CoreDebug DEMCR: VC_INTERR Mask 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_INTERR_Pos   9U"
CoreDebug DEMCR: VC_INTERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_MMERR_Pos\fP)"
CoreDebug DEMCR: VC_MMERR Mask 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_MMERR_Pos   4U"
CoreDebug DEMCR: VC_MMERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_NOCPERR_Pos\fP)"
CoreDebug DEMCR: VC_NOCPERR Mask 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_NOCPERR_Pos   5U"
CoreDebug DEMCR: VC_NOCPERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Msk   (1UL << \fBCoreDebug_DEMCR_VC_STATERR_Pos\fP)"
CoreDebug DEMCR: VC_STATERR Mask 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DEMCR_VC_STATERR_Pos   7U"
CoreDebug DEMCR: VC_STATERR Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Msk   (1UL /*<< \fBCoreDebug_DHCSR_C_DEBUGEN_Pos\fP*/)"
CoreDebug DHCSR: C_DEBUGEN Mask 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_DEBUGEN_Pos   0U"
CoreDebug DHCSR: C_DEBUGEN Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_C_HALT_Pos\fP)"
CoreDebug DHCSR: C_HALT Mask 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_HALT_Pos   1U"
CoreDebug DHCSR: C_HALT Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Msk   (1UL << \fBCoreDebug_DHCSR_C_MASKINTS_Pos\fP)"
CoreDebug DHCSR: C_MASKINTS Mask 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_MASKINTS_Pos   3U"
CoreDebug DHCSR: C_MASKINTS Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Msk   (1UL << \fBCoreDebug_DHCSR_C_SNAPSTALL_Pos\fP)"
CoreDebug DHCSR: C_SNAPSTALL Mask 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_SNAPSTALL_Pos   5U"
CoreDebug DHCSR: C_SNAPSTALL Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Msk   (1UL << \fBCoreDebug_DHCSR_C_STEP_Pos\fP)"
CoreDebug DHCSR: C_STEP Mask 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_C_STEP_Pos   2U"
CoreDebug DHCSR: C_STEP Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Msk   (0xFFFFUL << \fBCoreDebug_DHCSR_DBGKEY_Pos\fP)"
CoreDebug DHCSR: DBGKEY Mask 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_DBGKEY_Pos   16U"
CoreDebug DHCSR: DBGKEY Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Msk   (1UL << \fBCoreDebug_DHCSR_S_HALT_Pos\fP)"
CoreDebug DHCSR: S_HALT Mask 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_HALT_Pos   17U"
CoreDebug DHCSR: S_HALT Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Msk   (1UL << \fBCoreDebug_DHCSR_S_LOCKUP_Pos\fP)"
CoreDebug DHCSR: S_LOCKUP Mask 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_LOCKUP_Pos   19U"
CoreDebug DHCSR: S_LOCKUP Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Msk   (1UL << \fBCoreDebug_DHCSR_S_REGRDY_Pos\fP)"
CoreDebug DHCSR: S_REGRDY Mask 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_REGRDY_Pos   16U"
CoreDebug DHCSR: S_REGRDY Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESET_ST_Pos\fP)"
CoreDebug DHCSR: S_RESET_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESET_ST_Pos   25U"
CoreDebug DHCSR: S_RESET_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
CoreDebug DHCSR: S_RESTART_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
CoreDebug DHCSR: S_RESTART_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
CoreDebug DHCSR: S_RESTART_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
CoreDebug DHCSR: S_RESTART_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
CoreDebug DHCSR: S_RESTART_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RESTART_ST_Pos\fP)"
CoreDebug DHCSR: S_RESTART_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U"
CoreDebug DHCSR: S_RESTART_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U"
CoreDebug DHCSR: S_RESTART_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U"
CoreDebug DHCSR: S_RESTART_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U"
CoreDebug DHCSR: S_RESTART_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U"
CoreDebug DHCSR: S_RESTART_ST Position 
.SS "#define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U"
CoreDebug DHCSR: S_RESTART_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Msk   (1UL << \fBCoreDebug_DHCSR_S_RETIRE_ST_Pos\fP)"
CoreDebug DHCSR: S_RETIRE_ST Mask 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_RETIRE_ST_Pos   24U"
CoreDebug DHCSR: S_RETIRE_ST Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Msk   (1UL << \fBCoreDebug_DHCSR_S_SLEEP_Pos\fP)"
CoreDebug DHCSR: S_SLEEP Mask 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DHCSR_S_SLEEP_Pos   18U"
CoreDebug DHCSR: S_SLEEP Position 
.SS "#define CoreDebug_DSCSR_CDS_Msk   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
CoreDebug DSCSR: CDS Mask 
.SS "#define CoreDebug_DSCSR_CDS_Msk   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
CoreDebug DSCSR: CDS Mask 
.SS "#define CoreDebug_DSCSR_CDS_Msk   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
CoreDebug DSCSR: CDS Mask 
.SS "#define CoreDebug_DSCSR_CDS_Msk   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
CoreDebug DSCSR: CDS Mask 
.SS "#define CoreDebug_DSCSR_CDS_Msk   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
CoreDebug DSCSR: CDS Mask 
.SS "#define CoreDebug_DSCSR_CDS_Msk   (1UL << \fBCoreDebug_DSCSR_CDS_Pos\fP)"
CoreDebug DSCSR: CDS Mask 
.SS "#define CoreDebug_DSCSR_CDS_Pos   16U"
CoreDebug DSCSR: CDS Position 
.SS "#define CoreDebug_DSCSR_CDS_Pos   16U"
CoreDebug DSCSR: CDS Position 
.SS "#define CoreDebug_DSCSR_CDS_Pos   16U"
CoreDebug DSCSR: CDS Position 
.SS "#define CoreDebug_DSCSR_CDS_Pos   16U"
CoreDebug DSCSR: CDS Position 
.SS "#define CoreDebug_DSCSR_CDS_Pos   16U"
CoreDebug DSCSR: CDS Position 
.SS "#define CoreDebug_DSCSR_CDS_Pos   16U"
CoreDebug DSCSR: CDS Position 
.SS "#define CoreDebug_DSCSR_SBRSEL_Msk   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
CoreDebug DSCSR: SBRSEL Mask 
.SS "#define CoreDebug_DSCSR_SBRSEL_Msk   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
CoreDebug DSCSR: SBRSEL Mask 
.SS "#define CoreDebug_DSCSR_SBRSEL_Msk   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
CoreDebug DSCSR: SBRSEL Mask 
.SS "#define CoreDebug_DSCSR_SBRSEL_Msk   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
CoreDebug DSCSR: SBRSEL Mask 
.SS "#define CoreDebug_DSCSR_SBRSEL_Msk   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
CoreDebug DSCSR: SBRSEL Mask 
.SS "#define CoreDebug_DSCSR_SBRSEL_Msk   (1UL << \fBCoreDebug_DSCSR_SBRSEL_Pos\fP)"
CoreDebug DSCSR: SBRSEL Mask 
.SS "#define CoreDebug_DSCSR_SBRSEL_Pos   1U"
CoreDebug DSCSR: SBRSEL Position 
.SS "#define CoreDebug_DSCSR_SBRSEL_Pos   1U"
CoreDebug DSCSR: SBRSEL Position 
.SS "#define CoreDebug_DSCSR_SBRSEL_Pos   1U"
CoreDebug DSCSR: SBRSEL Position 
.SS "#define CoreDebug_DSCSR_SBRSEL_Pos   1U"
CoreDebug DSCSR: SBRSEL Position 
.SS "#define CoreDebug_DSCSR_SBRSEL_Pos   1U"
CoreDebug DSCSR: SBRSEL Position 
.SS "#define CoreDebug_DSCSR_SBRSEL_Pos   1U"
CoreDebug DSCSR: SBRSEL Position 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Msk   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
CoreDebug DSCSR: SBRSELEN Mask 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Msk   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
CoreDebug DSCSR: SBRSELEN Mask 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Msk   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
CoreDebug DSCSR: SBRSELEN Mask 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Msk   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
CoreDebug DSCSR: SBRSELEN Mask 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Msk   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
CoreDebug DSCSR: SBRSELEN Mask 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Msk   (1UL /*<< \fBCoreDebug_DSCSR_SBRSELEN_Pos\fP*/)"
CoreDebug DSCSR: SBRSELEN Mask 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Pos   0U"
CoreDebug DSCSR: SBRSELEN Position 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Pos   0U"
CoreDebug DSCSR: SBRSELEN Position 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Pos   0U"
CoreDebug DSCSR: SBRSELEN Position 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Pos   0U"
CoreDebug DSCSR: SBRSELEN Position 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Pos   0U"
CoreDebug DSCSR: SBRSELEN Position 
.SS "#define CoreDebug_DSCSR_SBRSELEN_Pos   0U"
CoreDebug DSCSR: SBRSELEN Position 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP         )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
DWT configuration struct 
.SS "#define DWT   ((\fBDWT_Type\fP       *)     \fBDWT_BASE\fP      )"
DWT configuration struct 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_BASE   (0xE0001000UL)"
DWT Base Address 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Msk   (0xFFUL /*<< \fBDWT_CPICNT_CPICNT_Pos\fP*/)"
DWT CPICNT: CPICNT Mask 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CPICNT_CPICNT_Pos   0U"
DWT CPICNT: CPICNT Position 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CPIEVTENA_Pos\fP)"
DWT CTRL: CPIEVTENA Mask 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CPIEVTENA_Pos   17U"
DWT CTRL: CPIEVTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Msk   (0x1UL /*<< \fBDWT_CTRL_CYCCNTENA_Pos\fP*/)"
DWT CTRL: CYCCNTENA Mask 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCCNTENA_Pos   0U"
DWT CTRL: CYCCNTENA Position 
.SS "#define DWT_CTRL_CYCDISS_Msk   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
DWT CTRL: CYCDISS Mask 
.SS "#define DWT_CTRL_CYCDISS_Msk   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
DWT CTRL: CYCDISS Mask 
.SS "#define DWT_CTRL_CYCDISS_Msk   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
DWT CTRL: CYCDISS Mask 
.SS "#define DWT_CTRL_CYCDISS_Msk   (0x1UL << \fBDWT_CTRL_CYCDISS_Pos\fP)"
DWT CTRL: CYCDISS Mask 
.SS "#define DWT_CTRL_CYCDISS_Pos   23U"
DWT CTRL: CYCDISS Position 
.SS "#define DWT_CTRL_CYCDISS_Pos   23U"
DWT CTRL: CYCDISS Position 
.SS "#define DWT_CTRL_CYCDISS_Pos   23U"
DWT CTRL: CYCDISS Position 
.SS "#define DWT_CTRL_CYCDISS_Pos   23U"
DWT CTRL: CYCDISS Position 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_CYCEVTENA_Pos\fP)"
DWT CTRL: CYCEVTENA Mask 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCEVTENA_Pos   22U"
DWT CTRL: CYCEVTENA Position 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Msk   (0x1UL << \fBDWT_CTRL_CYCTAP_Pos\fP)"
DWT CTRL: CYCTAP Mask 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_CYCTAP_Pos   9U"
DWT CTRL: CYCTAP Position 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Msk   (0x1UL << \fBDWT_CTRL_EXCEVTENA_Pos\fP)"
DWT CTRL: EXCEVTENA Mask 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCEVTENA_Pos   18U"
DWT CTRL: EXCEVTENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Msk   (0x1UL << \fBDWT_CTRL_EXCTRCENA_Pos\fP)"
DWT CTRL: EXCTRCENA Mask 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_EXCTRCENA_Pos   16U"
DWT CTRL: EXCTRCENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Msk   (0x1UL << \fBDWT_CTRL_FOLDEVTENA_Pos\fP)"
DWT CTRL: FOLDEVTENA Mask 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_FOLDEVTENA_Pos   21U"
DWT CTRL: FOLDEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Msk   (0x1UL << \fBDWT_CTRL_LSUEVTENA_Pos\fP)"
DWT CTRL: LSUEVTENA Mask 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_LSUEVTENA_Pos   20U"
DWT CTRL: LSUEVTENA Position 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Msk   (0x1UL << \fBDWT_CTRL_NOCYCCNT_Pos\fP)"
DWT CTRL: NOCYCCNT Mask 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOCYCCNT_Pos   25U"
DWT CTRL: NOCYCCNT Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Msk   (0x1UL << \fBDWT_CTRL_NOEXTTRIG_Pos\fP)"
DWT CTRL: NOEXTTRIG Mask 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOEXTTRIG_Pos   26U"
DWT CTRL: NOEXTTRIG Position 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Msk   (0x1UL << \fBDWT_CTRL_NOPRFCNT_Pos\fP)"
DWT CTRL: NOPRFCNT Mask 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOPRFCNT_Pos   24U"
DWT CTRL: NOPRFCNT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Msk   (0x1UL << \fBDWT_CTRL_NOTRCPKT_Pos\fP)"
DWT CTRL: NOTRCPKT Mask 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NOTRCPKT_Pos   27U"
DWT CTRL: NOTRCPKT Position 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Msk   (0xFUL << \fBDWT_CTRL_NUMCOMP_Pos\fP)"
DWT CTRL: NUMCOMP Mask 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_NUMCOMP_Pos   28U"
DWT CTRL: NUMCOMP Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Msk   (0x1UL << \fBDWT_CTRL_PCSAMPLENA_Pos\fP)"
DWT CTRL: PCSAMPLENA Mask 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_PCSAMPLENA_Pos   12U"
DWT CTRL: PCSAMPLENA Position 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Msk   (0xFUL << \fBDWT_CTRL_POSTINIT_Pos\fP)"
DWT CTRL: POSTINIT Mask 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTINIT_Pos   5U"
DWT CTRL: POSTINIT Position 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Msk   (0xFUL << \fBDWT_CTRL_POSTPRESET_Pos\fP)"
DWT CTRL: POSTPRESET Mask 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_POSTPRESET_Pos   1U"
DWT CTRL: POSTPRESET Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Msk   (0x1UL << \fBDWT_CTRL_SLEEPEVTENA_Pos\fP)"
DWT CTRL: SLEEPEVTENA Mask 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SLEEPEVTENA_Pos   19U"
DWT CTRL: SLEEPEVTENA Position 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Msk   (0x3UL << \fBDWT_CTRL_SYNCTAP_Pos\fP)"
DWT CTRL: SYNCTAP Mask 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_CTRL_SYNCTAP_Pos   10U"
DWT CTRL: SYNCTAP Position 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Msk   (0xFFUL /*<< \fBDWT_EXCCNT_EXCCNT_Pos\fP*/)"
DWT EXCCNT: EXCCNT Mask 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_EXCCNT_EXCCNT_Pos   0U"
DWT EXCCNT: EXCCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Msk   (0xFFUL /*<< \fBDWT_FOLDCNT_FOLDCNT_Pos\fP*/)"
DWT FOLDCNT: FOLDCNT Mask 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FOLDCNT_FOLDCNT_Pos   0U"
DWT FOLDCNT: FOLDCNT Position 
.SS "#define DWT_FUNCTION_ACTION_Msk   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
DWT FUNCTION: ACTION Mask 
.SS "#define DWT_FUNCTION_ACTION_Msk   (0x3UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
DWT FUNCTION: ACTION Mask 
.SS "#define DWT_FUNCTION_ACTION_Msk   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
DWT FUNCTION: ACTION Mask 
.SS "#define DWT_FUNCTION_ACTION_Msk   (0x3UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
DWT FUNCTION: ACTION Mask 
.SS "#define DWT_FUNCTION_ACTION_Msk   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
DWT FUNCTION: ACTION Mask 
.SS "#define DWT_FUNCTION_ACTION_Msk   (0x1UL << \fBDWT_FUNCTION_ACTION_Pos\fP)"
DWT FUNCTION: ACTION Mask 
.SS "#define DWT_FUNCTION_ACTION_Pos   4U"
DWT FUNCTION: ACTION Position 
.SS "#define DWT_FUNCTION_ACTION_Pos   4U"
DWT FUNCTION: ACTION Position 
.SS "#define DWT_FUNCTION_ACTION_Pos   4U"
DWT FUNCTION: ACTION Position 
.SS "#define DWT_FUNCTION_ACTION_Pos   4U"
DWT FUNCTION: ACTION Position 
.SS "#define DWT_FUNCTION_ACTION_Pos   4U"
DWT FUNCTION: ACTION Position 
.SS "#define DWT_FUNCTION_ACTION_Pos   4U"
DWT FUNCTION: ACTION Position 
.SS "#define DWT_FUNCTION_CYCMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
DWT FUNCTION: CYCMATCH Mask 
.SS "#define DWT_FUNCTION_CYCMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
DWT FUNCTION: CYCMATCH Mask 
.SS "#define DWT_FUNCTION_CYCMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
DWT FUNCTION: CYCMATCH Mask 
.SS "#define DWT_FUNCTION_CYCMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_CYCMATCH_Pos\fP)"
DWT FUNCTION: CYCMATCH Mask 
.SS "#define DWT_FUNCTION_CYCMATCH_Pos   7U"
DWT FUNCTION: CYCMATCH Position 
.SS "#define DWT_FUNCTION_CYCMATCH_Pos   7U"
DWT FUNCTION: CYCMATCH Position 
.SS "#define DWT_FUNCTION_CYCMATCH_Pos   7U"
DWT FUNCTION: CYCMATCH Position 
.SS "#define DWT_FUNCTION_CYCMATCH_Pos   7U"
DWT FUNCTION: CYCMATCH Position 
.SS "#define DWT_FUNCTION_DATAVADDR0_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
DWT FUNCTION: DATAVADDR0 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR0_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
DWT FUNCTION: DATAVADDR0 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR0_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
DWT FUNCTION: DATAVADDR0 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR0_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR0_Pos\fP)"
DWT FUNCTION: DATAVADDR0 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR0_Pos   12U"
DWT FUNCTION: DATAVADDR0 Position 
.SS "#define DWT_FUNCTION_DATAVADDR0_Pos   12U"
DWT FUNCTION: DATAVADDR0 Position 
.SS "#define DWT_FUNCTION_DATAVADDR0_Pos   12U"
DWT FUNCTION: DATAVADDR0 Position 
.SS "#define DWT_FUNCTION_DATAVADDR0_Pos   12U"
DWT FUNCTION: DATAVADDR0 Position 
.SS "#define DWT_FUNCTION_DATAVADDR1_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
DWT FUNCTION: DATAVADDR1 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR1_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
DWT FUNCTION: DATAVADDR1 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR1_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
DWT FUNCTION: DATAVADDR1 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR1_Msk   (0xFUL << \fBDWT_FUNCTION_DATAVADDR1_Pos\fP)"
DWT FUNCTION: DATAVADDR1 Mask 
.SS "#define DWT_FUNCTION_DATAVADDR1_Pos   16U"
DWT FUNCTION: DATAVADDR1 Position 
.SS "#define DWT_FUNCTION_DATAVADDR1_Pos   16U"
DWT FUNCTION: DATAVADDR1 Position 
.SS "#define DWT_FUNCTION_DATAVADDR1_Pos   16U"
DWT FUNCTION: DATAVADDR1 Position 
.SS "#define DWT_FUNCTION_DATAVADDR1_Pos   16U"
DWT FUNCTION: DATAVADDR1 Position 
.SS "#define DWT_FUNCTION_DATAVMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
DWT FUNCTION: DATAVMATCH Mask 
.SS "#define DWT_FUNCTION_DATAVMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
DWT FUNCTION: DATAVMATCH Mask 
.SS "#define DWT_FUNCTION_DATAVMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
DWT FUNCTION: DATAVMATCH Mask 
.SS "#define DWT_FUNCTION_DATAVMATCH_Msk   (0x1UL << \fBDWT_FUNCTION_DATAVMATCH_Pos\fP)"
DWT FUNCTION: DATAVMATCH Mask 
.SS "#define DWT_FUNCTION_DATAVMATCH_Pos   8U"
DWT FUNCTION: DATAVMATCH Position 
.SS "#define DWT_FUNCTION_DATAVMATCH_Pos   8U"
DWT FUNCTION: DATAVMATCH Position 
.SS "#define DWT_FUNCTION_DATAVMATCH_Pos   8U"
DWT FUNCTION: DATAVMATCH Position 
.SS "#define DWT_FUNCTION_DATAVMATCH_Pos   8U"
DWT FUNCTION: DATAVMATCH Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Msk   (0x3UL << \fBDWT_FUNCTION_DATAVSIZE_Pos\fP)"
DWT FUNCTION: DATAVSIZE Mask 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_DATAVSIZE_Pos   10U"
DWT FUNCTION: DATAVSIZE Position 
.SS "#define DWT_FUNCTION_EMITRANGE_Msk   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
DWT FUNCTION: EMITRANGE Mask 
.SS "#define DWT_FUNCTION_EMITRANGE_Msk   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
DWT FUNCTION: EMITRANGE Mask 
.SS "#define DWT_FUNCTION_EMITRANGE_Msk   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
DWT FUNCTION: EMITRANGE Mask 
.SS "#define DWT_FUNCTION_EMITRANGE_Msk   (0x1UL << \fBDWT_FUNCTION_EMITRANGE_Pos\fP)"
DWT FUNCTION: EMITRANGE Mask 
.SS "#define DWT_FUNCTION_EMITRANGE_Pos   5U"
DWT FUNCTION: EMITRANGE Position 
.SS "#define DWT_FUNCTION_EMITRANGE_Pos   5U"
DWT FUNCTION: EMITRANGE Position 
.SS "#define DWT_FUNCTION_EMITRANGE_Pos   5U"
DWT FUNCTION: EMITRANGE Position 
.SS "#define DWT_FUNCTION_EMITRANGE_Pos   5U"
DWT FUNCTION: EMITRANGE Position 
.SS "#define DWT_FUNCTION_FUNCTION_Msk   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
DWT FUNCTION: FUNCTION Mask 
.SS "#define DWT_FUNCTION_FUNCTION_Msk   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
DWT FUNCTION: FUNCTION Mask 
.SS "#define DWT_FUNCTION_FUNCTION_Msk   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
DWT FUNCTION: FUNCTION Mask 
.SS "#define DWT_FUNCTION_FUNCTION_Msk   (0xFUL /*<< \fBDWT_FUNCTION_FUNCTION_Pos\fP*/)"
DWT FUNCTION: FUNCTION Mask 
.SS "#define DWT_FUNCTION_FUNCTION_Pos   0U"
DWT FUNCTION: FUNCTION Position 
.SS "#define DWT_FUNCTION_FUNCTION_Pos   0U"
DWT FUNCTION: FUNCTION Position 
.SS "#define DWT_FUNCTION_FUNCTION_Pos   0U"
DWT FUNCTION: FUNCTION Position 
.SS "#define DWT_FUNCTION_FUNCTION_Pos   0U"
DWT FUNCTION: FUNCTION Position 
.SS "#define DWT_FUNCTION_ID_Msk   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
DWT FUNCTION: ID Mask 
.SS "#define DWT_FUNCTION_ID_Msk   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
DWT FUNCTION: ID Mask 
.SS "#define DWT_FUNCTION_ID_Msk   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
DWT FUNCTION: ID Mask 
.SS "#define DWT_FUNCTION_ID_Msk   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
DWT FUNCTION: ID Mask 
.SS "#define DWT_FUNCTION_ID_Msk   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
DWT FUNCTION: ID Mask 
.SS "#define DWT_FUNCTION_ID_Msk   (0x1FUL << \fBDWT_FUNCTION_ID_Pos\fP)"
DWT FUNCTION: ID Mask 
.SS "#define DWT_FUNCTION_ID_Pos   27U"
DWT FUNCTION: ID Position 
.SS "#define DWT_FUNCTION_ID_Pos   27U"
DWT FUNCTION: ID Position 
.SS "#define DWT_FUNCTION_ID_Pos   27U"
DWT FUNCTION: ID Position 
.SS "#define DWT_FUNCTION_ID_Pos   27U"
DWT FUNCTION: ID Position 
.SS "#define DWT_FUNCTION_ID_Pos   27U"
DWT FUNCTION: ID Position 
.SS "#define DWT_FUNCTION_ID_Pos   27U"
DWT FUNCTION: ID Position 
.SS "#define DWT_FUNCTION_LNK1ENA_Msk   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
DWT FUNCTION: LNK1ENA Mask 
.SS "#define DWT_FUNCTION_LNK1ENA_Msk   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
DWT FUNCTION: LNK1ENA Mask 
.SS "#define DWT_FUNCTION_LNK1ENA_Msk   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
DWT FUNCTION: LNK1ENA Mask 
.SS "#define DWT_FUNCTION_LNK1ENA_Msk   (0x1UL << \fBDWT_FUNCTION_LNK1ENA_Pos\fP)"
DWT FUNCTION: LNK1ENA Mask 
.SS "#define DWT_FUNCTION_LNK1ENA_Pos   9U"
DWT FUNCTION: LNK1ENA Position 
.SS "#define DWT_FUNCTION_LNK1ENA_Pos   9U"
DWT FUNCTION: LNK1ENA Position 
.SS "#define DWT_FUNCTION_LNK1ENA_Pos   9U"
DWT FUNCTION: LNK1ENA Position 
.SS "#define DWT_FUNCTION_LNK1ENA_Pos   9U"
DWT FUNCTION: LNK1ENA Position 
.SS "#define DWT_FUNCTION_MATCH_Msk   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
DWT FUNCTION: MATCH Mask 
.SS "#define DWT_FUNCTION_MATCH_Msk   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
DWT FUNCTION: MATCH Mask 
.SS "#define DWT_FUNCTION_MATCH_Msk   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
DWT FUNCTION: MATCH Mask 
.SS "#define DWT_FUNCTION_MATCH_Msk   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
DWT FUNCTION: MATCH Mask 
.SS "#define DWT_FUNCTION_MATCH_Msk   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
DWT FUNCTION: MATCH Mask 
.SS "#define DWT_FUNCTION_MATCH_Msk   (0xFUL /*<< \fBDWT_FUNCTION_MATCH_Pos\fP*/)"
DWT FUNCTION: MATCH Mask 
.SS "#define DWT_FUNCTION_MATCH_Pos   0U"
DWT FUNCTION: MATCH Position 
.SS "#define DWT_FUNCTION_MATCH_Pos   0U"
DWT FUNCTION: MATCH Position 
.SS "#define DWT_FUNCTION_MATCH_Pos   0U"
DWT FUNCTION: MATCH Position 
.SS "#define DWT_FUNCTION_MATCH_Pos   0U"
DWT FUNCTION: MATCH Position 
.SS "#define DWT_FUNCTION_MATCH_Pos   0U"
DWT FUNCTION: MATCH Position 
.SS "#define DWT_FUNCTION_MATCH_Pos   0U"
DWT FUNCTION: MATCH Position 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Msk   (0x1UL << \fBDWT_FUNCTION_MATCHED_Pos\fP)"
DWT FUNCTION: MATCHED Mask 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_FUNCTION_MATCHED_Pos   24U"
DWT FUNCTION: MATCHED Position 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Msk   (0xFFUL /*<< \fBDWT_LSUCNT_LSUCNT_Pos\fP*/)"
DWT LSUCNT: LSUCNT Mask 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_LSUCNT_LSUCNT_Pos   0U"
DWT LSUCNT: LSUCNT Position 
.SS "#define DWT_MASK_MASK_Msk   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
DWT MASK: MASK Mask 
.SS "#define DWT_MASK_MASK_Msk   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
DWT MASK: MASK Mask 
.SS "#define DWT_MASK_MASK_Msk   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
DWT MASK: MASK Mask 
.SS "#define DWT_MASK_MASK_Msk   (0x1FUL /*<< \fBDWT_MASK_MASK_Pos\fP*/)"
DWT MASK: MASK Mask 
.SS "#define DWT_MASK_MASK_Pos   0U"
DWT MASK: MASK Position 
.SS "#define DWT_MASK_MASK_Pos   0U"
DWT MASK: MASK Position 
.SS "#define DWT_MASK_MASK_Pos   0U"
DWT MASK: MASK Position 
.SS "#define DWT_MASK_MASK_Pos   0U"
DWT MASK: MASK Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Msk   (0xFFUL /*<< \fBDWT_SLEEPCNT_SLEEPCNT_Pos\fP*/)"
DWT SLEEPCNT: SLEEPCNT Mask 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define DWT_SLEEPCNT_SLEEPCNT_Pos   0U"
DWT SLEEPCNT: SLEEPCNT Position 
.SS "#define EXC_INTEGRITY_SIGNATURE   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"

.SS "#define EXC_INTEGRITY_SIGNATURE   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"

.SS "#define EXC_INTEGRITY_SIGNATURE   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"

.SS "#define EXC_INTEGRITY_SIGNATURE   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"

.SS "#define EXC_INTEGRITY_SIGNATURE   (0xFEFA125BUL)     /* Value for processors without floating\-point extension                */"

.SS "#define EXC_RETURN_DCRS   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"

.SS "#define EXC_RETURN_DCRS   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"

.SS "#define EXC_RETURN_DCRS   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"

.SS "#define EXC_RETURN_DCRS   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"

.SS "#define EXC_RETURN_DCRS   (0x00000020UL)     /* bit [5] stacking rules for called registers: 0=skipped 1=saved       */"

.SS "#define EXC_RETURN_ES   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"

.SS "#define EXC_RETURN_ES   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"

.SS "#define EXC_RETURN_ES   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"

.SS "#define EXC_RETURN_ES   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"

.SS "#define EXC_RETURN_ES   (0x00000001UL)     /* bit [0] security state exception was taken to: 0=Non\-secure 1=Secure */"

.SS "#define EXC_RETURN_FTYPE   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"

.SS "#define EXC_RETURN_FTYPE   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"

.SS "#define EXC_RETURN_FTYPE   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"

.SS "#define EXC_RETURN_FTYPE   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"

.SS "#define EXC_RETURN_FTYPE   (0x00000010UL)     /* bit [4] allocate stack for floating\-point context: 0=done 1=skipped  */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER   (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after return                               */"

.SS "#define EXC_RETURN_HANDLER_FPU   (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after return, restore floating\-point state */"

.SS "#define EXC_RETURN_HANDLER_FPU   (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after return, restore floating\-point state */"

.SS "#define EXC_RETURN_MODE   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"

.SS "#define EXC_RETURN_MODE   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"

.SS "#define EXC_RETURN_MODE   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"

.SS "#define EXC_RETURN_MODE   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"

.SS "#define EXC_RETURN_MODE   (0x00000008UL)     /* bit [3] processor mode for return: 0=Handler mode 1=Thread mode      */"

.SS "#define EXC_RETURN_PREFIX   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"

.SS "#define EXC_RETURN_PREFIX   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"

.SS "#define EXC_RETURN_PREFIX   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"

.SS "#define EXC_RETURN_PREFIX   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"

.SS "#define EXC_RETURN_PREFIX   (0xFF000000UL)     /* bits [31:24] set to indicate an EXC_RETURN value                     */"

.SS "#define EXC_RETURN_S   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"

.SS "#define EXC_RETURN_S   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"

.SS "#define EXC_RETURN_S   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"

.SS "#define EXC_RETURN_S   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"

.SS "#define EXC_RETURN_S   (0x00000040UL)     /* bit [6] stack used to push registers: 0=Non\-secure 1=Secure          */"

.SS "#define EXC_RETURN_SPSEL   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"

.SS "#define EXC_RETURN_SPSEL   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"

.SS "#define EXC_RETURN_SPSEL   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"

.SS "#define EXC_RETURN_SPSEL   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"

.SS "#define EXC_RETURN_SPSEL   (0x00000004UL)     /* bit [2] stack pointer used to restore context: 0=MSP 1=PSP           */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP   (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return                                */"

.SS "#define EXC_RETURN_THREAD_MSP_FPU   (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after return, restore floating\-point state  */"

.SS "#define EXC_RETURN_THREAD_MSP_FPU   (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after return, restore floating\-point state  */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP   (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return                                */"

.SS "#define EXC_RETURN_THREAD_PSP_FPU   (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after return, restore floating\-point state  */"

.SS "#define EXC_RETURN_THREAD_PSP_FPU   (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after return, restore floating\-point state  */"

.SS "#define FNC_RETURN   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"

.SS "#define FNC_RETURN   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"

.SS "#define FNC_RETURN   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"

.SS "#define FNC_RETURN   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"

.SS "#define FNC_RETURN   (0xFEFFFFFFUL)     /* bit [0] ignored when processing a branch                             */"

.SS "#define FPU   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
Floating Point Unit 
.SS "#define FPU   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
Floating Point Unit 
.SS "#define FPU   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
Floating Point Unit 
.SS "#define FPU   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP         )"
Floating Point Unit 
.SS "#define FPU   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP      )"
Floating Point Unit 
.SS "#define FPU   ((\fBFPU_Type\fP       *)     \fBFPU_BASE\fP      )"
Floating Point Unit 
.SS "#define FPU_BASE   (\fBSCS_BASE\fP +  0x0F30UL)"
Floating Point Unit 
.SS "#define FPU_BASE   (\fBSCS_BASE\fP +  0x0F30UL)"
Floating Point Unit 
.SS "#define FPU_BASE   (\fBSCS_BASE\fP +  0x0F30UL)"
Floating Point Unit 
.SS "#define FPU_BASE   (\fBSCS_BASE\fP +  0x0F30UL)"
Floating Point Unit 
.SS "#define FPU_BASE   (\fBSCS_BASE\fP +  0x0F30UL)"
Floating Point Unit 
.SS "#define FPU_BASE   (\fBSCS_BASE\fP +  0x0F30UL)"
Floating Point Unit 
.SS "#define FPU_FPCAR_ADDRESS_Msk   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
FPCAR: ADDRESS bit Mask 
.SS "#define FPU_FPCAR_ADDRESS_Msk   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
FPCAR: ADDRESS bit Mask 
.SS "#define FPU_FPCAR_ADDRESS_Msk   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
FPCAR: ADDRESS bit Mask 
.SS "#define FPU_FPCAR_ADDRESS_Msk   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
FPCAR: ADDRESS bit Mask 
.SS "#define FPU_FPCAR_ADDRESS_Msk   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
FPCAR: ADDRESS bit Mask 
.SS "#define FPU_FPCAR_ADDRESS_Msk   (0x1FFFFFFFUL << \fBFPU_FPCAR_ADDRESS_Pos\fP)"
FPCAR: ADDRESS bit Mask 
.SS "#define FPU_FPCAR_ADDRESS_Pos   3U"
FPCAR: ADDRESS bit Position 
.SS "#define FPU_FPCAR_ADDRESS_Pos   3U"
FPCAR: ADDRESS bit Position 
.SS "#define FPU_FPCAR_ADDRESS_Pos   3U"
FPCAR: ADDRESS bit Position 
.SS "#define FPU_FPCAR_ADDRESS_Pos   3U"
FPCAR: ADDRESS bit Position 
.SS "#define FPU_FPCAR_ADDRESS_Pos   3U"
FPCAR: ADDRESS bit Position 
.SS "#define FPU_FPCAR_ADDRESS_Pos   3U"
FPCAR: ADDRESS bit Position 
.SS "#define FPU_FPCCR_ASPEN_Msk   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
FPCCR: ASPEN bit Mask 
.SS "#define FPU_FPCCR_ASPEN_Msk   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
FPCCR: ASPEN bit Mask 
.SS "#define FPU_FPCCR_ASPEN_Msk   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
FPCCR: ASPEN bit Mask 
.SS "#define FPU_FPCCR_ASPEN_Msk   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
FPCCR: ASPEN bit Mask 
.SS "#define FPU_FPCCR_ASPEN_Msk   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
FPCCR: ASPEN bit Mask 
.SS "#define FPU_FPCCR_ASPEN_Msk   (1UL << \fBFPU_FPCCR_ASPEN_Pos\fP)"
FPCCR: ASPEN bit Mask 
.SS "#define FPU_FPCCR_ASPEN_Pos   31U"
FPCCR: ASPEN bit Position 
.SS "#define FPU_FPCCR_ASPEN_Pos   31U"
FPCCR: ASPEN bit Position 
.SS "#define FPU_FPCCR_ASPEN_Pos   31U"
FPCCR: ASPEN bit Position 
.SS "#define FPU_FPCCR_ASPEN_Pos   31U"
FPCCR: ASPEN bit Position 
.SS "#define FPU_FPCCR_ASPEN_Pos   31U"
FPCCR: ASPEN bit Position 
.SS "#define FPU_FPCCR_ASPEN_Pos   31U"
FPCCR: ASPEN bit Position 
.SS "#define FPU_FPCCR_BFRDY_Msk   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
FPCCR: BFRDY bit Mask 
.SS "#define FPU_FPCCR_BFRDY_Msk   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
FPCCR: BFRDY bit Mask 
.SS "#define FPU_FPCCR_BFRDY_Msk   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
FPCCR: BFRDY bit Mask 
.SS "#define FPU_FPCCR_BFRDY_Msk   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
FPCCR: BFRDY bit Mask 
.SS "#define FPU_FPCCR_BFRDY_Msk   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
FPCCR: BFRDY bit Mask 
.SS "#define FPU_FPCCR_BFRDY_Msk   (1UL << \fBFPU_FPCCR_BFRDY_Pos\fP)"
FPCCR: BFRDY bit Mask 
.SS "#define FPU_FPCCR_BFRDY_Pos   6U"
FPCCR: BFRDY Position 
.SS "#define FPU_FPCCR_BFRDY_Pos   6U"
FPCCR: BFRDY Position 
.SS "#define FPU_FPCCR_BFRDY_Pos   6U"
FPCCR: BFRDY Position 
.SS "#define FPU_FPCCR_BFRDY_Pos   6U"
FPCCR: BFRDY Position 
.SS "#define FPU_FPCCR_BFRDY_Pos   6U"
FPCCR: BFRDY Position 
.SS "#define FPU_FPCCR_BFRDY_Pos   6U"
FPCCR: BFRDY Position 
.SS "#define FPU_FPCCR_CLRONRET_Msk   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
FPCCR: CLRONRET bit Mask 
.SS "#define FPU_FPCCR_CLRONRET_Msk   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
FPCCR: CLRONRET bit Mask 
.SS "#define FPU_FPCCR_CLRONRET_Msk   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
FPCCR: CLRONRET bit Mask 
.SS "#define FPU_FPCCR_CLRONRET_Msk   (1UL << \fBFPU_FPCCR_CLRONRET_Pos\fP)"
FPCCR: CLRONRET bit Mask 
.SS "#define FPU_FPCCR_CLRONRET_Pos   28U"
FPCCR: CLRONRET Position 
.SS "#define FPU_FPCCR_CLRONRET_Pos   28U"
FPCCR: CLRONRET Position 
.SS "#define FPU_FPCCR_CLRONRET_Pos   28U"
FPCCR: CLRONRET Position 
.SS "#define FPU_FPCCR_CLRONRET_Pos   28U"
FPCCR: CLRONRET Position 
.SS "#define FPU_FPCCR_CLRONRETS_Msk   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
FPCCR: CLRONRETS bit Mask 
.SS "#define FPU_FPCCR_CLRONRETS_Msk   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
FPCCR: CLRONRETS bit Mask 
.SS "#define FPU_FPCCR_CLRONRETS_Msk   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
FPCCR: CLRONRETS bit Mask 
.SS "#define FPU_FPCCR_CLRONRETS_Msk   (1UL << \fBFPU_FPCCR_CLRONRETS_Pos\fP)"
FPCCR: CLRONRETS bit Mask 
.SS "#define FPU_FPCCR_CLRONRETS_Pos   27U"
FPCCR: CLRONRETS Position 
.SS "#define FPU_FPCCR_CLRONRETS_Pos   27U"
FPCCR: CLRONRETS Position 
.SS "#define FPU_FPCCR_CLRONRETS_Pos   27U"
FPCCR: CLRONRETS Position 
.SS "#define FPU_FPCCR_CLRONRETS_Pos   27U"
FPCCR: CLRONRETS Position 
.SS "#define FPU_FPCCR_HFRDY_Msk   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
FPCCR: HFRDY bit Mask 
.SS "#define FPU_FPCCR_HFRDY_Msk   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
FPCCR: HFRDY bit Mask 
.SS "#define FPU_FPCCR_HFRDY_Msk   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
FPCCR: HFRDY bit Mask 
.SS "#define FPU_FPCCR_HFRDY_Msk   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
FPCCR: HFRDY bit Mask 
.SS "#define FPU_FPCCR_HFRDY_Msk   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
FPCCR: HFRDY bit Mask 
.SS "#define FPU_FPCCR_HFRDY_Msk   (1UL << \fBFPU_FPCCR_HFRDY_Pos\fP)"
FPCCR: HFRDY bit Mask 
.SS "#define FPU_FPCCR_HFRDY_Pos   4U"
FPCCR: HFRDY Position 
.SS "#define FPU_FPCCR_HFRDY_Pos   4U"
FPCCR: HFRDY Position 
.SS "#define FPU_FPCCR_HFRDY_Pos   4U"
FPCCR: HFRDY Position 
.SS "#define FPU_FPCCR_HFRDY_Pos   4U"
FPCCR: HFRDY Position 
.SS "#define FPU_FPCCR_HFRDY_Pos   4U"
FPCCR: HFRDY Position 
.SS "#define FPU_FPCCR_HFRDY_Pos   4U"
FPCCR: HFRDY Position 
.SS "#define FPU_FPCCR_LSPACT_Msk   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
FPCCR: Lazy state preservation active bit Mask 
.SS "#define FPU_FPCCR_LSPACT_Msk   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
FPCCR: Lazy state preservation active bit Mask 
.SS "#define FPU_FPCCR_LSPACT_Msk   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
FPCCR: Lazy state preservation active bit Mask 
.SS "#define FPU_FPCCR_LSPACT_Msk   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
FPCCR: Lazy state preservation active bit Mask 
.SS "#define FPU_FPCCR_LSPACT_Msk   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
FPCCR: Lazy state preservation active bit Mask 
.SS "#define FPU_FPCCR_LSPACT_Msk   (1UL /*<< \fBFPU_FPCCR_LSPACT_Pos\fP*/)"
FPCCR: Lazy state preservation active bit Mask 
.SS "#define FPU_FPCCR_LSPACT_Pos   0U"
FPCCR: Lazy state preservation active bit Position 
.SS "#define FPU_FPCCR_LSPACT_Pos   0U"
FPCCR: Lazy state preservation active bit Position 
.SS "#define FPU_FPCCR_LSPACT_Pos   0U"
FPCCR: Lazy state preservation active bit Position 
.SS "#define FPU_FPCCR_LSPACT_Pos   0U"
FPCCR: Lazy state preservation active bit Position 
.SS "#define FPU_FPCCR_LSPACT_Pos   0U"
FPCCR: Lazy state preservation active bit Position 
.SS "#define FPU_FPCCR_LSPACT_Pos   0U"
FPCCR: Lazy state preservation active bit Position 
.SS "#define FPU_FPCCR_LSPEN_Msk   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
FPCCR: LSPEN bit Mask 
.SS "#define FPU_FPCCR_LSPEN_Msk   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
FPCCR: LSPEN bit Mask 
.SS "#define FPU_FPCCR_LSPEN_Msk   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
FPCCR: LSPEN bit Mask 
.SS "#define FPU_FPCCR_LSPEN_Msk   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
FPCCR: LSPEN bit Mask 
.SS "#define FPU_FPCCR_LSPEN_Msk   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
FPCCR: LSPEN bit Mask 
.SS "#define FPU_FPCCR_LSPEN_Msk   (1UL << \fBFPU_FPCCR_LSPEN_Pos\fP)"
FPCCR: LSPEN bit Mask 
.SS "#define FPU_FPCCR_LSPEN_Pos   30U"
FPCCR: LSPEN Position 
.SS "#define FPU_FPCCR_LSPEN_Pos   30U"
FPCCR: LSPEN Position 
.SS "#define FPU_FPCCR_LSPEN_Pos   30U"
FPCCR: LSPEN Position 
.SS "#define FPU_FPCCR_LSPEN_Pos   30U"
FPCCR: LSPEN Position 
.SS "#define FPU_FPCCR_LSPEN_Pos   30U"
FPCCR: LSPEN Position 
.SS "#define FPU_FPCCR_LSPEN_Pos   30U"
FPCCR: LSPEN Position 
.SS "#define FPU_FPCCR_LSPENS_Msk   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
FPCCR: LSPENS bit Mask 
.SS "#define FPU_FPCCR_LSPENS_Msk   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
FPCCR: LSPENS bit Mask 
.SS "#define FPU_FPCCR_LSPENS_Msk   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
FPCCR: LSPENS bit Mask 
.SS "#define FPU_FPCCR_LSPENS_Msk   (1UL << \fBFPU_FPCCR_LSPENS_Pos\fP)"
FPCCR: LSPENS bit Mask 
.SS "#define FPU_FPCCR_LSPENS_Pos   29U"
FPCCR: LSPENS Position 
.SS "#define FPU_FPCCR_LSPENS_Pos   29U"
FPCCR: LSPENS Position 
.SS "#define FPU_FPCCR_LSPENS_Pos   29U"
FPCCR: LSPENS Position 
.SS "#define FPU_FPCCR_LSPENS_Pos   29U"
FPCCR: LSPENS Position 
.SS "#define FPU_FPCCR_MMRDY_Msk   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
FPCCR: MMRDY bit Mask 
.SS "#define FPU_FPCCR_MMRDY_Msk   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
FPCCR: MMRDY bit Mask 
.SS "#define FPU_FPCCR_MMRDY_Msk   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
FPCCR: MMRDY bit Mask 
.SS "#define FPU_FPCCR_MMRDY_Msk   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
FPCCR: MMRDY bit Mask 
.SS "#define FPU_FPCCR_MMRDY_Msk   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
FPCCR: MMRDY bit Mask 
.SS "#define FPU_FPCCR_MMRDY_Msk   (1UL << \fBFPU_FPCCR_MMRDY_Pos\fP)"
FPCCR: MMRDY bit Mask 
.SS "#define FPU_FPCCR_MMRDY_Pos   5U"
FPCCR: MMRDY Position 
.SS "#define FPU_FPCCR_MMRDY_Pos   5U"
FPCCR: MMRDY Position 
.SS "#define FPU_FPCCR_MMRDY_Pos   5U"
FPCCR: MMRDY Position 
.SS "#define FPU_FPCCR_MMRDY_Pos   5U"
FPCCR: MMRDY Position 
.SS "#define FPU_FPCCR_MMRDY_Pos   5U"
FPCCR: MMRDY Position 
.SS "#define FPU_FPCCR_MMRDY_Pos   5U"
FPCCR: MMRDY Position 
.SS "#define FPU_FPCCR_MONRDY_Msk   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
FPCCR: MONRDY bit Mask 
.SS "#define FPU_FPCCR_MONRDY_Msk   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
FPCCR: MONRDY bit Mask 
.SS "#define FPU_FPCCR_MONRDY_Msk   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
FPCCR: MONRDY bit Mask 
.SS "#define FPU_FPCCR_MONRDY_Msk   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
FPCCR: MONRDY bit Mask 
.SS "#define FPU_FPCCR_MONRDY_Msk   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
FPCCR: MONRDY bit Mask 
.SS "#define FPU_FPCCR_MONRDY_Msk   (1UL << \fBFPU_FPCCR_MONRDY_Pos\fP)"
FPCCR: MONRDY bit Mask 
.SS "#define FPU_FPCCR_MONRDY_Pos   8U"
FPCCR: MONRDY Position 
.SS "#define FPU_FPCCR_MONRDY_Pos   8U"
FPCCR: MONRDY Position 
.SS "#define FPU_FPCCR_MONRDY_Pos   8U"
FPCCR: MONRDY Position 
.SS "#define FPU_FPCCR_MONRDY_Pos   8U"
FPCCR: MONRDY Position 
.SS "#define FPU_FPCCR_MONRDY_Pos   8U"
FPCCR: MONRDY Position 
.SS "#define FPU_FPCCR_MONRDY_Pos   8U"
FPCCR: MONRDY Position 
.SS "#define FPU_FPCCR_S_Msk   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
FPCCR: Security status of the FP context bit Mask 
.SS "#define FPU_FPCCR_S_Msk   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
FPCCR: Security status of the FP context bit Mask 
.SS "#define FPU_FPCCR_S_Msk   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
FPCCR: Security status of the FP context bit Mask 
.SS "#define FPU_FPCCR_S_Msk   (1UL << \fBFPU_FPCCR_S_Pos\fP)"
FPCCR: Security status of the FP context bit Mask 
.SS "#define FPU_FPCCR_S_Pos   2U"
FPCCR: Security status of the FP context bit Position 
.SS "#define FPU_FPCCR_S_Pos   2U"
FPCCR: Security status of the FP context bit Position 
.SS "#define FPU_FPCCR_S_Pos   2U"
FPCCR: Security status of the FP context bit Position 
.SS "#define FPU_FPCCR_S_Pos   2U"
FPCCR: Security status of the FP context bit Position 
.SS "#define FPU_FPCCR_SFRDY_Msk   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
FPCCR: SFRDY bit Mask 
.SS "#define FPU_FPCCR_SFRDY_Msk   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
FPCCR: SFRDY bit Mask 
.SS "#define FPU_FPCCR_SFRDY_Msk   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
FPCCR: SFRDY bit Mask 
.SS "#define FPU_FPCCR_SFRDY_Msk   (1UL << \fBFPU_FPCCR_SFRDY_Pos\fP)"
FPCCR: SFRDY bit Mask 
.SS "#define FPU_FPCCR_SFRDY_Pos   7U"
FPCCR: SFRDY Position 
.SS "#define FPU_FPCCR_SFRDY_Pos   7U"
FPCCR: SFRDY Position 
.SS "#define FPU_FPCCR_SFRDY_Pos   7U"
FPCCR: SFRDY Position 
.SS "#define FPU_FPCCR_SFRDY_Pos   7U"
FPCCR: SFRDY Position 
.SS "#define FPU_FPCCR_SPLIMVIOL_Msk   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
FPCCR: SPLIMVIOL bit Mask 
.SS "#define FPU_FPCCR_SPLIMVIOL_Msk   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
FPCCR: SPLIMVIOL bit Mask 
.SS "#define FPU_FPCCR_SPLIMVIOL_Msk   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
FPCCR: SPLIMVIOL bit Mask 
.SS "#define FPU_FPCCR_SPLIMVIOL_Msk   (1UL << \fBFPU_FPCCR_SPLIMVIOL_Pos\fP)"
FPCCR: SPLIMVIOL bit Mask 
.SS "#define FPU_FPCCR_SPLIMVIOL_Pos   9U"
FPCCR: SPLIMVIOL Position 
.SS "#define FPU_FPCCR_SPLIMVIOL_Pos   9U"
FPCCR: SPLIMVIOL Position 
.SS "#define FPU_FPCCR_SPLIMVIOL_Pos   9U"
FPCCR: SPLIMVIOL Position 
.SS "#define FPU_FPCCR_SPLIMVIOL_Pos   9U"
FPCCR: SPLIMVIOL Position 
.SS "#define FPU_FPCCR_THREAD_Msk   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
FPCCR: processor mode active bit Mask 
.SS "#define FPU_FPCCR_THREAD_Msk   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
FPCCR: processor mode active bit Mask 
.SS "#define FPU_FPCCR_THREAD_Msk   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
FPCCR: processor mode active bit Mask 
.SS "#define FPU_FPCCR_THREAD_Msk   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
FPCCR: processor mode active bit Mask 
.SS "#define FPU_FPCCR_THREAD_Msk   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
FPCCR: processor mode active bit Mask 
.SS "#define FPU_FPCCR_THREAD_Msk   (1UL << \fBFPU_FPCCR_THREAD_Pos\fP)"
FPCCR: processor mode active bit Mask 
.SS "#define FPU_FPCCR_THREAD_Pos   3U"
FPCCR: processor mode bit Position 
.SS "#define FPU_FPCCR_THREAD_Pos   3U"
FPCCR: processor mode bit Position 
.SS "#define FPU_FPCCR_THREAD_Pos   3U"
FPCCR: processor mode bit Position 
.SS "#define FPU_FPCCR_THREAD_Pos   3U"
FPCCR: processor mode bit Position 
.SS "#define FPU_FPCCR_THREAD_Pos   3U"
FPCCR: processor mode bit Position 
.SS "#define FPU_FPCCR_THREAD_Pos   3U"
FPCCR: processor mode bit Position 
.SS "#define FPU_FPCCR_TS_Msk   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
FPCCR: TS bit Mask 
.SS "#define FPU_FPCCR_TS_Msk   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
FPCCR: TS bit Mask 
.SS "#define FPU_FPCCR_TS_Msk   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
FPCCR: TS bit Mask 
.SS "#define FPU_FPCCR_TS_Msk   (1UL << \fBFPU_FPCCR_TS_Pos\fP)"
FPCCR: TS bit Mask 
.SS "#define FPU_FPCCR_TS_Pos   26U"
FPCCR: TS Position 
.SS "#define FPU_FPCCR_TS_Pos   26U"
FPCCR: TS Position 
.SS "#define FPU_FPCCR_TS_Pos   26U"
FPCCR: TS Position 
.SS "#define FPU_FPCCR_TS_Pos   26U"
FPCCR: TS Position 
.SS "#define FPU_FPCCR_UFRDY_Msk   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
FPCCR: UFRDY bit Mask 
.SS "#define FPU_FPCCR_UFRDY_Msk   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
FPCCR: UFRDY bit Mask 
.SS "#define FPU_FPCCR_UFRDY_Msk   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
FPCCR: UFRDY bit Mask 
.SS "#define FPU_FPCCR_UFRDY_Msk   (1UL << \fBFPU_FPCCR_UFRDY_Pos\fP)"
FPCCR: UFRDY bit Mask 
.SS "#define FPU_FPCCR_UFRDY_Pos   10U"
FPCCR: UFRDY Position 
.SS "#define FPU_FPCCR_UFRDY_Pos   10U"
FPCCR: UFRDY Position 
.SS "#define FPU_FPCCR_UFRDY_Pos   10U"
FPCCR: UFRDY Position 
.SS "#define FPU_FPCCR_UFRDY_Pos   10U"
FPCCR: UFRDY Position 
.SS "#define FPU_FPCCR_USER_Msk   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
FPCCR: privilege level bit Mask 
.SS "#define FPU_FPCCR_USER_Msk   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
FPCCR: privilege level bit Mask 
.SS "#define FPU_FPCCR_USER_Msk   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
FPCCR: privilege level bit Mask 
.SS "#define FPU_FPCCR_USER_Msk   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
FPCCR: privilege level bit Mask 
.SS "#define FPU_FPCCR_USER_Msk   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
FPCCR: privilege level bit Mask 
.SS "#define FPU_FPCCR_USER_Msk   (1UL << \fBFPU_FPCCR_USER_Pos\fP)"
FPCCR: privilege level bit Mask 
.SS "#define FPU_FPCCR_USER_Pos   1U"
FPCCR: privilege level bit Position 
.SS "#define FPU_FPCCR_USER_Pos   1U"
FPCCR: privilege level bit Position 
.SS "#define FPU_FPCCR_USER_Pos   1U"
FPCCR: privilege level bit Position 
.SS "#define FPU_FPCCR_USER_Pos   1U"
FPCCR: privilege level bit Position 
.SS "#define FPU_FPCCR_USER_Pos   1U"
FPCCR: privilege level bit Position 
.SS "#define FPU_FPCCR_USER_Pos   1U"
FPCCR: privilege level bit Position 
.SS "#define FPU_FPDSCR_AHP_Msk   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
FPDSCR: AHP bit Mask 
.SS "#define FPU_FPDSCR_AHP_Msk   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
FPDSCR: AHP bit Mask 
.SS "#define FPU_FPDSCR_AHP_Msk   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
FPDSCR: AHP bit Mask 
.SS "#define FPU_FPDSCR_AHP_Msk   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
FPDSCR: AHP bit Mask 
.SS "#define FPU_FPDSCR_AHP_Msk   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
FPDSCR: AHP bit Mask 
.SS "#define FPU_FPDSCR_AHP_Msk   (1UL << \fBFPU_FPDSCR_AHP_Pos\fP)"
FPDSCR: AHP bit Mask 
.SS "#define FPU_FPDSCR_AHP_Pos   26U"
FPDSCR: AHP bit Position 
.SS "#define FPU_FPDSCR_AHP_Pos   26U"
FPDSCR: AHP bit Position 
.SS "#define FPU_FPDSCR_AHP_Pos   26U"
FPDSCR: AHP bit Position 
.SS "#define FPU_FPDSCR_AHP_Pos   26U"
FPDSCR: AHP bit Position 
.SS "#define FPU_FPDSCR_AHP_Pos   26U"
FPDSCR: AHP bit Position 
.SS "#define FPU_FPDSCR_AHP_Pos   26U"
FPDSCR: AHP bit Position 
.SS "#define FPU_FPDSCR_DN_Msk   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
FPDSCR: DN bit Mask 
.SS "#define FPU_FPDSCR_DN_Msk   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
FPDSCR: DN bit Mask 
.SS "#define FPU_FPDSCR_DN_Msk   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
FPDSCR: DN bit Mask 
.SS "#define FPU_FPDSCR_DN_Msk   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
FPDSCR: DN bit Mask 
.SS "#define FPU_FPDSCR_DN_Msk   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
FPDSCR: DN bit Mask 
.SS "#define FPU_FPDSCR_DN_Msk   (1UL << \fBFPU_FPDSCR_DN_Pos\fP)"
FPDSCR: DN bit Mask 
.SS "#define FPU_FPDSCR_DN_Pos   25U"
FPDSCR: DN bit Position 
.SS "#define FPU_FPDSCR_DN_Pos   25U"
FPDSCR: DN bit Position 
.SS "#define FPU_FPDSCR_DN_Pos   25U"
FPDSCR: DN bit Position 
.SS "#define FPU_FPDSCR_DN_Pos   25U"
FPDSCR: DN bit Position 
.SS "#define FPU_FPDSCR_DN_Pos   25U"
FPDSCR: DN bit Position 
.SS "#define FPU_FPDSCR_DN_Pos   25U"
FPDSCR: DN bit Position 
.SS "#define FPU_FPDSCR_FZ_Msk   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
FPDSCR: FZ bit Mask 
.SS "#define FPU_FPDSCR_FZ_Msk   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
FPDSCR: FZ bit Mask 
.SS "#define FPU_FPDSCR_FZ_Msk   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
FPDSCR: FZ bit Mask 
.SS "#define FPU_FPDSCR_FZ_Msk   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
FPDSCR: FZ bit Mask 
.SS "#define FPU_FPDSCR_FZ_Msk   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
FPDSCR: FZ bit Mask 
.SS "#define FPU_FPDSCR_FZ_Msk   (1UL << \fBFPU_FPDSCR_FZ_Pos\fP)"
FPDSCR: FZ bit Mask 
.SS "#define FPU_FPDSCR_FZ_Pos   24U"
FPDSCR: FZ bit Position 
.SS "#define FPU_FPDSCR_FZ_Pos   24U"
FPDSCR: FZ bit Position 
.SS "#define FPU_FPDSCR_FZ_Pos   24U"
FPDSCR: FZ bit Position 
.SS "#define FPU_FPDSCR_FZ_Pos   24U"
FPDSCR: FZ bit Position 
.SS "#define FPU_FPDSCR_FZ_Pos   24U"
FPDSCR: FZ bit Position 
.SS "#define FPU_FPDSCR_FZ_Pos   24U"
FPDSCR: FZ bit Position 
.SS "#define FPU_FPDSCR_RMode_Msk   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
FPDSCR: RMode bit Mask 
.SS "#define FPU_FPDSCR_RMode_Msk   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
FPDSCR: RMode bit Mask 
.SS "#define FPU_FPDSCR_RMode_Msk   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
FPDSCR: RMode bit Mask 
.SS "#define FPU_FPDSCR_RMode_Msk   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
FPDSCR: RMode bit Mask 
.SS "#define FPU_FPDSCR_RMode_Msk   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
FPDSCR: RMode bit Mask 
.SS "#define FPU_FPDSCR_RMode_Msk   (3UL << \fBFPU_FPDSCR_RMode_Pos\fP)"
FPDSCR: RMode bit Mask 
.SS "#define FPU_FPDSCR_RMode_Pos   22U"
FPDSCR: RMode bit Position 
.SS "#define FPU_FPDSCR_RMode_Pos   22U"
FPDSCR: RMode bit Position 
.SS "#define FPU_FPDSCR_RMode_Pos   22U"
FPDSCR: RMode bit Position 
.SS "#define FPU_FPDSCR_RMode_Pos   22U"
FPDSCR: RMode bit Position 
.SS "#define FPU_FPDSCR_RMode_Pos   22U"
FPDSCR: RMode bit Position 
.SS "#define FPU_FPDSCR_RMode_Pos   22U"
FPDSCR: RMode bit Position 
.SS "#define FPU_MVFR0_A_SIMD_registers_Msk   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
MVFR0: A_SIMD registers bits Mask 
.SS "#define FPU_MVFR0_A_SIMD_registers_Msk   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
MVFR0: A_SIMD registers bits Mask 
.SS "#define FPU_MVFR0_A_SIMD_registers_Msk   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
MVFR0: A_SIMD registers bits Mask 
.SS "#define FPU_MVFR0_A_SIMD_registers_Msk   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
MVFR0: A_SIMD registers bits Mask 
.SS "#define FPU_MVFR0_A_SIMD_registers_Msk   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
MVFR0: A_SIMD registers bits Mask 
.SS "#define FPU_MVFR0_A_SIMD_registers_Msk   (0xFUL /*<< \fBFPU_MVFR0_A_SIMD_registers_Pos\fP*/)"
MVFR0: A_SIMD registers bits Mask 
.SS "#define FPU_MVFR0_A_SIMD_registers_Pos   0U"
MVFR0: A_SIMD registers bits Position 
.SS "#define FPU_MVFR0_A_SIMD_registers_Pos   0U"
MVFR0: A_SIMD registers bits Position 
.SS "#define FPU_MVFR0_A_SIMD_registers_Pos   0U"
MVFR0: A_SIMD registers bits Position 
.SS "#define FPU_MVFR0_A_SIMD_registers_Pos   0U"
MVFR0: A_SIMD registers bits Position 
.SS "#define FPU_MVFR0_A_SIMD_registers_Pos   0U"
MVFR0: A_SIMD registers bits Position 
.SS "#define FPU_MVFR0_A_SIMD_registers_Pos   0U"
MVFR0: A_SIMD registers bits Position 
.SS "#define FPU_MVFR0_Divide_Msk   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
MVFR0: Divide bits Mask 
.SS "#define FPU_MVFR0_Divide_Msk   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
MVFR0: Divide bits Mask 
.SS "#define FPU_MVFR0_Divide_Msk   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
MVFR0: Divide bits Mask 
.SS "#define FPU_MVFR0_Divide_Msk   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
MVFR0: Divide bits Mask 
.SS "#define FPU_MVFR0_Divide_Msk   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
MVFR0: Divide bits Mask 
.SS "#define FPU_MVFR0_Divide_Msk   (0xFUL << \fBFPU_MVFR0_Divide_Pos\fP)"
MVFR0: Divide bits Mask 
.SS "#define FPU_MVFR0_Divide_Pos   16U"
MVFR0: Divide bits Position 
.SS "#define FPU_MVFR0_Divide_Pos   16U"
MVFR0: Divide bits Position 
.SS "#define FPU_MVFR0_Divide_Pos   16U"
MVFR0: Divide bits Position 
.SS "#define FPU_MVFR0_Divide_Pos   16U"
MVFR0: Divide bits Position 
.SS "#define FPU_MVFR0_Divide_Pos   16U"
MVFR0: Divide bits Position 
.SS "#define FPU_MVFR0_Divide_Pos   16U"
MVFR0: Divide bits Position 
.SS "#define FPU_MVFR0_Double_precision_Msk   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
MVFR0: Double-precision bits Mask 
.SS "#define FPU_MVFR0_Double_precision_Msk   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
MVFR0: Double-precision bits Mask 
.SS "#define FPU_MVFR0_Double_precision_Msk   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
MVFR0: Double-precision bits Mask 
.SS "#define FPU_MVFR0_Double_precision_Msk   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
MVFR0: Double-precision bits Mask 
.SS "#define FPU_MVFR0_Double_precision_Msk   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
MVFR0: Double-precision bits Mask 
.SS "#define FPU_MVFR0_Double_precision_Msk   (0xFUL << \fBFPU_MVFR0_Double_precision_Pos\fP)"
MVFR0: Double-precision bits Mask 
.SS "#define FPU_MVFR0_Double_precision_Pos   8U"
MVFR0: Double-precision bits Position 
.SS "#define FPU_MVFR0_Double_precision_Pos   8U"
MVFR0: Double-precision bits Position 
.SS "#define FPU_MVFR0_Double_precision_Pos   8U"
MVFR0: Double-precision bits Position 
.SS "#define FPU_MVFR0_Double_precision_Pos   8U"
MVFR0: Double-precision bits Position 
.SS "#define FPU_MVFR0_Double_precision_Pos   8U"
MVFR0: Double-precision bits Position 
.SS "#define FPU_MVFR0_Double_precision_Pos   8U"
MVFR0: Double-precision bits Position 
.SS "#define FPU_MVFR0_FP_excep_trapping_Msk   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
MVFR0: FP exception trapping bits Mask 
.SS "#define FPU_MVFR0_FP_excep_trapping_Msk   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
MVFR0: FP exception trapping bits Mask 
.SS "#define FPU_MVFR0_FP_excep_trapping_Msk   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
MVFR0: FP exception trapping bits Mask 
.SS "#define FPU_MVFR0_FP_excep_trapping_Msk   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
MVFR0: FP exception trapping bits Mask 
.SS "#define FPU_MVFR0_FP_excep_trapping_Msk   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
MVFR0: FP exception trapping bits Mask 
.SS "#define FPU_MVFR0_FP_excep_trapping_Msk   (0xFUL << \fBFPU_MVFR0_FP_excep_trapping_Pos\fP)"
MVFR0: FP exception trapping bits Mask 
.SS "#define FPU_MVFR0_FP_excep_trapping_Pos   12U"
MVFR0: FP exception trapping bits Position 
.SS "#define FPU_MVFR0_FP_excep_trapping_Pos   12U"
MVFR0: FP exception trapping bits Position 
.SS "#define FPU_MVFR0_FP_excep_trapping_Pos   12U"
MVFR0: FP exception trapping bits Position 
.SS "#define FPU_MVFR0_FP_excep_trapping_Pos   12U"
MVFR0: FP exception trapping bits Position 
.SS "#define FPU_MVFR0_FP_excep_trapping_Pos   12U"
MVFR0: FP exception trapping bits Position 
.SS "#define FPU_MVFR0_FP_excep_trapping_Pos   12U"
MVFR0: FP exception trapping bits Position 
.SS "#define FPU_MVFR0_FP_rounding_modes_Msk   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
MVFR0: FP rounding modes bits Mask 
.SS "#define FPU_MVFR0_FP_rounding_modes_Msk   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
MVFR0: FP rounding modes bits Mask 
.SS "#define FPU_MVFR0_FP_rounding_modes_Msk   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
MVFR0: FP rounding modes bits Mask 
.SS "#define FPU_MVFR0_FP_rounding_modes_Msk   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
MVFR0: FP rounding modes bits Mask 
.SS "#define FPU_MVFR0_FP_rounding_modes_Msk   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
MVFR0: FP rounding modes bits Mask 
.SS "#define FPU_MVFR0_FP_rounding_modes_Msk   (0xFUL << \fBFPU_MVFR0_FP_rounding_modes_Pos\fP)"
MVFR0: FP rounding modes bits Mask 
.SS "#define FPU_MVFR0_FP_rounding_modes_Pos   28U"
MVFR0: FP rounding modes bits Position 
.SS "#define FPU_MVFR0_FP_rounding_modes_Pos   28U"
MVFR0: FP rounding modes bits Position 
.SS "#define FPU_MVFR0_FP_rounding_modes_Pos   28U"
MVFR0: FP rounding modes bits Position 
.SS "#define FPU_MVFR0_FP_rounding_modes_Pos   28U"
MVFR0: FP rounding modes bits Position 
.SS "#define FPU_MVFR0_FP_rounding_modes_Pos   28U"
MVFR0: FP rounding modes bits Position 
.SS "#define FPU_MVFR0_FP_rounding_modes_Pos   28U"
MVFR0: FP rounding modes bits Position 
.SS "#define FPU_MVFR0_Short_vectors_Msk   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
MVFR0: Short vectors bits Mask 
.SS "#define FPU_MVFR0_Short_vectors_Msk   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
MVFR0: Short vectors bits Mask 
.SS "#define FPU_MVFR0_Short_vectors_Msk   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
MVFR0: Short vectors bits Mask 
.SS "#define FPU_MVFR0_Short_vectors_Msk   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
MVFR0: Short vectors bits Mask 
.SS "#define FPU_MVFR0_Short_vectors_Msk   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
MVFR0: Short vectors bits Mask 
.SS "#define FPU_MVFR0_Short_vectors_Msk   (0xFUL << \fBFPU_MVFR0_Short_vectors_Pos\fP)"
MVFR0: Short vectors bits Mask 
.SS "#define FPU_MVFR0_Short_vectors_Pos   24U"
MVFR0: Short vectors bits Position 
.SS "#define FPU_MVFR0_Short_vectors_Pos   24U"
MVFR0: Short vectors bits Position 
.SS "#define FPU_MVFR0_Short_vectors_Pos   24U"
MVFR0: Short vectors bits Position 
.SS "#define FPU_MVFR0_Short_vectors_Pos   24U"
MVFR0: Short vectors bits Position 
.SS "#define FPU_MVFR0_Short_vectors_Pos   24U"
MVFR0: Short vectors bits Position 
.SS "#define FPU_MVFR0_Short_vectors_Pos   24U"
MVFR0: Short vectors bits Position 
.SS "#define FPU_MVFR0_Single_precision_Msk   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
MVFR0: Single-precision bits Mask 
.SS "#define FPU_MVFR0_Single_precision_Msk   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
MVFR0: Single-precision bits Mask 
.SS "#define FPU_MVFR0_Single_precision_Msk   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
MVFR0: Single-precision bits Mask 
.SS "#define FPU_MVFR0_Single_precision_Msk   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
MVFR0: Single-precision bits Mask 
.SS "#define FPU_MVFR0_Single_precision_Msk   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
MVFR0: Single-precision bits Mask 
.SS "#define FPU_MVFR0_Single_precision_Msk   (0xFUL << \fBFPU_MVFR0_Single_precision_Pos\fP)"
MVFR0: Single-precision bits Mask 
.SS "#define FPU_MVFR0_Single_precision_Pos   4U"
MVFR0: Single-precision bits Position 
.SS "#define FPU_MVFR0_Single_precision_Pos   4U"
MVFR0: Single-precision bits Position 
.SS "#define FPU_MVFR0_Single_precision_Pos   4U"
MVFR0: Single-precision bits Position 
.SS "#define FPU_MVFR0_Single_precision_Pos   4U"
MVFR0: Single-precision bits Position 
.SS "#define FPU_MVFR0_Single_precision_Pos   4U"
MVFR0: Single-precision bits Position 
.SS "#define FPU_MVFR0_Single_precision_Pos   4U"
MVFR0: Single-precision bits Position 
.SS "#define FPU_MVFR0_Square_root_Msk   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
MVFR0: Square root bits Mask 
.SS "#define FPU_MVFR0_Square_root_Msk   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
MVFR0: Square root bits Mask 
.SS "#define FPU_MVFR0_Square_root_Msk   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
MVFR0: Square root bits Mask 
.SS "#define FPU_MVFR0_Square_root_Msk   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
MVFR0: Square root bits Mask 
.SS "#define FPU_MVFR0_Square_root_Msk   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
MVFR0: Square root bits Mask 
.SS "#define FPU_MVFR0_Square_root_Msk   (0xFUL << \fBFPU_MVFR0_Square_root_Pos\fP)"
MVFR0: Square root bits Mask 
.SS "#define FPU_MVFR0_Square_root_Pos   20U"
MVFR0: Square root bits Position 
.SS "#define FPU_MVFR0_Square_root_Pos   20U"
MVFR0: Square root bits Position 
.SS "#define FPU_MVFR0_Square_root_Pos   20U"
MVFR0: Square root bits Position 
.SS "#define FPU_MVFR0_Square_root_Pos   20U"
MVFR0: Square root bits Position 
.SS "#define FPU_MVFR0_Square_root_Pos   20U"
MVFR0: Square root bits Position 
.SS "#define FPU_MVFR0_Square_root_Pos   20U"
MVFR0: Square root bits Position 
.SS "#define FPU_MVFR1_D_NaN_mode_Msk   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
MVFR1: D_NaN mode bits Mask 
.SS "#define FPU_MVFR1_D_NaN_mode_Msk   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
MVFR1: D_NaN mode bits Mask 
.SS "#define FPU_MVFR1_D_NaN_mode_Msk   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
MVFR1: D_NaN mode bits Mask 
.SS "#define FPU_MVFR1_D_NaN_mode_Msk   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
MVFR1: D_NaN mode bits Mask 
.SS "#define FPU_MVFR1_D_NaN_mode_Msk   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
MVFR1: D_NaN mode bits Mask 
.SS "#define FPU_MVFR1_D_NaN_mode_Msk   (0xFUL << \fBFPU_MVFR1_D_NaN_mode_Pos\fP)"
MVFR1: D_NaN mode bits Mask 
.SS "#define FPU_MVFR1_D_NaN_mode_Pos   4U"
MVFR1: D_NaN mode bits Position 
.SS "#define FPU_MVFR1_D_NaN_mode_Pos   4U"
MVFR1: D_NaN mode bits Position 
.SS "#define FPU_MVFR1_D_NaN_mode_Pos   4U"
MVFR1: D_NaN mode bits Position 
.SS "#define FPU_MVFR1_D_NaN_mode_Pos   4U"
MVFR1: D_NaN mode bits Position 
.SS "#define FPU_MVFR1_D_NaN_mode_Pos   4U"
MVFR1: D_NaN mode bits Position 
.SS "#define FPU_MVFR1_D_NaN_mode_Pos   4U"
MVFR1: D_NaN mode bits Position 
.SS "#define FPU_MVFR1_FP_fused_MAC_Msk   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
MVFR1: FP fused MAC bits Mask 
.SS "#define FPU_MVFR1_FP_fused_MAC_Msk   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
MVFR1: FP fused MAC bits Mask 
.SS "#define FPU_MVFR1_FP_fused_MAC_Msk   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
MVFR1: FP fused MAC bits Mask 
.SS "#define FPU_MVFR1_FP_fused_MAC_Msk   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
MVFR1: FP fused MAC bits Mask 
.SS "#define FPU_MVFR1_FP_fused_MAC_Msk   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
MVFR1: FP fused MAC bits Mask 
.SS "#define FPU_MVFR1_FP_fused_MAC_Msk   (0xFUL << \fBFPU_MVFR1_FP_fused_MAC_Pos\fP)"
MVFR1: FP fused MAC bits Mask 
.SS "#define FPU_MVFR1_FP_fused_MAC_Pos   28U"
MVFR1: FP fused MAC bits Position 
.SS "#define FPU_MVFR1_FP_fused_MAC_Pos   28U"
MVFR1: FP fused MAC bits Position 
.SS "#define FPU_MVFR1_FP_fused_MAC_Pos   28U"
MVFR1: FP fused MAC bits Position 
.SS "#define FPU_MVFR1_FP_fused_MAC_Pos   28U"
MVFR1: FP fused MAC bits Position 
.SS "#define FPU_MVFR1_FP_fused_MAC_Pos   28U"
MVFR1: FP fused MAC bits Position 
.SS "#define FPU_MVFR1_FP_fused_MAC_Pos   28U"
MVFR1: FP fused MAC bits Position 
.SS "#define FPU_MVFR1_FP_HPFP_Msk   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
MVFR1: FP HPFP bits Mask 
.SS "#define FPU_MVFR1_FP_HPFP_Msk   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
MVFR1: FP HPFP bits Mask 
.SS "#define FPU_MVFR1_FP_HPFP_Msk   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
MVFR1: FP HPFP bits Mask 
.SS "#define FPU_MVFR1_FP_HPFP_Msk   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
MVFR1: FP HPFP bits Mask 
.SS "#define FPU_MVFR1_FP_HPFP_Msk   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
MVFR1: FP HPFP bits Mask 
.SS "#define FPU_MVFR1_FP_HPFP_Msk   (0xFUL << \fBFPU_MVFR1_FP_HPFP_Pos\fP)"
MVFR1: FP HPFP bits Mask 
.SS "#define FPU_MVFR1_FP_HPFP_Pos   24U"
MVFR1: FP HPFP bits Position 
.SS "#define FPU_MVFR1_FP_HPFP_Pos   24U"
MVFR1: FP HPFP bits Position 
.SS "#define FPU_MVFR1_FP_HPFP_Pos   24U"
MVFR1: FP HPFP bits Position 
.SS "#define FPU_MVFR1_FP_HPFP_Pos   24U"
MVFR1: FP HPFP bits Position 
.SS "#define FPU_MVFR1_FP_HPFP_Pos   24U"
MVFR1: FP HPFP bits Position 
.SS "#define FPU_MVFR1_FP_HPFP_Pos   24U"
MVFR1: FP HPFP bits Position 
.SS "#define FPU_MVFR1_FtZ_mode_Msk   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
MVFR1: FtZ mode bits Mask 
.SS "#define FPU_MVFR1_FtZ_mode_Msk   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
MVFR1: FtZ mode bits Mask 
.SS "#define FPU_MVFR1_FtZ_mode_Msk   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
MVFR1: FtZ mode bits Mask 
.SS "#define FPU_MVFR1_FtZ_mode_Msk   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
MVFR1: FtZ mode bits Mask 
.SS "#define FPU_MVFR1_FtZ_mode_Msk   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
MVFR1: FtZ mode bits Mask 
.SS "#define FPU_MVFR1_FtZ_mode_Msk   (0xFUL /*<< \fBFPU_MVFR1_FtZ_mode_Pos\fP*/)"
MVFR1: FtZ mode bits Mask 
.SS "#define FPU_MVFR1_FtZ_mode_Pos   0U"
MVFR1: FtZ mode bits Position 
.SS "#define FPU_MVFR1_FtZ_mode_Pos   0U"
MVFR1: FtZ mode bits Position 
.SS "#define FPU_MVFR1_FtZ_mode_Pos   0U"
MVFR1: FtZ mode bits Position 
.SS "#define FPU_MVFR1_FtZ_mode_Pos   0U"
MVFR1: FtZ mode bits Position 
.SS "#define FPU_MVFR1_FtZ_mode_Pos   0U"
MVFR1: FtZ mode bits Position 
.SS "#define FPU_MVFR1_FtZ_mode_Pos   0U"
MVFR1: FtZ mode bits Position 
.SS "#define FPU_MVFR2_VFP_Misc_Msk   (0xFUL << \fBFPU_MVFR2_VFP_Misc_Pos\fP)"
MVFR2: VFP Misc bits Mask 
.SS "#define FPU_MVFR2_VFP_Misc_Msk   (0xFUL << \fBFPU_MVFR2_VFP_Misc_Pos\fP)"
MVFR2: VFP Misc bits Mask 
.SS "#define FPU_MVFR2_VFP_Misc_Pos   4U"
MVFR2: VFP Misc bits Position 
.SS "#define FPU_MVFR2_VFP_Misc_Pos   4U"
MVFR2: VFP Misc bits Position 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Msk   (0x1FFUL /*<< \fBIPSR_ISR_Pos\fP*/)"
IPSR: ISR Mask 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define IPSR_ISR_Pos   0U"
IPSR: ISR Position 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
ITM configuration struct 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
ITM configuration struct 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
ITM configuration struct 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
ITM configuration struct 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP         )"
ITM configuration struct 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
ITM configuration struct 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
ITM configuration struct 
.SS "#define ITM   ((\fBITM_Type\fP       *)     \fBITM_BASE\fP      )"
ITM configuration struct 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_BASE   (0xE0000000UL)"
ITM Base Address 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Msk   (1UL << \fBITM_LSR_Access_Pos\fP)"
ITM LSR: Access Mask 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_Access_Pos   1U"
ITM LSR: Access Position 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Msk   (1UL << \fBITM_LSR_ByteAcc_Pos\fP)"
ITM LSR: ByteAcc Mask 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_ByteAcc_Pos   2U"
ITM LSR: ByteAcc Position 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Msk   (1UL /*<< \fBITM_LSR_Present_Pos\fP*/)"
ITM LSR: Present Mask 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_LSR_Present_Pos   0U"
ITM LSR: Present Position 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_STIM_DISABLED_Msk   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
ITM STIM: DISABLED Mask 
.SS "#define ITM_STIM_DISABLED_Msk   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
ITM STIM: DISABLED Mask 
.SS "#define ITM_STIM_DISABLED_Msk   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
ITM STIM: DISABLED Mask 
.SS "#define ITM_STIM_DISABLED_Msk   (0x1UL << \fBITM_STIM_DISABLED_Pos\fP)"
ITM STIM: DISABLED Mask 
.SS "#define ITM_STIM_DISABLED_Pos   1U"
ITM STIM: DISABLED Position 
.SS "#define ITM_STIM_DISABLED_Pos   1U"
ITM STIM: DISABLED Position 
.SS "#define ITM_STIM_DISABLED_Pos   1U"
ITM STIM: DISABLED Position 
.SS "#define ITM_STIM_DISABLED_Pos   1U"
ITM STIM: DISABLED Position 
.SS "#define ITM_STIM_FIFOREADY_Msk   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
ITM STIM: FIFOREADY Mask 
.SS "#define ITM_STIM_FIFOREADY_Msk   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
ITM STIM: FIFOREADY Mask 
.SS "#define ITM_STIM_FIFOREADY_Msk   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
ITM STIM: FIFOREADY Mask 
.SS "#define ITM_STIM_FIFOREADY_Msk   (0x1UL /*<< \fBITM_STIM_FIFOREADY_Pos\fP*/)"
ITM STIM: FIFOREADY Mask 
.SS "#define ITM_STIM_FIFOREADY_Pos   0U"
ITM STIM: FIFOREADY Position 
.SS "#define ITM_STIM_FIFOREADY_Pos   0U"
ITM STIM: FIFOREADY Position 
.SS "#define ITM_STIM_FIFOREADY_Pos   0U"
ITM STIM: FIFOREADY Position 
.SS "#define ITM_STIM_FIFOREADY_Pos   0U"
ITM STIM: FIFOREADY Position 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Msk   (1UL << \fBITM_TCR_BUSY_Pos\fP)"
ITM TCR: BUSY Mask 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_BUSY_Pos   23U"
ITM TCR: BUSY Position 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Msk   (1UL << \fBITM_TCR_DWTENA_Pos\fP)"
ITM TCR: DWTENA Mask 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_DWTENA_Pos   3U"
ITM TCR: DWTENA Position 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Msk   (3UL << \fBITM_TCR_GTSFREQ_Pos\fP)"
ITM TCR: Global timestamp frequency Mask 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_GTSFREQ_Pos   10U"
ITM TCR: Global timestamp frequency Position 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Msk   (1UL /*<< \fBITM_TCR_ITMENA_Pos\fP*/)"
ITM TCR: ITM Enable bit Mask 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_ITMENA_Pos   0U"
ITM TCR: ITM Enable bit Position 
.SS "#define ITM_TCR_STALLENA_Msk   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
ITM TCR: STALLENA Mask 
.SS "#define ITM_TCR_STALLENA_Msk   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
ITM TCR: STALLENA Mask 
.SS "#define ITM_TCR_STALLENA_Msk   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
ITM TCR: STALLENA Mask 
.SS "#define ITM_TCR_STALLENA_Msk   (1UL << \fBITM_TCR_STALLENA_Pos\fP)"
ITM TCR: STALLENA Mask 
.SS "#define ITM_TCR_STALLENA_Pos   5U"
ITM TCR: STALLENA Position 
.SS "#define ITM_TCR_STALLENA_Pos   5U"
ITM TCR: STALLENA Position 
.SS "#define ITM_TCR_STALLENA_Pos   5U"
ITM TCR: STALLENA Position 
.SS "#define ITM_TCR_STALLENA_Pos   5U"
ITM TCR: STALLENA Position 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Msk   (1UL << \fBITM_TCR_SWOENA_Pos\fP)"
ITM TCR: SWOENA Mask 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SWOENA_Pos   4U"
ITM TCR: SWOENA Position 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Msk   (1UL << \fBITM_TCR_SYNCENA_Pos\fP)"
ITM TCR: SYNCENA Mask 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_SYNCENA_Pos   2U"
ITM TCR: SYNCENA Position 
.SS "#define ITM_TCR_TRACEBUSID_Msk   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TRACEBUSID_Msk   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TraceBusID_Msk   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TRACEBUSID_Msk   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TRACEBUSID_Msk   (0x7FUL << \fBITM_TCR_TRACEBUSID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TraceBusID_Msk   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TraceBusID_Msk   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TraceBusID_Msk   (0x7FUL << \fBITM_TCR_TraceBusID_Pos\fP)"
ITM TCR: ATBID Mask 
.SS "#define ITM_TCR_TRACEBUSID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TRACEBUSID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TraceBusID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TRACEBUSID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TRACEBUSID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TraceBusID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TraceBusID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TraceBusID_Pos   16U"
ITM TCR: ATBID Position 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Msk   (1UL << \fBITM_TCR_TSENA_Pos\fP)"
ITM TCR: TSENA Mask 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSENA_Pos   1U"
ITM TCR: TSENA Position 
.SS "#define ITM_TCR_TSPRESCALE_Msk   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
ITM TCR: TSPRESCALE Mask 
.SS "#define ITM_TCR_TSPRESCALE_Msk   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
ITM TCR: TSPRESCALE Mask 
.SS "#define ITM_TCR_TSPrescale_Msk   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
ITM TCR: TSPrescale Mask 
.SS "#define ITM_TCR_TSPRESCALE_Msk   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
ITM TCR: TSPRESCALE Mask 
.SS "#define ITM_TCR_TSPRESCALE_Msk   (3UL << \fBITM_TCR_TSPRESCALE_Pos\fP)"
ITM TCR: TSPRESCALE Mask 
.SS "#define ITM_TCR_TSPrescale_Msk   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
ITM TCR: TSPrescale Mask 
.SS "#define ITM_TCR_TSPrescale_Msk   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
ITM TCR: TSPrescale Mask 
.SS "#define ITM_TCR_TSPrescale_Msk   (3UL << \fBITM_TCR_TSPrescale_Pos\fP)"
ITM TCR: TSPrescale Mask 
.SS "#define ITM_TCR_TSPRESCALE_Pos   8U"
ITM TCR: TSPRESCALE Position 
.SS "#define ITM_TCR_TSPRESCALE_Pos   8U"
ITM TCR: TSPRESCALE Position 
.SS "#define ITM_TCR_TSPrescale_Pos   8U"
ITM TCR: TSPrescale Position 
.SS "#define ITM_TCR_TSPRESCALE_Pos   8U"
ITM TCR: TSPRESCALE Position 
.SS "#define ITM_TCR_TSPRESCALE_Pos   8U"
ITM TCR: TSPRESCALE Position 
.SS "#define ITM_TCR_TSPrescale_Pos   8U"
ITM TCR: TSPrescale Position 
.SS "#define ITM_TCR_TSPrescale_Pos   8U"
ITM TCR: TSPrescale Position 
.SS "#define ITM_TCR_TSPrescale_Pos   8U"
ITM TCR: TSPrescale Position 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFFFFFFFFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Msk   (0xFUL /*<< \fBITM_TPR_PRIVMASK_Pos\fP*/)"
ITM TPR: PRIVMASK Mask 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define ITM_TPR_PRIVMASK_Pos   0U"
ITM TPR: PRIVMASK Position 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP        )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
NVIC configuration struct 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_BASE   (\fBSCS_BASE\fP +  0x0100UL)"
NVIC Base Address 
.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_ClearPendingIRQ   \fB__NVIC_ClearPendingIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_DisableIRQ   \fB__NVIC_DisableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_EnableIRQ   \fB__NVIC_EnableIRQ\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetActive   \fB__NVIC_GetActive\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetEnableIRQ   \fB__NVIC_GetEnableIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPendingIRQ   \fB__NVIC_GetPendingIRQ\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriority   \fB__NVIC_GetPriority\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetPriorityGrouping   \fB__NVIC_GetPriorityGrouping\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_GetVector   \fB__NVIC_GetVector\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPendingIRQ   \fB__NVIC_SetPendingIRQ\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriority   \fB__NVIC_SetPriority\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetPriorityGrouping   \fB__NVIC_SetPriorityGrouping\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_SetVector   \fB__NVIC_SetVector\fP"

.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Msk   (0x1FFUL /*<< \fBNVIC_STIR_INTID_Pos\fP*/)"
STIR: INTLINESNUM Mask 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_STIR_INTID_Pos   0U"
STIR: INTLINESNUM Position 
.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_SystemReset   \fB__NVIC_SystemReset\fP"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define NVIC_USER_IRQ_OFFSET   16"

.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP         )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
SCB configuration struct 
.SS "#define SCB_ABFSR_AHBP_Msk   (1UL << \fBSCB_ABFSR_AHBP_Pos\fP)"
SCB ABFSR: AHBP Mask 
.SS "#define SCB_ABFSR_AHBP_Msk   (1UL << \fBSCB_ABFSR_AHBP_Pos\fP)"
SCB ABFSR: AHBP Mask 
.SS "#define SCB_ABFSR_AHBP_Pos   2U"
SCB ABFSR: AHBP Position 
.SS "#define SCB_ABFSR_AHBP_Pos   2U"
SCB ABFSR: AHBP Position 
.SS "#define SCB_ABFSR_AXIM_Msk   (1UL << \fBSCB_ABFSR_AXIM_Pos\fP)"
SCB ABFSR: AXIM Mask 
.SS "#define SCB_ABFSR_AXIM_Msk   (1UL << \fBSCB_ABFSR_AXIM_Pos\fP)"
SCB ABFSR: AXIM Mask 
.SS "#define SCB_ABFSR_AXIM_Pos   3U"
SCB ABFSR: AXIM Position 
.SS "#define SCB_ABFSR_AXIM_Pos   3U"
SCB ABFSR: AXIM Position 
.SS "#define SCB_ABFSR_AXIMTYPE_Msk   (3UL << \fBSCB_ABFSR_AXIMTYPE_Pos\fP)"
SCB ABFSR: AXIMTYPE Mask 
.SS "#define SCB_ABFSR_AXIMTYPE_Msk   (3UL << \fBSCB_ABFSR_AXIMTYPE_Pos\fP)"
SCB ABFSR: AXIMTYPE Mask 
.SS "#define SCB_ABFSR_AXIMTYPE_Pos   8U"
SCB ABFSR: AXIMTYPE Position 
.SS "#define SCB_ABFSR_AXIMTYPE_Pos   8U"
SCB ABFSR: AXIMTYPE Position 
.SS "#define SCB_ABFSR_DTCM_Msk   (1UL << \fBSCB_ABFSR_DTCM_Pos\fP)"
SCB ABFSR: DTCM Mask 
.SS "#define SCB_ABFSR_DTCM_Msk   (1UL << \fBSCB_ABFSR_DTCM_Pos\fP)"
SCB ABFSR: DTCM Mask 
.SS "#define SCB_ABFSR_DTCM_Pos   1U"
SCB ABFSR: DTCM Position 
.SS "#define SCB_ABFSR_DTCM_Pos   1U"
SCB ABFSR: DTCM Position 
.SS "#define SCB_ABFSR_EPPB_Msk   (1UL << \fBSCB_ABFSR_EPPB_Pos\fP)"
SCB ABFSR: EPPB Mask 
.SS "#define SCB_ABFSR_EPPB_Msk   (1UL << \fBSCB_ABFSR_EPPB_Pos\fP)"
SCB ABFSR: EPPB Mask 
.SS "#define SCB_ABFSR_EPPB_Pos   4U"
SCB ABFSR: EPPB Position 
.SS "#define SCB_ABFSR_EPPB_Pos   4U"
SCB ABFSR: EPPB Position 
.SS "#define SCB_ABFSR_ITCM_Msk   (1UL /*<< \fBSCB_ABFSR_ITCM_Pos\fP*/)"
SCB ABFSR: ITCM Mask 
.SS "#define SCB_ABFSR_ITCM_Msk   (1UL /*<< \fBSCB_ABFSR_ITCM_Pos\fP*/)"
SCB ABFSR: ITCM Mask 
.SS "#define SCB_ABFSR_ITCM_Pos   0U"
SCB ABFSR: ITCM Position 
.SS "#define SCB_ABFSR_ITCM_Pos   0U"
SCB ABFSR: ITCM Position 
.SS "#define SCB_AHBPCR_EN_Msk   (1UL /*<< \fBSCB_AHBPCR_EN_Pos\fP*/)"
SCB AHBPCR: EN Mask 
.SS "#define SCB_AHBPCR_EN_Msk   (1UL /*<< \fBSCB_AHBPCR_EN_Pos\fP*/)"
SCB AHBPCR: EN Mask 
.SS "#define SCB_AHBPCR_EN_Pos   0U"
SCB AHBPCR: EN Position 
.SS "#define SCB_AHBPCR_EN_Pos   0U"
SCB AHBPCR: EN Position 
.SS "#define SCB_AHBPCR_SZ_Msk   (7UL << \fBSCB_AHBPCR_SZ_Pos\fP)"
SCB AHBPCR: SZ Mask 
.SS "#define SCB_AHBPCR_SZ_Msk   (7UL << \fBSCB_AHBPCR_SZ_Pos\fP)"
SCB AHBPCR: SZ Mask 
.SS "#define SCB_AHBPCR_SZ_Pos   1U"
SCB AHBPCR: SZ Position 
.SS "#define SCB_AHBPCR_SZ_Pos   1U"
SCB AHBPCR: SZ Position 
.SS "#define SCB_AHBSCR_CTL_Msk   (3UL /*<< SCB_AHBPCR_CTL_Pos*/)"
SCB AHBSCR: CTL Mask 
.SS "#define SCB_AHBSCR_CTL_Msk   (3UL /*<< SCB_AHBPCR_CTL_Pos*/)"
SCB AHBSCR: CTL Mask 
.SS "#define SCB_AHBSCR_CTL_Pos   0U"
SCB AHBSCR: CTL Position 
.SS "#define SCB_AHBSCR_CTL_Pos   0U"
SCB AHBSCR: CTL Position 
.SS "#define SCB_AHBSCR_INITCOUNT_Msk   (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)"
SCB AHBSCR: INITCOUNT Mask 
.SS "#define SCB_AHBSCR_INITCOUNT_Msk   (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)"
SCB AHBSCR: INITCOUNT Mask 
.SS "#define SCB_AHBSCR_INITCOUNT_Pos   11U"
SCB AHBSCR: INITCOUNT Position 
.SS "#define SCB_AHBSCR_INITCOUNT_Pos   11U"
SCB AHBSCR: INITCOUNT Position 
.SS "#define SCB_AHBSCR_TPRI_Msk   (0x1FFUL << SCB_AHBPCR_TPRI_Pos)"
SCB AHBSCR: TPRI Mask 
.SS "#define SCB_AHBSCR_TPRI_Msk   (0x1FFUL << SCB_AHBPCR_TPRI_Pos)"
SCB AHBSCR: TPRI Mask 
.SS "#define SCB_AHBSCR_TPRI_Pos   2U"
SCB AHBSCR: TPRI Position 
.SS "#define SCB_AHBSCR_TPRI_Pos   2U"
SCB AHBSCR: TPRI Position 
.SS "#define SCB_AIRCR_BFHFNMINS_Msk   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
SCB AIRCR: BFHFNMINS Mask 
.SS "#define SCB_AIRCR_BFHFNMINS_Msk   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
SCB AIRCR: BFHFNMINS Mask 
.SS "#define SCB_AIRCR_BFHFNMINS_Msk   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
SCB AIRCR: BFHFNMINS Mask 
.SS "#define SCB_AIRCR_BFHFNMINS_Msk   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
SCB AIRCR: BFHFNMINS Mask 
.SS "#define SCB_AIRCR_BFHFNMINS_Msk   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
SCB AIRCR: BFHFNMINS Mask 
.SS "#define SCB_AIRCR_BFHFNMINS_Msk   (1UL << \fBSCB_AIRCR_BFHFNMINS_Pos\fP)"
SCB AIRCR: BFHFNMINS Mask 
.SS "#define SCB_AIRCR_BFHFNMINS_Pos   13U"
SCB AIRCR: BFHFNMINS Position 
.SS "#define SCB_AIRCR_BFHFNMINS_Pos   13U"
SCB AIRCR: BFHFNMINS Position 
.SS "#define SCB_AIRCR_BFHFNMINS_Pos   13U"
SCB AIRCR: BFHFNMINS Position 
.SS "#define SCB_AIRCR_BFHFNMINS_Pos   13U"
SCB AIRCR: BFHFNMINS Position 
.SS "#define SCB_AIRCR_BFHFNMINS_Pos   13U"
SCB AIRCR: BFHFNMINS Position 
.SS "#define SCB_AIRCR_BFHFNMINS_Pos   13U"
SCB AIRCR: BFHFNMINS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Msk   (1UL << \fBSCB_AIRCR_ENDIANESS_Pos\fP)"
SCB AIRCR: ENDIANESS Mask 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_ENDIANESS_Pos   15U"
SCB AIRCR: ENDIANESS Position 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Msk   (7UL << \fBSCB_AIRCR_PRIGROUP_Pos\fP)"
SCB AIRCR: PRIGROUP Mask 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIGROUP_Pos   8U"
SCB AIRCR: PRIGROUP Position 
.SS "#define SCB_AIRCR_PRIS_Msk   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
SCB AIRCR: PRIS Mask 
.SS "#define SCB_AIRCR_PRIS_Msk   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
SCB AIRCR: PRIS Mask 
.SS "#define SCB_AIRCR_PRIS_Msk   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
SCB AIRCR: PRIS Mask 
.SS "#define SCB_AIRCR_PRIS_Msk   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
SCB AIRCR: PRIS Mask 
.SS "#define SCB_AIRCR_PRIS_Msk   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
SCB AIRCR: PRIS Mask 
.SS "#define SCB_AIRCR_PRIS_Msk   (1UL << \fBSCB_AIRCR_PRIS_Pos\fP)"
SCB AIRCR: PRIS Mask 
.SS "#define SCB_AIRCR_PRIS_Pos   14U"
SCB AIRCR: PRIS Position 
.SS "#define SCB_AIRCR_PRIS_Pos   14U"
SCB AIRCR: PRIS Position 
.SS "#define SCB_AIRCR_PRIS_Pos   14U"
SCB AIRCR: PRIS Position 
.SS "#define SCB_AIRCR_PRIS_Pos   14U"
SCB AIRCR: PRIS Position 
.SS "#define SCB_AIRCR_PRIS_Pos   14U"
SCB AIRCR: PRIS Position 
.SS "#define SCB_AIRCR_PRIS_Pos   14U"
SCB AIRCR: PRIS Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQ_Pos\fP)"
SCB AIRCR: SYSRESETREQ Mask 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQ_Pos   2U"
SCB AIRCR: SYSRESETREQ Position 
.SS "#define SCB_AIRCR_SYSRESETREQS_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
SCB AIRCR: SYSRESETREQS Mask 
.SS "#define SCB_AIRCR_SYSRESETREQS_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
SCB AIRCR: SYSRESETREQS Mask 
.SS "#define SCB_AIRCR_SYSRESETREQS_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
SCB AIRCR: SYSRESETREQS Mask 
.SS "#define SCB_AIRCR_SYSRESETREQS_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
SCB AIRCR: SYSRESETREQS Mask 
.SS "#define SCB_AIRCR_SYSRESETREQS_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
SCB AIRCR: SYSRESETREQS Mask 
.SS "#define SCB_AIRCR_SYSRESETREQS_Msk   (1UL << \fBSCB_AIRCR_SYSRESETREQS_Pos\fP)"
SCB AIRCR: SYSRESETREQS Mask 
.SS "#define SCB_AIRCR_SYSRESETREQS_Pos   3U"
SCB AIRCR: SYSRESETREQS Position 
.SS "#define SCB_AIRCR_SYSRESETREQS_Pos   3U"
SCB AIRCR: SYSRESETREQS Position 
.SS "#define SCB_AIRCR_SYSRESETREQS_Pos   3U"
SCB AIRCR: SYSRESETREQS Position 
.SS "#define SCB_AIRCR_SYSRESETREQS_Pos   3U"
SCB AIRCR: SYSRESETREQS Position 
.SS "#define SCB_AIRCR_SYSRESETREQS_Pos   3U"
SCB AIRCR: SYSRESETREQS Position 
.SS "#define SCB_AIRCR_SYSRESETREQS_Pos   3U"
SCB AIRCR: SYSRESETREQS Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Msk   (1UL << \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP)"
SCB AIRCR: VECTCLRACTIVE Mask 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTCLRACTIVE_Pos   1U"
SCB AIRCR: VECTCLRACTIVE Position 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEY_Pos\fP)"
SCB AIRCR: VECTKEY Mask 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEY_Pos   16U"
SCB AIRCR: VECTKEY Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Msk   (0xFFFFUL << \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP)"
SCB AIRCR: VECTKEYSTAT Mask 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTKEYSTAT_Pos   16U"
SCB AIRCR: VECTKEYSTAT Position 
.SS "#define SCB_AIRCR_VECTRESET_Msk   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
SCB AIRCR: VECTRESET Mask 
.SS "#define SCB_AIRCR_VECTRESET_Msk   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
SCB AIRCR: VECTRESET Mask 
.SS "#define SCB_AIRCR_VECTRESET_Msk   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
SCB AIRCR: VECTRESET Mask 
.SS "#define SCB_AIRCR_VECTRESET_Msk   (1UL /*<< \fBSCB_AIRCR_VECTRESET_Pos\fP*/)"
SCB AIRCR: VECTRESET Mask 
.SS "#define SCB_AIRCR_VECTRESET_Pos   0U"
SCB AIRCR: VECTRESET Position 
.SS "#define SCB_AIRCR_VECTRESET_Pos   0U"
SCB AIRCR: VECTRESET Position 
.SS "#define SCB_AIRCR_VECTRESET_Pos   0U"
SCB AIRCR: VECTRESET Position 
.SS "#define SCB_AIRCR_VECTRESET_Pos   0U"
SCB AIRCR: VECTRESET Position 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_BASE   (\fBSCS_BASE\fP +  0x0D00UL)"
System Control Block Base Address 
.SS "#define SCB_CACR_ECCEN_Msk   (1UL << \fBSCB_CACR_ECCEN_Pos\fP)"
SCB CACR: ECCEN Mask 
.SS "#define SCB_CACR_ECCEN_Msk   (1UL << \fBSCB_CACR_ECCEN_Pos\fP)"
SCB CACR: ECCEN Mask 
.SS "#define SCB_CACR_ECCEN_Pos   1U"
SCB CACR: ECCEN Position 
.SS "#define SCB_CACR_ECCEN_Pos   1U"
SCB CACR: ECCEN Position 
.SS "#define SCB_CACR_FORCEWT_Msk   (1UL << \fBSCB_CACR_FORCEWT_Pos\fP)"
SCB CACR: FORCEWT Mask 
.SS "#define SCB_CACR_FORCEWT_Msk   (1UL << \fBSCB_CACR_FORCEWT_Pos\fP)"
SCB CACR: FORCEWT Mask 
.SS "#define SCB_CACR_FORCEWT_Pos   2U"
SCB CACR: FORCEWT Position 
.SS "#define SCB_CACR_FORCEWT_Pos   2U"
SCB CACR: FORCEWT Position 
.SS "#define SCB_CACR_SIWT_Msk   (1UL /*<< \fBSCB_CACR_SIWT_Pos\fP*/)"
SCB CACR: SIWT Mask 
.SS "#define SCB_CACR_SIWT_Msk   (1UL /*<< \fBSCB_CACR_SIWT_Pos\fP*/)"
SCB CACR: SIWT Mask 
.SS "#define SCB_CACR_SIWT_Pos   0U"
SCB CACR: SIWT Position 
.SS "#define SCB_CACR_SIWT_Pos   0U"
SCB CACR: SIWT Position 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Msk   (1UL << \fBSCB_CCR_BFHFNMIGN_Pos\fP)"
SCB CCR: BFHFNMIGN Mask 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BFHFNMIGN_Pos   8U"
SCB CCR: BFHFNMIGN Position 
.SS "#define SCB_CCR_BP_Msk   (1UL << \fBSCB_CCR_BP_Pos\fP)"
SCB CCR: BP Mask
.PP
SCB CCR: Branch prediction enable bit Mask 
.SS "#define SCB_CCR_BP_Msk   (1UL << \fBSCB_CCR_BP_Pos\fP)"
SCB CCR: BP Mask
.PP
SCB CCR: Branch prediction enable bit Mask 
.SS "#define SCB_CCR_BP_Msk   (1UL << \fBSCB_CCR_BP_Pos\fP)"
SCB CCR: BP Mask
.PP
SCB CCR: Branch prediction enable bit Mask 
.SS "#define SCB_CCR_BP_Msk   (1UL << \fBSCB_CCR_BP_Pos\fP)"
SCB CCR: BP Mask
.PP
SCB CCR: Branch prediction enable bit Mask 
.SS "#define SCB_CCR_BP_Msk   (1UL << \fBSCB_CCR_BP_Pos\fP)"
SCB CCR: BP Mask
.PP
SCB CCR: Branch prediction enable bit Mask 
.SS "#define SCB_CCR_BP_Msk   (1UL << \fBSCB_CCR_BP_Pos\fP)"
SCB CCR: BP Mask
.PP
SCB CCR: Branch prediction enable bit Mask 
.SS "#define SCB_CCR_BP_Msk   (1UL << \fBSCB_CCR_BP_Pos\fP)"
SCB CCR: Branch prediction enable bit Mask 
.SS "#define SCB_CCR_BP_Pos   18U"
SCB CCR: BP Position
.PP
SCB CCR: Branch prediction enable bit Position 
.SS "#define SCB_CCR_BP_Pos   18U"
SCB CCR: BP Position
.PP
SCB CCR: Branch prediction enable bit Position 
.SS "#define SCB_CCR_BP_Pos   18U"
SCB CCR: BP Position
.PP
SCB CCR: Branch prediction enable bit Position 
.SS "#define SCB_CCR_BP_Pos   18U"
SCB CCR: BP Position
.PP
SCB CCR: Branch prediction enable bit Position 
.SS "#define SCB_CCR_BP_Pos   18U"
SCB CCR: BP Position
.PP
SCB CCR: Branch prediction enable bit Position 
.SS "#define SCB_CCR_BP_Pos   18U"
SCB CCR: BP Position
.PP
SCB CCR: Branch prediction enable bit Position 
.SS "#define SCB_CCR_BP_Pos   18U"
SCB CCR: Branch prediction enable bit Position 
.SS "#define SCB_CCR_DC_Msk   (1UL << \fBSCB_CCR_DC_Pos\fP)"
SCB CCR: DC Mask
.PP
SCB CCR: Cache enable bit Mask 
.SS "#define SCB_CCR_DC_Msk   (1UL << \fBSCB_CCR_DC_Pos\fP)"
SCB CCR: DC Mask
.PP
SCB CCR: Cache enable bit Mask 
.SS "#define SCB_CCR_DC_Msk   (1UL << \fBSCB_CCR_DC_Pos\fP)"
SCB CCR: DC Mask
.PP
SCB CCR: Cache enable bit Mask 
.SS "#define SCB_CCR_DC_Msk   (1UL << \fBSCB_CCR_DC_Pos\fP)"
SCB CCR: DC Mask
.PP
SCB CCR: Cache enable bit Mask 
.SS "#define SCB_CCR_DC_Msk   (1UL << \fBSCB_CCR_DC_Pos\fP)"
SCB CCR: DC Mask
.PP
SCB CCR: Cache enable bit Mask 
.SS "#define SCB_CCR_DC_Msk   (1UL << \fBSCB_CCR_DC_Pos\fP)"
SCB CCR: DC Mask
.PP
SCB CCR: Cache enable bit Mask 
.SS "#define SCB_CCR_DC_Msk   (1UL << \fBSCB_CCR_DC_Pos\fP)"
SCB CCR: Cache enable bit Mask 
.SS "#define SCB_CCR_DC_Pos   16U"
SCB CCR: DC Position
.PP
SCB CCR: Cache enable bit Position 
.SS "#define SCB_CCR_DC_Pos   16U"
SCB CCR: DC Position
.PP
SCB CCR: Cache enable bit Position 
.SS "#define SCB_CCR_DC_Pos   16U"
SCB CCR: DC Position
.PP
SCB CCR: Cache enable bit Position 
.SS "#define SCB_CCR_DC_Pos   16U"
SCB CCR: DC Position
.PP
SCB CCR: Cache enable bit Position 
.SS "#define SCB_CCR_DC_Pos   16U"
SCB CCR: DC Position
.PP
SCB CCR: Cache enable bit Position 
.SS "#define SCB_CCR_DC_Pos   16U"
SCB CCR: DC Position
.PP
SCB CCR: Cache enable bit Position 
.SS "#define SCB_CCR_DC_Pos   16U"
SCB CCR: Cache enable bit Position 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Msk   (1UL << \fBSCB_CCR_DIV_0_TRP_Pos\fP)"
SCB CCR: DIV_0_TRP Mask 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_DIV_0_TRP_Pos   4U"
SCB CCR: DIV_0_TRP Position 
.SS "#define SCB_CCR_IC_Msk   (1UL << \fBSCB_CCR_IC_Pos\fP)"
SCB CCR: IC Mask
.PP
SCB CCR: Instruction cache enable bit Mask 
.SS "#define SCB_CCR_IC_Msk   (1UL << \fBSCB_CCR_IC_Pos\fP)"
SCB CCR: IC Mask
.PP
SCB CCR: Instruction cache enable bit Mask 
.SS "#define SCB_CCR_IC_Msk   (1UL << \fBSCB_CCR_IC_Pos\fP)"
SCB CCR: IC Mask
.PP
SCB CCR: Instruction cache enable bit Mask 
.SS "#define SCB_CCR_IC_Msk   (1UL << \fBSCB_CCR_IC_Pos\fP)"
SCB CCR: IC Mask
.PP
SCB CCR: Instruction cache enable bit Mask 
.SS "#define SCB_CCR_IC_Msk   (1UL << \fBSCB_CCR_IC_Pos\fP)"
SCB CCR: IC Mask
.PP
SCB CCR: Instruction cache enable bit Mask 
.SS "#define SCB_CCR_IC_Msk   (1UL << \fBSCB_CCR_IC_Pos\fP)"
SCB CCR: IC Mask
.PP
SCB CCR: Instruction cache enable bit Mask 
.SS "#define SCB_CCR_IC_Msk   (1UL << \fBSCB_CCR_IC_Pos\fP)"
SCB CCR: Instruction cache enable bit Mask 
.SS "#define SCB_CCR_IC_Pos   17U"
SCB CCR: IC Position
.PP
SCB CCR: Instruction cache enable bit Position 
.SS "#define SCB_CCR_IC_Pos   17U"
SCB CCR: IC Position
.PP
SCB CCR: Instruction cache enable bit Position 
.SS "#define SCB_CCR_IC_Pos   17U"
SCB CCR: IC Position
.PP
SCB CCR: Instruction cache enable bit Position 
.SS "#define SCB_CCR_IC_Pos   17U"
SCB CCR: IC Position
.PP
SCB CCR: Instruction cache enable bit Position 
.SS "#define SCB_CCR_IC_Pos   17U"
SCB CCR: IC Position
.PP
SCB CCR: Instruction cache enable bit Position 
.SS "#define SCB_CCR_IC_Pos   17U"
SCB CCR: IC Position
.PP
SCB CCR: Instruction cache enable bit Position 
.SS "#define SCB_CCR_IC_Pos   17U"
SCB CCR: Instruction cache enable bit Position 
.SS "#define SCB_CCR_NONBASETHRDENA_Msk   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
SCB CCR: NONBASETHRDENA Mask 
.SS "#define SCB_CCR_NONBASETHRDENA_Msk   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
SCB CCR: NONBASETHRDENA Mask 
.SS "#define SCB_CCR_NONBASETHRDENA_Msk   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
SCB CCR: NONBASETHRDENA Mask 
.SS "#define SCB_CCR_NONBASETHRDENA_Msk   (1UL /*<< \fBSCB_CCR_NONBASETHRDENA_Pos\fP*/)"
SCB CCR: NONBASETHRDENA Mask 
.SS "#define SCB_CCR_NONBASETHRDENA_Pos   0U"
SCB CCR: NONBASETHRDENA Position 
.SS "#define SCB_CCR_NONBASETHRDENA_Pos   0U"
SCB CCR: NONBASETHRDENA Position 
.SS "#define SCB_CCR_NONBASETHRDENA_Pos   0U"
SCB CCR: NONBASETHRDENA Position 
.SS "#define SCB_CCR_NONBASETHRDENA_Pos   0U"
SCB CCR: NONBASETHRDENA Position 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Msk   (1UL << \fBSCB_CCR_STKALIGN_Pos\fP)"
SCB CCR: STKALIGN Mask 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKALIGN_Pos   9U"
SCB CCR: STKALIGN Position 
.SS "#define SCB_CCR_STKOFHFNMIGN_Msk   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
SCB CCR: STKOFHFNMIGN Mask 
.SS "#define SCB_CCR_STKOFHFNMIGN_Msk   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
SCB CCR: STKOFHFNMIGN Mask 
.SS "#define SCB_CCR_STKOFHFNMIGN_Msk   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
SCB CCR: STKOFHFNMIGN Mask 
.SS "#define SCB_CCR_STKOFHFNMIGN_Msk   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
SCB CCR: STKOFHFNMIGN Mask 
.SS "#define SCB_CCR_STKOFHFNMIGN_Msk   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
SCB CCR: STKOFHFNMIGN Mask 
.SS "#define SCB_CCR_STKOFHFNMIGN_Msk   (1UL << \fBSCB_CCR_STKOFHFNMIGN_Pos\fP)"
SCB CCR: STKOFHFNMIGN Mask 
.SS "#define SCB_CCR_STKOFHFNMIGN_Pos   10U"
SCB CCR: STKOFHFNMIGN Position 
.SS "#define SCB_CCR_STKOFHFNMIGN_Pos   10U"
SCB CCR: STKOFHFNMIGN Position 
.SS "#define SCB_CCR_STKOFHFNMIGN_Pos   10U"
SCB CCR: STKOFHFNMIGN Position 
.SS "#define SCB_CCR_STKOFHFNMIGN_Pos   10U"
SCB CCR: STKOFHFNMIGN Position 
.SS "#define SCB_CCR_STKOFHFNMIGN_Pos   10U"
SCB CCR: STKOFHFNMIGN Position 
.SS "#define SCB_CCR_STKOFHFNMIGN_Pos   10U"
SCB CCR: STKOFHFNMIGN Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Msk   (1UL << \fBSCB_CCR_UNALIGN_TRP_Pos\fP)"
SCB CCR: UNALIGN_TRP Mask 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_UNALIGN_TRP_Pos   3U"
SCB CCR: UNALIGN_TRP Position 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Msk   (1UL << \fBSCB_CCR_USERSETMPEND_Pos\fP)"
SCB CCR: USERSETMPEND Mask 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCR_USERSETMPEND_Pos   1U"
SCB CCR: USERSETMPEND Position 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Msk   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
SCB CCSIDR: Associativity Mask 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Msk   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
SCB CCSIDR: Associativity Mask 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Msk   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
SCB CCSIDR: Associativity Mask 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Msk   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
SCB CCSIDR: Associativity Mask 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Msk   (0x3FFUL << \fBSCB_CCSIDR_ASSOCIATIVITY_Pos\fP)"
SCB CCSIDR: Associativity Mask 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Pos   3U"
SCB CCSIDR: Associativity Position 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Pos   3U"
SCB CCSIDR: Associativity Position 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Pos   3U"
SCB CCSIDR: Associativity Position 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Pos   3U"
SCB CCSIDR: Associativity Position 
.SS "#define SCB_CCSIDR_ASSOCIATIVITY_Pos   3U"
SCB CCSIDR: Associativity Position 
.SS "#define SCB_CCSIDR_LINESIZE_Msk   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
SCB CCSIDR: LineSize Mask 
.SS "#define SCB_CCSIDR_LINESIZE_Msk   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
SCB CCSIDR: LineSize Mask 
.SS "#define SCB_CCSIDR_LINESIZE_Msk   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
SCB CCSIDR: LineSize Mask 
.SS "#define SCB_CCSIDR_LINESIZE_Msk   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
SCB CCSIDR: LineSize Mask 
.SS "#define SCB_CCSIDR_LINESIZE_Msk   (7UL /*<< \fBSCB_CCSIDR_LINESIZE_Pos\fP*/)"
SCB CCSIDR: LineSize Mask 
.SS "#define SCB_CCSIDR_LINESIZE_Pos   0U"
SCB CCSIDR: LineSize Position 
.SS "#define SCB_CCSIDR_LINESIZE_Pos   0U"
SCB CCSIDR: LineSize Position 
.SS "#define SCB_CCSIDR_LINESIZE_Pos   0U"
SCB CCSIDR: LineSize Position 
.SS "#define SCB_CCSIDR_LINESIZE_Pos   0U"
SCB CCSIDR: LineSize Position 
.SS "#define SCB_CCSIDR_LINESIZE_Pos   0U"
SCB CCSIDR: LineSize Position 
.SS "#define SCB_CCSIDR_NUMSETS_Msk   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
SCB CCSIDR: NumSets Mask 
.SS "#define SCB_CCSIDR_NUMSETS_Msk   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
SCB CCSIDR: NumSets Mask 
.SS "#define SCB_CCSIDR_NUMSETS_Msk   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
SCB CCSIDR: NumSets Mask 
.SS "#define SCB_CCSIDR_NUMSETS_Msk   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
SCB CCSIDR: NumSets Mask 
.SS "#define SCB_CCSIDR_NUMSETS_Msk   (0x7FFFUL << \fBSCB_CCSIDR_NUMSETS_Pos\fP)"
SCB CCSIDR: NumSets Mask 
.SS "#define SCB_CCSIDR_NUMSETS_Pos   13U"
SCB CCSIDR: NumSets Position 
.SS "#define SCB_CCSIDR_NUMSETS_Pos   13U"
SCB CCSIDR: NumSets Position 
.SS "#define SCB_CCSIDR_NUMSETS_Pos   13U"
SCB CCSIDR: NumSets Position 
.SS "#define SCB_CCSIDR_NUMSETS_Pos   13U"
SCB CCSIDR: NumSets Position 
.SS "#define SCB_CCSIDR_NUMSETS_Pos   13U"
SCB CCSIDR: NumSets Position 
.SS "#define SCB_CCSIDR_RA_Msk   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
SCB CCSIDR: RA Mask 
.SS "#define SCB_CCSIDR_RA_Msk   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
SCB CCSIDR: RA Mask 
.SS "#define SCB_CCSIDR_RA_Msk   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
SCB CCSIDR: RA Mask 
.SS "#define SCB_CCSIDR_RA_Msk   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
SCB CCSIDR: RA Mask 
.SS "#define SCB_CCSIDR_RA_Msk   (1UL << \fBSCB_CCSIDR_RA_Pos\fP)"
SCB CCSIDR: RA Mask 
.SS "#define SCB_CCSIDR_RA_Pos   29U"
SCB CCSIDR: RA Position 
.SS "#define SCB_CCSIDR_RA_Pos   29U"
SCB CCSIDR: RA Position 
.SS "#define SCB_CCSIDR_RA_Pos   29U"
SCB CCSIDR: RA Position 
.SS "#define SCB_CCSIDR_RA_Pos   29U"
SCB CCSIDR: RA Position 
.SS "#define SCB_CCSIDR_RA_Pos   29U"
SCB CCSIDR: RA Position 
.SS "#define SCB_CCSIDR_WA_Msk   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
SCB CCSIDR: WA Mask 
.SS "#define SCB_CCSIDR_WA_Msk   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
SCB CCSIDR: WA Mask 
.SS "#define SCB_CCSIDR_WA_Msk   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
SCB CCSIDR: WA Mask 
.SS "#define SCB_CCSIDR_WA_Msk   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
SCB CCSIDR: WA Mask 
.SS "#define SCB_CCSIDR_WA_Msk   (1UL << \fBSCB_CCSIDR_WA_Pos\fP)"
SCB CCSIDR: WA Mask 
.SS "#define SCB_CCSIDR_WA_Pos   28U"
SCB CCSIDR: WA Position 
.SS "#define SCB_CCSIDR_WA_Pos   28U"
SCB CCSIDR: WA Position 
.SS "#define SCB_CCSIDR_WA_Pos   28U"
SCB CCSIDR: WA Position 
.SS "#define SCB_CCSIDR_WA_Pos   28U"
SCB CCSIDR: WA Position 
.SS "#define SCB_CCSIDR_WA_Pos   28U"
SCB CCSIDR: WA Position 
.SS "#define SCB_CCSIDR_WB_Msk   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
SCB CCSIDR: WB Mask 
.SS "#define SCB_CCSIDR_WB_Msk   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
SCB CCSIDR: WB Mask 
.SS "#define SCB_CCSIDR_WB_Msk   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
SCB CCSIDR: WB Mask 
.SS "#define SCB_CCSIDR_WB_Msk   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
SCB CCSIDR: WB Mask 
.SS "#define SCB_CCSIDR_WB_Msk   (1UL << \fBSCB_CCSIDR_WB_Pos\fP)"
SCB CCSIDR: WB Mask 
.SS "#define SCB_CCSIDR_WB_Pos   30U"
SCB CCSIDR: WB Position 
.SS "#define SCB_CCSIDR_WB_Pos   30U"
SCB CCSIDR: WB Position 
.SS "#define SCB_CCSIDR_WB_Pos   30U"
SCB CCSIDR: WB Position 
.SS "#define SCB_CCSIDR_WB_Pos   30U"
SCB CCSIDR: WB Position 
.SS "#define SCB_CCSIDR_WB_Pos   30U"
SCB CCSIDR: WB Position 
.SS "#define SCB_CCSIDR_WT_Msk   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
SCB CCSIDR: WT Mask 
.SS "#define SCB_CCSIDR_WT_Msk   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
SCB CCSIDR: WT Mask 
.SS "#define SCB_CCSIDR_WT_Msk   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
SCB CCSIDR: WT Mask 
.SS "#define SCB_CCSIDR_WT_Msk   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
SCB CCSIDR: WT Mask 
.SS "#define SCB_CCSIDR_WT_Msk   (1UL << \fBSCB_CCSIDR_WT_Pos\fP)"
SCB CCSIDR: WT Mask 
.SS "#define SCB_CCSIDR_WT_Pos   31U"
SCB CCSIDR: WT Position 
.SS "#define SCB_CCSIDR_WT_Pos   31U"
SCB CCSIDR: WT Position 
.SS "#define SCB_CCSIDR_WT_Pos   31U"
SCB CCSIDR: WT Position 
.SS "#define SCB_CCSIDR_WT_Pos   31U"
SCB CCSIDR: WT Position 
.SS "#define SCB_CCSIDR_WT_Pos   31U"
SCB CCSIDR: WT Position 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Msk   (1UL << \fBSCB_CFSR_BFARVALID_Pos\fP)"
SCB CFSR (BFSR): BFARVALID Mask 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BFARVALID_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 7U)"
SCB CFSR (BFSR): BFARVALID Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Msk   (0xFFUL << \fBSCB_CFSR_BUSFAULTSR_Pos\fP)"
SCB CFSR: Bus Fault Status Register Mask 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_BUSFAULTSR_Pos   8U"
SCB CFSR: Bus Fault Status Register Position 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Msk   (1UL << \fBSCB_CFSR_DACCVIOL_Pos\fP)"
SCB CFSR (MMFSR): DACCVIOL Mask 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 1U)"
SCB CFSR (MMFSR): DACCVIOL Position 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Msk   (1UL << \fBSCB_CFSR_DIVBYZERO_Pos\fP)"
SCB CFSR (UFSR): DIVBYZERO Mask 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_DIVBYZERO_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 9U)"
SCB CFSR (UFSR): DIVBYZERO Position 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Msk   (1UL /*<< \fBSCB_CFSR_IACCVIOL_Pos\fP*/)"
SCB CFSR (MMFSR): IACCVIOL Mask 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IACCVIOL_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 0U)"
SCB CFSR (MMFSR): IACCVIOL Position 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Msk   (1UL << \fBSCB_CFSR_IBUSERR_Pos\fP)"
SCB CFSR (BFSR): IBUSERR Mask 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IBUSERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 0U)"
SCB CFSR (BFSR): IBUSERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Msk   (1UL << \fBSCB_CFSR_IMPRECISERR_Pos\fP)"
SCB CFSR (BFSR): IMPRECISERR Mask 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_IMPRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 2U)"
SCB CFSR (BFSR): IMPRECISERR Position 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Msk   (1UL << \fBSCB_CFSR_INVPC_Pos\fP)"
SCB CFSR (UFSR): INVPC Mask 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVPC_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 2U)"
SCB CFSR (UFSR): INVPC Position 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Msk   (1UL << \fBSCB_CFSR_INVSTATE_Pos\fP)"
SCB CFSR (UFSR): INVSTATE Mask 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_INVSTATE_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 1U)"
SCB CFSR (UFSR): INVSTATE Position 
.SS "#define SCB_CFSR_LSPERR_Msk   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
SCB CFSR (BFSR): LSPERR Mask 
.SS "#define SCB_CFSR_LSPERR_Msk   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
SCB CFSR (BFSR): LSPERR Mask 
.SS "#define SCB_CFSR_LSPERR_Msk   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
SCB CFSR (BFSR): LSPERR Mask 
.SS "#define SCB_CFSR_LSPERR_Msk   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
SCB CFSR (BFSR): LSPERR Mask 
.SS "#define SCB_CFSR_LSPERR_Msk   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
SCB CFSR (BFSR): LSPERR Mask 
.SS "#define SCB_CFSR_LSPERR_Msk   (1UL << \fBSCB_CFSR_LSPERR_Pos\fP)"
SCB CFSR (BFSR): LSPERR Mask 
.SS "#define SCB_CFSR_LSPERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
SCB CFSR (BFSR): LSPERR Position 
.SS "#define SCB_CFSR_LSPERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
SCB CFSR (BFSR): LSPERR Position 
.SS "#define SCB_CFSR_LSPERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
SCB CFSR (BFSR): LSPERR Position 
.SS "#define SCB_CFSR_LSPERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
SCB CFSR (BFSR): LSPERR Position 
.SS "#define SCB_CFSR_LSPERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
SCB CFSR (BFSR): LSPERR Position 
.SS "#define SCB_CFSR_LSPERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 5U)"
SCB CFSR (BFSR): LSPERR Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Msk   (0xFFUL /*<< \fBSCB_CFSR_MEMFAULTSR_Pos\fP*/)"
SCB CFSR: Memory Manage Fault Status Register Mask 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MEMFAULTSR_Pos   0U"
SCB CFSR: Memory Manage Fault Status Register Position 
.SS "#define SCB_CFSR_MLSPERR_Msk   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
SCB CFSR (MMFSR): MLSPERR Mask 
.SS "#define SCB_CFSR_MLSPERR_Msk   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
SCB CFSR (MMFSR): MLSPERR Mask 
.SS "#define SCB_CFSR_MLSPERR_Msk   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
SCB CFSR (MMFSR): MLSPERR Mask 
.SS "#define SCB_CFSR_MLSPERR_Msk   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
SCB CFSR (MMFSR): MLSPERR Mask 
.SS "#define SCB_CFSR_MLSPERR_Msk   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
SCB CFSR (MMFSR): MLSPERR Mask 
.SS "#define SCB_CFSR_MLSPERR_Msk   (1UL << \fBSCB_CFSR_MLSPERR_Pos\fP)"
SCB CFSR (MMFSR): MLSPERR Mask 
.SS "#define SCB_CFSR_MLSPERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
SCB CFSR (MMFSR): MLSPERR Position 
.SS "#define SCB_CFSR_MLSPERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
SCB CFSR (MMFSR): MLSPERR Position 
.SS "#define SCB_CFSR_MLSPERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
SCB CFSR (MMFSR): MLSPERR Position 
.SS "#define SCB_CFSR_MLSPERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
SCB CFSR (MMFSR): MLSPERR Position 
.SS "#define SCB_CFSR_MLSPERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
SCB CFSR (MMFSR): MLSPERR Position 
.SS "#define SCB_CFSR_MLSPERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 5U)"
SCB CFSR (MMFSR): MLSPERR Position 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Msk   (1UL << \fBSCB_CFSR_MMARVALID_Pos\fP)"
SCB CFSR (MMFSR): MMARVALID Mask 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MMARVALID_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 7U)"
SCB CFSR (MMFSR): MMARVALID Position 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Msk   (1UL << \fBSCB_CFSR_MSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MSTKERR Mask 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 4U)"
SCB CFSR (MMFSR): MSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Msk   (1UL << \fBSCB_CFSR_MUNSTKERR_Pos\fP)"
SCB CFSR (MMFSR): MUNSTKERR Mask 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_MUNSTKERR_Pos   (\fBSCB_SHCSR_MEMFAULTACT_Pos\fP + 3U)"
SCB CFSR (MMFSR): MUNSTKERR Position 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Msk   (1UL << \fBSCB_CFSR_NOCP_Pos\fP)"
SCB CFSR (UFSR): NOCP Mask 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_NOCP_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 3U)"
SCB CFSR (UFSR): NOCP Position 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Msk   (1UL << \fBSCB_CFSR_PRECISERR_Pos\fP)"
SCB CFSR (BFSR): PRECISERR Mask 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_PRECISERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 1U)"
SCB CFSR (BFSR): PRECISERR Position 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Msk   (1UL << \fBSCB_CFSR_STKERR_Pos\fP)"
SCB CFSR (BFSR): STKERR Mask 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 4U)"
SCB CFSR (BFSR): STKERR Position 
.SS "#define SCB_CFSR_STKOF_Msk   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
SCB CFSR (UFSR): STKOF Mask 
.SS "#define SCB_CFSR_STKOF_Msk   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
SCB CFSR (UFSR): STKOF Mask 
.SS "#define SCB_CFSR_STKOF_Msk   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
SCB CFSR (UFSR): STKOF Mask 
.SS "#define SCB_CFSR_STKOF_Msk   (1UL << \fBSCB_CFSR_STKOF_Pos\fP)"
SCB CFSR (UFSR): STKOF Mask 
.SS "#define SCB_CFSR_STKOF_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
SCB CFSR (UFSR): STKOF Position 
.SS "#define SCB_CFSR_STKOF_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
SCB CFSR (UFSR): STKOF Position 
.SS "#define SCB_CFSR_STKOF_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
SCB CFSR (UFSR): STKOF Position 
.SS "#define SCB_CFSR_STKOF_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 4U)"
SCB CFSR (UFSR): STKOF Position 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Msk   (1UL << \fBSCB_CFSR_UNALIGNED_Pos\fP)"
SCB CFSR (UFSR): UNALIGNED Mask 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNALIGNED_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 8U)"
SCB CFSR (UFSR): UNALIGNED Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Msk   (1UL << \fBSCB_CFSR_UNDEFINSTR_Pos\fP)"
SCB CFSR (UFSR): UNDEFINSTR Mask 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNDEFINSTR_Pos   (\fBSCB_CFSR_USGFAULTSR_Pos\fP + 0U)"
SCB CFSR (UFSR): UNDEFINSTR Position 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Msk   (1UL << \fBSCB_CFSR_UNSTKERR_Pos\fP)"
SCB CFSR (BFSR): UNSTKERR Mask 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_UNSTKERR_Pos   (\fBSCB_CFSR_BUSFAULTSR_Pos\fP + 3U)"
SCB CFSR (BFSR): UNSTKERR Position 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Msk   (0xFFFFUL << \fBSCB_CFSR_USGFAULTSR_Pos\fP)"
SCB CFSR: Usage Fault Status Register Mask 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CFSR_USGFAULTSR_Pos   16U"
SCB CFSR: Usage Fault Status Register Position 
.SS "#define SCB_CLIDR_LOC_Msk   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
SCB CLIDR: LoC Mask 
.SS "#define SCB_CLIDR_LOC_Msk   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
SCB CLIDR: LoC Mask 
.SS "#define SCB_CLIDR_LOC_Msk   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
SCB CLIDR: LoC Mask 
.SS "#define SCB_CLIDR_LOC_Msk   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
SCB CLIDR: LoC Mask 
.SS "#define SCB_CLIDR_LOC_Msk   (7UL << \fBSCB_CLIDR_LOC_Pos\fP)"
SCB CLIDR: LoC Mask 
.SS "#define SCB_CLIDR_LOC_Pos   24U"
SCB CLIDR: LoC Position 
.SS "#define SCB_CLIDR_LOC_Pos   24U"
SCB CLIDR: LoC Position 
.SS "#define SCB_CLIDR_LOC_Pos   24U"
SCB CLIDR: LoC Position 
.SS "#define SCB_CLIDR_LOC_Pos   24U"
SCB CLIDR: LoC Position 
.SS "#define SCB_CLIDR_LOC_Pos   24U"
SCB CLIDR: LoC Position 
.SS "#define SCB_CLIDR_LOUU_Msk   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
SCB CLIDR: LoUU Mask 
.SS "#define SCB_CLIDR_LOUU_Msk   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
SCB CLIDR: LoUU Mask 
.SS "#define SCB_CLIDR_LOUU_Msk   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
SCB CLIDR: LoUU Mask 
.SS "#define SCB_CLIDR_LOUU_Msk   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
SCB CLIDR: LoUU Mask 
.SS "#define SCB_CLIDR_LOUU_Msk   (7UL << \fBSCB_CLIDR_LOUU_Pos\fP)"
SCB CLIDR: LoUU Mask 
.SS "#define SCB_CLIDR_LOUU_Pos   27U"
SCB CLIDR: LoUU Position 
.SS "#define SCB_CLIDR_LOUU_Pos   27U"
SCB CLIDR: LoUU Position 
.SS "#define SCB_CLIDR_LOUU_Pos   27U"
SCB CLIDR: LoUU Position 
.SS "#define SCB_CLIDR_LOUU_Pos   27U"
SCB CLIDR: LoUU Position 
.SS "#define SCB_CLIDR_LOUU_Pos   27U"
SCB CLIDR: LoUU Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Msk   (0xFUL << \fBSCB_CPUID_ARCHITECTURE_Pos\fP)"
SCB CPUID: ARCHITECTURE Mask 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_ARCHITECTURE_Pos   16U"
SCB CPUID: ARCHITECTURE Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Msk   (0xFFUL << \fBSCB_CPUID_IMPLEMENTER_Pos\fP)"
SCB CPUID: IMPLEMENTER Mask 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_IMPLEMENTER_Pos   24U"
SCB CPUID: IMPLEMENTER Position 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Msk   (0xFFFUL << \fBSCB_CPUID_PARTNO_Pos\fP)"
SCB CPUID: PARTNO Mask 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_PARTNO_Pos   4U"
SCB CPUID: PARTNO Position 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Msk   (0xFUL /*<< \fBSCB_CPUID_REVISION_Pos\fP*/)"
SCB CPUID: REVISION Mask 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_REVISION_Pos   0U"
SCB CPUID: REVISION Position 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Msk   (0xFUL << \fBSCB_CPUID_VARIANT_Pos\fP)"
SCB CPUID: VARIANT Mask 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CPUID_VARIANT_Pos   20U"
SCB CPUID: VARIANT Position 
.SS "#define SCB_CSSELR_IND_Msk   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
SCB CSSELR: InD Mask 
.SS "#define SCB_CSSELR_IND_Msk   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
SCB CSSELR: InD Mask 
.SS "#define SCB_CSSELR_IND_Msk   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
SCB CSSELR: InD Mask 
.SS "#define SCB_CSSELR_IND_Msk   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
SCB CSSELR: InD Mask 
.SS "#define SCB_CSSELR_IND_Msk   (1UL /*<< \fBSCB_CSSELR_IND_Pos\fP*/)"
SCB CSSELR: InD Mask 
.SS "#define SCB_CSSELR_IND_Pos   0U"
SCB CSSELR: InD Position 
.SS "#define SCB_CSSELR_IND_Pos   0U"
SCB CSSELR: InD Position 
.SS "#define SCB_CSSELR_IND_Pos   0U"
SCB CSSELR: InD Position 
.SS "#define SCB_CSSELR_IND_Pos   0U"
SCB CSSELR: InD Position 
.SS "#define SCB_CSSELR_IND_Pos   0U"
SCB CSSELR: InD Position 
.SS "#define SCB_CSSELR_LEVEL_Msk   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
SCB CSSELR: Level Mask 
.SS "#define SCB_CSSELR_LEVEL_Msk   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
SCB CSSELR: Level Mask 
.SS "#define SCB_CSSELR_LEVEL_Msk   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
SCB CSSELR: Level Mask 
.SS "#define SCB_CSSELR_LEVEL_Msk   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
SCB CSSELR: Level Mask 
.SS "#define SCB_CSSELR_LEVEL_Msk   (7UL << \fBSCB_CSSELR_LEVEL_Pos\fP)"
SCB CSSELR: Level Mask 
.SS "#define SCB_CSSELR_LEVEL_Pos   1U"
SCB CSSELR: Level Position 
.SS "#define SCB_CSSELR_LEVEL_Pos   1U"
SCB CSSELR: Level Position 
.SS "#define SCB_CSSELR_LEVEL_Pos   1U"
SCB CSSELR: Level Position 
.SS "#define SCB_CSSELR_LEVEL_Pos   1U"
SCB CSSELR: Level Position 
.SS "#define SCB_CSSELR_LEVEL_Pos   1U"
SCB CSSELR: Level Position 
.SS "#define SCB_CTR_CWG_Msk   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
SCB CTR: CWG Mask 
.SS "#define SCB_CTR_CWG_Msk   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
SCB CTR: CWG Mask 
.SS "#define SCB_CTR_CWG_Msk   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
SCB CTR: CWG Mask 
.SS "#define SCB_CTR_CWG_Msk   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
SCB CTR: CWG Mask 
.SS "#define SCB_CTR_CWG_Msk   (0xFUL << \fBSCB_CTR_CWG_Pos\fP)"
SCB CTR: CWG Mask 
.SS "#define SCB_CTR_CWG_Pos   24U"
SCB CTR: CWG Position 
.SS "#define SCB_CTR_CWG_Pos   24U"
SCB CTR: CWG Position 
.SS "#define SCB_CTR_CWG_Pos   24U"
SCB CTR: CWG Position 
.SS "#define SCB_CTR_CWG_Pos   24U"
SCB CTR: CWG Position 
.SS "#define SCB_CTR_CWG_Pos   24U"
SCB CTR: CWG Position 
.SS "#define SCB_CTR_DMINLINE_Msk   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
SCB CTR: DminLine Mask 
.SS "#define SCB_CTR_DMINLINE_Msk   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
SCB CTR: DminLine Mask 
.SS "#define SCB_CTR_DMINLINE_Msk   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
SCB CTR: DminLine Mask 
.SS "#define SCB_CTR_DMINLINE_Msk   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
SCB CTR: DminLine Mask 
.SS "#define SCB_CTR_DMINLINE_Msk   (0xFUL << \fBSCB_CTR_DMINLINE_Pos\fP)"
SCB CTR: DminLine Mask 
.SS "#define SCB_CTR_DMINLINE_Pos   16U"
SCB CTR: DminLine Position 
.SS "#define SCB_CTR_DMINLINE_Pos   16U"
SCB CTR: DminLine Position 
.SS "#define SCB_CTR_DMINLINE_Pos   16U"
SCB CTR: DminLine Position 
.SS "#define SCB_CTR_DMINLINE_Pos   16U"
SCB CTR: DminLine Position 
.SS "#define SCB_CTR_DMINLINE_Pos   16U"
SCB CTR: DminLine Position 
.SS "#define SCB_CTR_ERG_Msk   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
SCB CTR: ERG Mask 
.SS "#define SCB_CTR_ERG_Msk   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
SCB CTR: ERG Mask 
.SS "#define SCB_CTR_ERG_Msk   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
SCB CTR: ERG Mask 
.SS "#define SCB_CTR_ERG_Msk   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
SCB CTR: ERG Mask 
.SS "#define SCB_CTR_ERG_Msk   (0xFUL << \fBSCB_CTR_ERG_Pos\fP)"
SCB CTR: ERG Mask 
.SS "#define SCB_CTR_ERG_Pos   20U"
SCB CTR: ERG Position 
.SS "#define SCB_CTR_ERG_Pos   20U"
SCB CTR: ERG Position 
.SS "#define SCB_CTR_ERG_Pos   20U"
SCB CTR: ERG Position 
.SS "#define SCB_CTR_ERG_Pos   20U"
SCB CTR: ERG Position 
.SS "#define SCB_CTR_ERG_Pos   20U"
SCB CTR: ERG Position 
.SS "#define SCB_CTR_FORMAT_Msk   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
SCB CTR: Format Mask 
.SS "#define SCB_CTR_FORMAT_Msk   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
SCB CTR: Format Mask 
.SS "#define SCB_CTR_FORMAT_Msk   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
SCB CTR: Format Mask 
.SS "#define SCB_CTR_FORMAT_Msk   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
SCB CTR: Format Mask 
.SS "#define SCB_CTR_FORMAT_Msk   (7UL << \fBSCB_CTR_FORMAT_Pos\fP)"
SCB CTR: Format Mask 
.SS "#define SCB_CTR_FORMAT_Pos   29U"
SCB CTR: Format Position 
.SS "#define SCB_CTR_FORMAT_Pos   29U"
SCB CTR: Format Position 
.SS "#define SCB_CTR_FORMAT_Pos   29U"
SCB CTR: Format Position 
.SS "#define SCB_CTR_FORMAT_Pos   29U"
SCB CTR: Format Position 
.SS "#define SCB_CTR_FORMAT_Pos   29U"
SCB CTR: Format Position 
.SS "#define SCB_CTR_IMINLINE_Msk   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
SCB CTR: ImInLine Mask 
.SS "#define SCB_CTR_IMINLINE_Msk   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
SCB CTR: ImInLine Mask 
.SS "#define SCB_CTR_IMINLINE_Msk   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
SCB CTR: ImInLine Mask 
.SS "#define SCB_CTR_IMINLINE_Msk   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
SCB CTR: ImInLine Mask 
.SS "#define SCB_CTR_IMINLINE_Msk   (0xFUL /*<< \fBSCB_CTR_IMINLINE_Pos\fP*/)"
SCB CTR: ImInLine Mask 
.SS "#define SCB_CTR_IMINLINE_Pos   0U"
SCB CTR: ImInLine Position 
.SS "#define SCB_CTR_IMINLINE_Pos   0U"
SCB CTR: ImInLine Position 
.SS "#define SCB_CTR_IMINLINE_Pos   0U"
SCB CTR: ImInLine Position 
.SS "#define SCB_CTR_IMINLINE_Pos   0U"
SCB CTR: ImInLine Position 
.SS "#define SCB_CTR_IMINLINE_Pos   0U"
SCB CTR: ImInLine Position 
.SS "#define SCB_DCCISW_SET_Msk   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
SCB DCCISW: Set Mask 
.SS "#define SCB_DCCISW_SET_Msk   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
SCB DCCISW: Set Mask 
.SS "#define SCB_DCCISW_SET_Msk   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
SCB DCCISW: Set Mask 
.SS "#define SCB_DCCISW_SET_Msk   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
SCB DCCISW: Set Mask 
.SS "#define SCB_DCCISW_SET_Msk   (0x1FFUL << \fBSCB_DCCISW_SET_Pos\fP)"
SCB DCCISW: Set Mask 
.SS "#define SCB_DCCISW_SET_Pos   5U"
SCB DCCISW: Set Position 
.SS "#define SCB_DCCISW_SET_Pos   5U"
SCB DCCISW: Set Position 
.SS "#define SCB_DCCISW_SET_Pos   5U"
SCB DCCISW: Set Position 
.SS "#define SCB_DCCISW_SET_Pos   5U"
SCB DCCISW: Set Position 
.SS "#define SCB_DCCISW_SET_Pos   5U"
SCB DCCISW: Set Position 
.SS "#define SCB_DCCISW_WAY_Msk   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
SCB DCCISW: Way Mask 
.SS "#define SCB_DCCISW_WAY_Msk   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
SCB DCCISW: Way Mask 
.SS "#define SCB_DCCISW_WAY_Msk   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
SCB DCCISW: Way Mask 
.SS "#define SCB_DCCISW_WAY_Msk   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
SCB DCCISW: Way Mask 
.SS "#define SCB_DCCISW_WAY_Msk   (3UL << \fBSCB_DCCISW_WAY_Pos\fP)"
SCB DCCISW: Way Mask 
.SS "#define SCB_DCCISW_WAY_Pos   30U"
SCB DCCISW: Way Position 
.SS "#define SCB_DCCISW_WAY_Pos   30U"
SCB DCCISW: Way Position 
.SS "#define SCB_DCCISW_WAY_Pos   30U"
SCB DCCISW: Way Position 
.SS "#define SCB_DCCISW_WAY_Pos   30U"
SCB DCCISW: Way Position 
.SS "#define SCB_DCCISW_WAY_Pos   30U"
SCB DCCISW: Way Position 
.SS "#define SCB_DCCSW_SET_Msk   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
SCB DCCSW: Set Mask 
.SS "#define SCB_DCCSW_SET_Msk   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
SCB DCCSW: Set Mask 
.SS "#define SCB_DCCSW_SET_Msk   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
SCB DCCSW: Set Mask 
.SS "#define SCB_DCCSW_SET_Msk   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
SCB DCCSW: Set Mask 
.SS "#define SCB_DCCSW_SET_Msk   (0x1FFUL << \fBSCB_DCCSW_SET_Pos\fP)"
SCB DCCSW: Set Mask 
.SS "#define SCB_DCCSW_SET_Pos   5U"
SCB DCCSW: Set Position 
.SS "#define SCB_DCCSW_SET_Pos   5U"
SCB DCCSW: Set Position 
.SS "#define SCB_DCCSW_SET_Pos   5U"
SCB DCCSW: Set Position 
.SS "#define SCB_DCCSW_SET_Pos   5U"
SCB DCCSW: Set Position 
.SS "#define SCB_DCCSW_SET_Pos   5U"
SCB DCCSW: Set Position 
.SS "#define SCB_DCCSW_WAY_Msk   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
SCB DCCSW: Way Mask 
.SS "#define SCB_DCCSW_WAY_Msk   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
SCB DCCSW: Way Mask 
.SS "#define SCB_DCCSW_WAY_Msk   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
SCB DCCSW: Way Mask 
.SS "#define SCB_DCCSW_WAY_Msk   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
SCB DCCSW: Way Mask 
.SS "#define SCB_DCCSW_WAY_Msk   (3UL << \fBSCB_DCCSW_WAY_Pos\fP)"
SCB DCCSW: Way Mask 
.SS "#define SCB_DCCSW_WAY_Pos   30U"
SCB DCCSW: Way Position 
.SS "#define SCB_DCCSW_WAY_Pos   30U"
SCB DCCSW: Way Position 
.SS "#define SCB_DCCSW_WAY_Pos   30U"
SCB DCCSW: Way Position 
.SS "#define SCB_DCCSW_WAY_Pos   30U"
SCB DCCSW: Way Position 
.SS "#define SCB_DCCSW_WAY_Pos   30U"
SCB DCCSW: Way Position 
.SS "#define SCB_DCISW_SET_Msk   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
SCB DCISW: Set Mask 
.SS "#define SCB_DCISW_SET_Msk   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
SCB DCISW: Set Mask 
.SS "#define SCB_DCISW_SET_Msk   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
SCB DCISW: Set Mask 
.SS "#define SCB_DCISW_SET_Msk   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
SCB DCISW: Set Mask 
.SS "#define SCB_DCISW_SET_Msk   (0x1FFUL << \fBSCB_DCISW_SET_Pos\fP)"
SCB DCISW: Set Mask 
.SS "#define SCB_DCISW_SET_Pos   5U"
SCB DCISW: Set Position 
.SS "#define SCB_DCISW_SET_Pos   5U"
SCB DCISW: Set Position 
.SS "#define SCB_DCISW_SET_Pos   5U"
SCB DCISW: Set Position 
.SS "#define SCB_DCISW_SET_Pos   5U"
SCB DCISW: Set Position 
.SS "#define SCB_DCISW_SET_Pos   5U"
SCB DCISW: Set Position 
.SS "#define SCB_DCISW_WAY_Msk   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
SCB DCISW: Way Mask 
.SS "#define SCB_DCISW_WAY_Msk   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
SCB DCISW: Way Mask 
.SS "#define SCB_DCISW_WAY_Msk   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
SCB DCISW: Way Mask 
.SS "#define SCB_DCISW_WAY_Msk   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
SCB DCISW: Way Mask 
.SS "#define SCB_DCISW_WAY_Msk   (3UL << \fBSCB_DCISW_WAY_Pos\fP)"
SCB DCISW: Way Mask 
.SS "#define SCB_DCISW_WAY_Pos   30U"
SCB DCISW: Way Position 
.SS "#define SCB_DCISW_WAY_Pos   30U"
SCB DCISW: Way Position 
.SS "#define SCB_DCISW_WAY_Pos   30U"
SCB DCISW: Way Position 
.SS "#define SCB_DCISW_WAY_Pos   30U"
SCB DCISW: Way Position 
.SS "#define SCB_DCISW_WAY_Pos   30U"
SCB DCISW: Way Position 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Msk   (1UL << \fBSCB_DFSR_BKPT_Pos\fP)"
SCB DFSR: BKPT Mask 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_BKPT_Pos   1U"
SCB DFSR: BKPT Position 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Msk   (1UL << \fBSCB_DFSR_DWTTRAP_Pos\fP)"
SCB DFSR: DWTTRAP Mask 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_DWTTRAP_Pos   2U"
SCB DFSR: DWTTRAP Position 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Msk   (1UL << \fBSCB_DFSR_EXTERNAL_Pos\fP)"
SCB DFSR: EXTERNAL Mask 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_EXTERNAL_Pos   4U"
SCB DFSR: EXTERNAL Position 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Msk   (1UL /*<< \fBSCB_DFSR_HALTED_Pos\fP*/)"
SCB DFSR: HALTED Mask 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_HALTED_Pos   0U"
SCB DFSR: HALTED Position 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Msk   (1UL << \fBSCB_DFSR_VCATCH_Pos\fP)"
SCB DFSR: VCATCH Mask 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DFSR_VCATCH_Pos   3U"
SCB DFSR: VCATCH Position 
.SS "#define SCB_DTCMCR_EN_Msk   (1UL /*<< \fBSCB_DTCMCR_EN_Pos\fP*/)"
SCB DTCMCR: EN Mask 
.SS "#define SCB_DTCMCR_EN_Msk   (1UL /*<< \fBSCB_DTCMCR_EN_Pos\fP*/)"
SCB DTCMCR: EN Mask 
.SS "#define SCB_DTCMCR_EN_Pos   0U"
SCB DTCMCR: EN Position 
.SS "#define SCB_DTCMCR_EN_Pos   0U"
SCB DTCMCR: EN Position 
.SS "#define SCB_DTCMCR_RETEN_Msk   (1UL << \fBSCB_DTCMCR_RETEN_Pos\fP)"
SCB DTCMCR: RETEN Mask 
.SS "#define SCB_DTCMCR_RETEN_Msk   (1UL << \fBSCB_DTCMCR_RETEN_Pos\fP)"
SCB DTCMCR: RETEN Mask 
.SS "#define SCB_DTCMCR_RETEN_Pos   2U"
SCB DTCMCR: RETEN Position 
.SS "#define SCB_DTCMCR_RETEN_Pos   2U"
SCB DTCMCR: RETEN Position 
.SS "#define SCB_DTCMCR_RMW_Msk   (1UL << \fBSCB_DTCMCR_RMW_Pos\fP)"
SCB DTCMCR: RMW Mask 
.SS "#define SCB_DTCMCR_RMW_Msk   (1UL << \fBSCB_DTCMCR_RMW_Pos\fP)"
SCB DTCMCR: RMW Mask 
.SS "#define SCB_DTCMCR_RMW_Pos   1U"
SCB DTCMCR: RMW Position 
.SS "#define SCB_DTCMCR_RMW_Pos   1U"
SCB DTCMCR: RMW Position 
.SS "#define SCB_DTCMCR_SZ_Msk   (0xFUL << \fBSCB_DTCMCR_SZ_Pos\fP)"
SCB DTCMCR: SZ Mask 
.SS "#define SCB_DTCMCR_SZ_Msk   (0xFUL << \fBSCB_DTCMCR_SZ_Pos\fP)"
SCB DTCMCR: SZ Mask 
.SS "#define SCB_DTCMCR_SZ_Pos   3U"
SCB DTCMCR: SZ Position 
.SS "#define SCB_DTCMCR_SZ_Pos   3U"
SCB DTCMCR: SZ Position 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Msk   (1UL << \fBSCB_HFSR_DEBUGEVT_Pos\fP)"
SCB HFSR: DEBUGEVT Mask 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_DEBUGEVT_Pos   31U"
SCB HFSR: DEBUGEVT Position 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Msk   (1UL << \fBSCB_HFSR_FORCED_Pos\fP)"
SCB HFSR: FORCED Mask 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_FORCED_Pos   30U"
SCB HFSR: FORCED Position 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Msk   (1UL << \fBSCB_HFSR_VECTTBL_Pos\fP)"
SCB HFSR: VECTTBL Mask 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_HFSR_VECTTBL_Pos   1U"
SCB HFSR: VECTTBL Position 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Msk   (1UL << \fBSCB_ICSR_ISRPENDING_Pos\fP)"
SCB ICSR: ISRPENDING Mask 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPENDING_Pos   22U"
SCB ICSR: ISRPENDING Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Msk   (1UL << \fBSCB_ICSR_ISRPREEMPT_Pos\fP)"
SCB ICSR: ISRPREEMPT Mask 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_ISRPREEMPT_Pos   23U"
SCB ICSR: ISRPREEMPT Position 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   \fBSCB_ICSR_PENDNMISET_Msk\fP"
SCB ICSR: NMIPENDSET Mask, backward compatibility
.PP
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   \fBSCB_ICSR_PENDNMISET_Msk\fP"
SCB ICSR: NMIPENDSET Mask, backward compatibility
.PP
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   \fBSCB_ICSR_PENDNMISET_Msk\fP"
SCB ICSR: NMIPENDSET Mask, backward compatibility
.PP
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask
.PP
SCB ICSR: NMIPENDSET Mask, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask
.PP
SCB ICSR: NMIPENDSET Mask, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask
.PP
SCB ICSR: NMIPENDSET Mask, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   \fBSCB_ICSR_PENDNMISET_Msk\fP"
SCB ICSR: NMIPENDSET Mask, backward compatibility
.PP
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask
.PP
SCB ICSR: NMIPENDSET Mask, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   \fBSCB_ICSR_PENDNMISET_Msk\fP"
SCB ICSR: NMIPENDSET Mask, backward compatibility
.PP
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   \fBSCB_ICSR_PENDNMISET_Msk\fP"
SCB ICSR: NMIPENDSET Mask, backward compatibility
.PP
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Msk   (1UL << \fBSCB_ICSR_NMIPENDSET_Pos\fP)"
SCB ICSR: NMIPENDSET Mask 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   \fBSCB_ICSR_PENDNMISET_Pos\fP"
SCB ICSR: NMIPENDSET Position, backward compatibility
.PP
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   \fBSCB_ICSR_PENDNMISET_Pos\fP"
SCB ICSR: NMIPENDSET Position, backward compatibility
.PP
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   \fBSCB_ICSR_PENDNMISET_Pos\fP"
SCB ICSR: NMIPENDSET Position, backward compatibility
.PP
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position
.PP
SCB ICSR: NMIPENDSET Position, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position
.PP
SCB ICSR: NMIPENDSET Position, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position
.PP
SCB ICSR: NMIPENDSET Position, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   \fBSCB_ICSR_PENDNMISET_Pos\fP"
SCB ICSR: NMIPENDSET Position, backward compatibility
.PP
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position
.PP
SCB ICSR: NMIPENDSET Position, backward compatibility 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   \fBSCB_ICSR_PENDNMISET_Pos\fP"
SCB ICSR: NMIPENDSET Position, backward compatibility
.PP
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   \fBSCB_ICSR_PENDNMISET_Pos\fP"
SCB ICSR: NMIPENDSET Position, backward compatibility
.PP
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_NMIPENDSET_Pos   31U"
SCB ICSR: NMIPENDSET Position 
.SS "#define SCB_ICSR_PENDNMICLR_Msk   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
SCB ICSR: PENDNMICLR Mask 
.SS "#define SCB_ICSR_PENDNMICLR_Msk   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
SCB ICSR: PENDNMICLR Mask 
.SS "#define SCB_ICSR_PENDNMICLR_Msk   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
SCB ICSR: PENDNMICLR Mask 
.SS "#define SCB_ICSR_PENDNMICLR_Msk   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
SCB ICSR: PENDNMICLR Mask 
.SS "#define SCB_ICSR_PENDNMICLR_Msk   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
SCB ICSR: PENDNMICLR Mask 
.SS "#define SCB_ICSR_PENDNMICLR_Msk   (1UL << \fBSCB_ICSR_PENDNMICLR_Pos\fP)"
SCB ICSR: PENDNMICLR Mask 
.SS "#define SCB_ICSR_PENDNMICLR_Pos   30U"
SCB ICSR: PENDNMICLR Position 
.SS "#define SCB_ICSR_PENDNMICLR_Pos   30U"
SCB ICSR: PENDNMICLR Position 
.SS "#define SCB_ICSR_PENDNMICLR_Pos   30U"
SCB ICSR: PENDNMICLR Position 
.SS "#define SCB_ICSR_PENDNMICLR_Pos   30U"
SCB ICSR: PENDNMICLR Position 
.SS "#define SCB_ICSR_PENDNMICLR_Pos   30U"
SCB ICSR: PENDNMICLR Position 
.SS "#define SCB_ICSR_PENDNMICLR_Pos   30U"
SCB ICSR: PENDNMICLR Position 
.SS "#define SCB_ICSR_PENDNMISET_Msk   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
SCB ICSR: PENDNMISET Mask 
.SS "#define SCB_ICSR_PENDNMISET_Msk   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
SCB ICSR: PENDNMISET Mask 
.SS "#define SCB_ICSR_PENDNMISET_Msk   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
SCB ICSR: PENDNMISET Mask 
.SS "#define SCB_ICSR_PENDNMISET_Msk   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
SCB ICSR: PENDNMISET Mask 
.SS "#define SCB_ICSR_PENDNMISET_Msk   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
SCB ICSR: PENDNMISET Mask 
.SS "#define SCB_ICSR_PENDNMISET_Msk   (1UL << \fBSCB_ICSR_PENDNMISET_Pos\fP)"
SCB ICSR: PENDNMISET Mask 
.SS "#define SCB_ICSR_PENDNMISET_Pos   31U"
SCB ICSR: PENDNMISET Position 
.SS "#define SCB_ICSR_PENDNMISET_Pos   31U"
SCB ICSR: PENDNMISET Position 
.SS "#define SCB_ICSR_PENDNMISET_Pos   31U"
SCB ICSR: PENDNMISET Position 
.SS "#define SCB_ICSR_PENDNMISET_Pos   31U"
SCB ICSR: PENDNMISET Position 
.SS "#define SCB_ICSR_PENDNMISET_Pos   31U"
SCB ICSR: PENDNMISET Position 
.SS "#define SCB_ICSR_PENDNMISET_Pos   31U"
SCB ICSR: PENDNMISET Position 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Msk   (1UL << \fBSCB_ICSR_PENDSTCLR_Pos\fP)"
SCB ICSR: PENDSTCLR Mask 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTCLR_Pos   25U"
SCB ICSR: PENDSTCLR Position 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Msk   (1UL << \fBSCB_ICSR_PENDSTSET_Pos\fP)"
SCB ICSR: PENDSTSET Mask 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSTSET_Pos   26U"
SCB ICSR: PENDSTSET Position 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Msk   (1UL << \fBSCB_ICSR_PENDSVCLR_Pos\fP)"
SCB ICSR: PENDSVCLR Mask 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVCLR_Pos   27U"
SCB ICSR: PENDSVCLR Position 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Msk   (1UL << \fBSCB_ICSR_PENDSVSET_Pos\fP)"
SCB ICSR: PENDSVSET Mask 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_PENDSVSET_Pos   28U"
SCB ICSR: PENDSVSET Position 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Msk   (1UL << \fBSCB_ICSR_RETTOBASE_Pos\fP)"
SCB ICSR: RETTOBASE Mask 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_RETTOBASE_Pos   11U"
SCB ICSR: RETTOBASE Position 
.SS "#define SCB_ICSR_STTNS_Msk   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
SCB ICSR: STTNS Mask (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Msk   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
SCB ICSR: STTNS Mask (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Msk   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
SCB ICSR: STTNS Mask (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Msk   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
SCB ICSR: STTNS Mask (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Msk   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
SCB ICSR: STTNS Mask (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Msk   (1UL << \fBSCB_ICSR_STTNS_Pos\fP)"
SCB ICSR: STTNS Mask (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Pos   24U"
SCB ICSR: STTNS Position (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Pos   24U"
SCB ICSR: STTNS Position (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Pos   24U"
SCB ICSR: STTNS Position (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Pos   24U"
SCB ICSR: STTNS Position (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Pos   24U"
SCB ICSR: STTNS Position (Security Extension) 
.SS "#define SCB_ICSR_STTNS_Pos   24U"
SCB ICSR: STTNS Position (Security Extension) 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Msk   (0x1FFUL /*<< \fBSCB_ICSR_VECTACTIVE_Pos\fP*/)"
SCB ICSR: VECTACTIVE Mask 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTACTIVE_Pos   0U"
SCB ICSR: VECTACTIVE Position 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Msk   (0x1FFUL << \fBSCB_ICSR_VECTPENDING_Pos\fP)"
SCB ICSR: VECTPENDING Mask 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ICSR_VECTPENDING_Pos   12U"
SCB ICSR: VECTPENDING Position 
.SS "#define SCB_ITCMCR_EN_Msk   (1UL /*<< \fBSCB_ITCMCR_EN_Pos\fP*/)"
SCB ITCMCR: EN Mask 
.SS "#define SCB_ITCMCR_EN_Msk   (1UL /*<< \fBSCB_ITCMCR_EN_Pos\fP*/)"
SCB ITCMCR: EN Mask 
.SS "#define SCB_ITCMCR_EN_Pos   0U"
SCB ITCMCR: EN Position 
.SS "#define SCB_ITCMCR_EN_Pos   0U"
SCB ITCMCR: EN Position 
.SS "#define SCB_ITCMCR_RETEN_Msk   (1UL << \fBSCB_ITCMCR_RETEN_Pos\fP)"
SCB ITCMCR: RETEN Mask 
.SS "#define SCB_ITCMCR_RETEN_Msk   (1UL << \fBSCB_ITCMCR_RETEN_Pos\fP)"
SCB ITCMCR: RETEN Mask 
.SS "#define SCB_ITCMCR_RETEN_Pos   2U"
SCB ITCMCR: RETEN Position 
.SS "#define SCB_ITCMCR_RETEN_Pos   2U"
SCB ITCMCR: RETEN Position 
.SS "#define SCB_ITCMCR_RMW_Msk   (1UL << \fBSCB_ITCMCR_RMW_Pos\fP)"
SCB ITCMCR: RMW Mask 
.SS "#define SCB_ITCMCR_RMW_Msk   (1UL << \fBSCB_ITCMCR_RMW_Pos\fP)"
SCB ITCMCR: RMW Mask 
.SS "#define SCB_ITCMCR_RMW_Pos   1U"
SCB ITCMCR: RMW Position 
.SS "#define SCB_ITCMCR_RMW_Pos   1U"
SCB ITCMCR: RMW Position 
.SS "#define SCB_ITCMCR_SZ_Msk   (0xFUL << \fBSCB_ITCMCR_SZ_Pos\fP)"
SCB ITCMCR: SZ Mask 
.SS "#define SCB_ITCMCR_SZ_Msk   (0xFUL << \fBSCB_ITCMCR_SZ_Pos\fP)"
SCB ITCMCR: SZ Mask 
.SS "#define SCB_ITCMCR_SZ_Pos   3U"
SCB ITCMCR: SZ Position 
.SS "#define SCB_ITCMCR_SZ_Pos   3U"
SCB ITCMCR: SZ Position 
.SS "#define SCB_NSACR_CP10_Msk   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
SCB NSACR: CP10 Mask 
.SS "#define SCB_NSACR_CP10_Msk   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
SCB NSACR: CP10 Mask 
.SS "#define SCB_NSACR_CP10_Msk   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
SCB NSACR: CP10 Mask 
.SS "#define SCB_NSACR_CP10_Msk   (1UL << \fBSCB_NSACR_CP10_Pos\fP)"
SCB NSACR: CP10 Mask 
.SS "#define SCB_NSACR_CP10_Pos   10U"
SCB NSACR: CP10 Position 
.SS "#define SCB_NSACR_CP10_Pos   10U"
SCB NSACR: CP10 Position 
.SS "#define SCB_NSACR_CP10_Pos   10U"
SCB NSACR: CP10 Position 
.SS "#define SCB_NSACR_CP10_Pos   10U"
SCB NSACR: CP10 Position 
.SS "#define SCB_NSACR_CP11_Msk   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
SCB NSACR: CP11 Mask 
.SS "#define SCB_NSACR_CP11_Msk   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
SCB NSACR: CP11 Mask 
.SS "#define SCB_NSACR_CP11_Msk   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
SCB NSACR: CP11 Mask 
.SS "#define SCB_NSACR_CP11_Msk   (1UL << \fBSCB_NSACR_CP11_Pos\fP)"
SCB NSACR: CP11 Mask 
.SS "#define SCB_NSACR_CP11_Pos   11U"
SCB NSACR: CP11 Position 
.SS "#define SCB_NSACR_CP11_Pos   11U"
SCB NSACR: CP11 Position 
.SS "#define SCB_NSACR_CP11_Pos   11U"
SCB NSACR: CP11 Position 
.SS "#define SCB_NSACR_CP11_Pos   11U"
SCB NSACR: CP11 Position 
.SS "#define SCB_NSACR_CPn_Msk   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
SCB NSACR: CPn Mask 
.SS "#define SCB_NSACR_CPn_Msk   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
SCB NSACR: CPn Mask 
.SS "#define SCB_NSACR_CPn_Msk   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
SCB NSACR: CPn Mask 
.SS "#define SCB_NSACR_CPn_Msk   (1UL /*<< \fBSCB_NSACR_CPn_Pos\fP*/)"
SCB NSACR: CPn Mask 
.SS "#define SCB_NSACR_CPn_Pos   0U"
SCB NSACR: CPn Position 
.SS "#define SCB_NSACR_CPn_Pos   0U"
SCB NSACR: CPn Position 
.SS "#define SCB_NSACR_CPn_Pos   0U"
SCB NSACR: CPn Position 
.SS "#define SCB_NSACR_CPn_Pos   0U"
SCB NSACR: CPn Position 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Msk   (1UL << \fBSCB_SCR_SEVONPEND_Pos\fP)"
SCB SCR: SEVONPEND Mask 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SEVONPEND_Pos   4U"
SCB SCR: SEVONPEND Position 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Msk   (1UL << \fBSCB_SCR_SLEEPDEEP_Pos\fP)"
SCB SCR: SLEEPDEEP Mask 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEP_Pos   2U"
SCB SCR: SLEEPDEEP Position 
.SS "#define SCB_SCR_SLEEPDEEPS_Msk   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
SCB SCR: SLEEPDEEPS Mask 
.SS "#define SCB_SCR_SLEEPDEEPS_Msk   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
SCB SCR: SLEEPDEEPS Mask 
.SS "#define SCB_SCR_SLEEPDEEPS_Msk   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
SCB SCR: SLEEPDEEPS Mask 
.SS "#define SCB_SCR_SLEEPDEEPS_Msk   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
SCB SCR: SLEEPDEEPS Mask 
.SS "#define SCB_SCR_SLEEPDEEPS_Msk   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
SCB SCR: SLEEPDEEPS Mask 
.SS "#define SCB_SCR_SLEEPDEEPS_Msk   (1UL << \fBSCB_SCR_SLEEPDEEPS_Pos\fP)"
SCB SCR: SLEEPDEEPS Mask 
.SS "#define SCB_SCR_SLEEPDEEPS_Pos   3U"
SCB SCR: SLEEPDEEPS Position 
.SS "#define SCB_SCR_SLEEPDEEPS_Pos   3U"
SCB SCR: SLEEPDEEPS Position 
.SS "#define SCB_SCR_SLEEPDEEPS_Pos   3U"
SCB SCR: SLEEPDEEPS Position 
.SS "#define SCB_SCR_SLEEPDEEPS_Pos   3U"
SCB SCR: SLEEPDEEPS Position 
.SS "#define SCB_SCR_SLEEPDEEPS_Pos   3U"
SCB SCR: SLEEPDEEPS Position 
.SS "#define SCB_SCR_SLEEPDEEPS_Pos   3U"
SCB SCR: SLEEPDEEPS Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Msk   (1UL << \fBSCB_SCR_SLEEPONEXIT_Pos\fP)"
SCB SCR: SLEEPONEXIT Mask 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SCR_SLEEPONEXIT_Pos   1U"
SCB SCR: SLEEPONEXIT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTACT_Pos\fP)"
SCB SHCSR: BUSFAULTACT Mask 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTACT_Pos   1U"
SCB SHCSR: BUSFAULTACT Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTENA_Pos\fP)"
SCB SHCSR: BUSFAULTENA Mask 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTENA_Pos   17U"
SCB SHCSR: BUSFAULTENA Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_BUSFAULTPENDED_Pos\fP)"
SCB SHCSR: BUSFAULTPENDED Mask 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_BUSFAULTPENDED_Pos   14U"
SCB SHCSR: BUSFAULTPENDED Position 
.SS "#define SCB_SHCSR_HARDFAULTACT_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
SCB SHCSR: HARDFAULTACT Mask 
.SS "#define SCB_SHCSR_HARDFAULTACT_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
SCB SHCSR: HARDFAULTACT Mask 
.SS "#define SCB_SHCSR_HARDFAULTACT_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
SCB SHCSR: HARDFAULTACT Mask 
.SS "#define SCB_SHCSR_HARDFAULTACT_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
SCB SHCSR: HARDFAULTACT Mask 
.SS "#define SCB_SHCSR_HARDFAULTACT_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
SCB SHCSR: HARDFAULTACT Mask 
.SS "#define SCB_SHCSR_HARDFAULTACT_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTACT_Pos\fP)"
SCB SHCSR: HARDFAULTACT Mask 
.SS "#define SCB_SHCSR_HARDFAULTACT_Pos   2U"
SCB SHCSR: HARDFAULTACT Position 
.SS "#define SCB_SHCSR_HARDFAULTACT_Pos   2U"
SCB SHCSR: HARDFAULTACT Position 
.SS "#define SCB_SHCSR_HARDFAULTACT_Pos   2U"
SCB SHCSR: HARDFAULTACT Position 
.SS "#define SCB_SHCSR_HARDFAULTACT_Pos   2U"
SCB SHCSR: HARDFAULTACT Position 
.SS "#define SCB_SHCSR_HARDFAULTACT_Pos   2U"
SCB SHCSR: HARDFAULTACT Position 
.SS "#define SCB_SHCSR_HARDFAULTACT_Pos   2U"
SCB SHCSR: HARDFAULTACT Position 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
SCB SHCSR: HARDFAULTPENDED Mask 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
SCB SHCSR: HARDFAULTPENDED Mask 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
SCB SHCSR: HARDFAULTPENDED Mask 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
SCB SHCSR: HARDFAULTPENDED Mask 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
SCB SHCSR: HARDFAULTPENDED Mask 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_HARDFAULTPENDED_Pos\fP)"
SCB SHCSR: HARDFAULTPENDED Mask 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Pos   21U"
SCB SHCSR: HARDFAULTPENDED Position 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Pos   21U"
SCB SHCSR: HARDFAULTPENDED Position 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Pos   21U"
SCB SHCSR: HARDFAULTPENDED Position 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Pos   21U"
SCB SHCSR: HARDFAULTPENDED Position 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Pos   21U"
SCB SHCSR: HARDFAULTPENDED Position 
.SS "#define SCB_SHCSR_HARDFAULTPENDED_Pos   21U"
SCB SHCSR: HARDFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Msk   (1UL /*<< \fBSCB_SHCSR_MEMFAULTACT_Pos\fP*/)"
SCB SHCSR: MEMFAULTACT Mask 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTACT_Pos   0U"
SCB SHCSR: MEMFAULTACT Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTENA_Pos\fP)"
SCB SHCSR: MEMFAULTENA Mask 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTENA_Pos   16U"
SCB SHCSR: MEMFAULTENA Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_MEMFAULTPENDED_Pos\fP)"
SCB SHCSR: MEMFAULTPENDED Mask 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MEMFAULTPENDED_Pos   13U"
SCB SHCSR: MEMFAULTPENDED Position 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Msk   (1UL << \fBSCB_SHCSR_MONITORACT_Pos\fP)"
SCB SHCSR: MONITORACT Mask 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_MONITORACT_Pos   8U"
SCB SHCSR: MONITORACT Position 
.SS "#define SCB_SHCSR_NMIACT_Msk   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
SCB SHCSR: NMIACT Mask 
.SS "#define SCB_SHCSR_NMIACT_Msk   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
SCB SHCSR: NMIACT Mask 
.SS "#define SCB_SHCSR_NMIACT_Msk   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
SCB SHCSR: NMIACT Mask 
.SS "#define SCB_SHCSR_NMIACT_Msk   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
SCB SHCSR: NMIACT Mask 
.SS "#define SCB_SHCSR_NMIACT_Msk   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
SCB SHCSR: NMIACT Mask 
.SS "#define SCB_SHCSR_NMIACT_Msk   (1UL << \fBSCB_SHCSR_NMIACT_Pos\fP)"
SCB SHCSR: NMIACT Mask 
.SS "#define SCB_SHCSR_NMIACT_Pos   5U"
SCB SHCSR: NMIACT Position 
.SS "#define SCB_SHCSR_NMIACT_Pos   5U"
SCB SHCSR: NMIACT Position 
.SS "#define SCB_SHCSR_NMIACT_Pos   5U"
SCB SHCSR: NMIACT Position 
.SS "#define SCB_SHCSR_NMIACT_Pos   5U"
SCB SHCSR: NMIACT Position 
.SS "#define SCB_SHCSR_NMIACT_Pos   5U"
SCB SHCSR: NMIACT Position 
.SS "#define SCB_SHCSR_NMIACT_Pos   5U"
SCB SHCSR: NMIACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Msk   (1UL << \fBSCB_SHCSR_PENDSVACT_Pos\fP)"
SCB SHCSR: PENDSVACT Mask 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_PENDSVACT_Pos   10U"
SCB SHCSR: PENDSVACT Position 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
SCB SHCSR: SECUREFAULTACT Mask 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
SCB SHCSR: SECUREFAULTACT Mask 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
SCB SHCSR: SECUREFAULTACT Mask 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTACT_Pos\fP)"
SCB SHCSR: SECUREFAULTACT Mask 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Pos   4U"
SCB SHCSR: SECUREFAULTACT Position 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Pos   4U"
SCB SHCSR: SECUREFAULTACT Position 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Pos   4U"
SCB SHCSR: SECUREFAULTACT Position 
.SS "#define SCB_SHCSR_SECUREFAULTACT_Pos   4U"
SCB SHCSR: SECUREFAULTACT Position 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
SCB SHCSR: SECUREFAULTENA Mask 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
SCB SHCSR: SECUREFAULTENA Mask 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
SCB SHCSR: SECUREFAULTENA Mask 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTENA_Pos\fP)"
SCB SHCSR: SECUREFAULTENA Mask 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Pos   19U"
SCB SHCSR: SECUREFAULTENA Position 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Pos   19U"
SCB SHCSR: SECUREFAULTENA Position 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Pos   19U"
SCB SHCSR: SECUREFAULTENA Position 
.SS "#define SCB_SHCSR_SECUREFAULTENA_Pos   19U"
SCB SHCSR: SECUREFAULTENA Position 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
SCB SHCSR: SECUREFAULTPENDED Mask 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
SCB SHCSR: SECUREFAULTPENDED Mask 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
SCB SHCSR: SECUREFAULTPENDED Mask 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_SECUREFAULTPENDED_Pos\fP)"
SCB SHCSR: SECUREFAULTPENDED Mask 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Pos   20U"
SCB SHCSR: SECUREFAULTPENDED Position 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Pos   20U"
SCB SHCSR: SECUREFAULTPENDED Position 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Pos   20U"
SCB SHCSR: SECUREFAULTPENDED Position 
.SS "#define SCB_SHCSR_SECUREFAULTPENDED_Pos   20U"
SCB SHCSR: SECUREFAULTPENDED Position 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Msk   (1UL << \fBSCB_SHCSR_SVCALLACT_Pos\fP)"
SCB SHCSR: SVCALLACT Mask 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLACT_Pos   7U"
SCB SHCSR: SVCALLACT Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Msk   (1UL << \fBSCB_SHCSR_SVCALLPENDED_Pos\fP)"
SCB SHCSR: SVCALLPENDED Mask 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SVCALLPENDED_Pos   15U"
SCB SHCSR: SVCALLPENDED Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Msk   (1UL << \fBSCB_SHCSR_SYSTICKACT_Pos\fP)"
SCB SHCSR: SYSTICKACT Mask 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_SYSTICKACT_Pos   11U"
SCB SHCSR: SYSTICKACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Msk   (1UL << \fBSCB_SHCSR_USGFAULTACT_Pos\fP)"
SCB SHCSR: USGFAULTACT Mask 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTACT_Pos   3U"
SCB SHCSR: USGFAULTACT Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Msk   (1UL << \fBSCB_SHCSR_USGFAULTENA_Pos\fP)"
SCB SHCSR: USGFAULTENA Mask 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTENA_Pos   18U"
SCB SHCSR: USGFAULTENA Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Msk   (1UL << \fBSCB_SHCSR_USGFAULTPENDED_Pos\fP)"
SCB SHCSR: USGFAULTPENDED Mask 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_SHCSR_USGFAULTPENDED_Pos   12U"
SCB SHCSR: USGFAULTPENDED Position 
.SS "#define SCB_STIR_INTID_Msk   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
SCB STIR: INTID Mask 
.SS "#define SCB_STIR_INTID_Msk   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
SCB STIR: INTID Mask 
.SS "#define SCB_STIR_INTID_Msk   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
SCB STIR: INTID Mask 
.SS "#define SCB_STIR_INTID_Msk   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
SCB STIR: INTID Mask 
.SS "#define SCB_STIR_INTID_Msk   (0x1FFUL /*<< \fBSCB_STIR_INTID_Pos\fP*/)"
SCB STIR: INTID Mask 
.SS "#define SCB_STIR_INTID_Pos   0U"
SCB STIR: INTID Position 
.SS "#define SCB_STIR_INTID_Pos   0U"
SCB STIR: INTID Position 
.SS "#define SCB_STIR_INTID_Pos   0U"
SCB STIR: INTID Position 
.SS "#define SCB_STIR_INTID_Pos   0U"
SCB STIR: INTID Position 
.SS "#define SCB_STIR_INTID_Pos   0U"
SCB STIR: INTID Position 
.SS "#define SCB_VTOR_TBLBASE_Msk   (1UL << \fBSCB_VTOR_TBLBASE_Pos\fP)"
SCB VTOR: TBLBASE Mask 
.SS "#define SCB_VTOR_TBLBASE_Pos   29U"
SCB VTOR: TBLBASE Position 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x1FFFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Msk   (0x3FFFFFUL << \fBSCB_VTOR_TBLOFF_Pos\fP)"
SCB VTOR: TBLOFF Mask 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCB_VTOR_TBLOFF_Pos   7U"
SCB VTOR: TBLOFF Position 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP         )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
System control Register not in SCB 
.SS "#define SCnSCB   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
System control Register not in SCB 
.SS "#define SCnSCB_ACTLR_DISDEFWBUF_Msk   (1UL << \fBSCnSCB_ACTLR_DISDEFWBUF_Pos\fP)"
ACTLR: DISDEFWBUF Mask 
.SS "#define SCnSCB_ACTLR_DISDEFWBUF_Msk   (1UL << \fBSCnSCB_ACTLR_DISDEFWBUF_Pos\fP)"
ACTLR: DISDEFWBUF Mask 
.SS "#define SCnSCB_ACTLR_DISDEFWBUF_Pos   1U"
ACTLR: DISDEFWBUF Position 
.SS "#define SCnSCB_ACTLR_DISDEFWBUF_Pos   1U"
ACTLR: DISDEFWBUF Position 
.SS "#define SCnSCB_ACTLR_DISFOLD_Msk   (1UL << \fBSCnSCB_ACTLR_DISFOLD_Pos\fP)"
ACTLR: DISFOLD Mask 
.SS "#define SCnSCB_ACTLR_DISFOLD_Msk   (1UL << \fBSCnSCB_ACTLR_DISFOLD_Pos\fP)"
ACTLR: DISFOLD Mask 
.SS "#define SCnSCB_ACTLR_DISFOLD_Msk   (1UL << \fBSCnSCB_ACTLR_DISFOLD_Pos\fP)"
ACTLR: DISFOLD Mask 
.SS "#define SCnSCB_ACTLR_DISFOLD_Pos   2U"
ACTLR: DISFOLD Position 
.SS "#define SCnSCB_ACTLR_DISFOLD_Pos   2U"
ACTLR: DISFOLD Position 
.SS "#define SCnSCB_ACTLR_DISFOLD_Pos   2U"
ACTLR: DISFOLD Position 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Msk   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
ACTLR: DISMCYCINT Mask 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Msk   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
ACTLR: DISMCYCINT Mask 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Msk   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
ACTLR: DISMCYCINT Mask 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Msk   (1UL /*<< \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP*/)"
ACTLR: DISMCYCINT Mask 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Pos   0U"
ACTLR: DISMCYCINT Position 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Pos   0U"
ACTLR: DISMCYCINT Position 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Pos   0U"
ACTLR: DISMCYCINT Position 
.SS "#define SCnSCB_ACTLR_DISMCYCINT_Pos   0U"
ACTLR: DISMCYCINT Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Msk   (0xFUL /*<< \fBSCnSCB_ICTR_INTLINESNUM_Pos\fP*/)"
ICTR: INTLINESNUM Mask 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCnSCB_ICTR_INTLINESNUM_Pos   0U"
ICTR: INTLINESNUM Position 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SCS_BASE   (0xE000E000UL)"
System Control Space Base Address 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP     )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
SysTick configuration struct 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_BASE   (\fBSCS_BASE\fP +  0x0010UL)"
SysTick Base Address 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Msk   (1UL << \fBSysTick_CALIB_NOREF_Pos\fP)"
SysTick CALIB: NOREF Mask 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_NOREF_Pos   31U"
SysTick CALIB: NOREF Position 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Msk   (1UL << \fBSysTick_CALIB_SKEW_Pos\fP)"
SysTick CALIB: SKEW Mask 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_SKEW_Pos   30U"
SysTick CALIB: SKEW Position 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Msk   (0xFFFFFFUL /*<< \fBSysTick_CALIB_TENMS_Pos\fP*/)"
SysTick CALIB: TENMS Mask 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CALIB_TENMS_Pos   0U"
SysTick CALIB: TENMS Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Msk   (1UL << \fBSysTick_CTRL_CLKSOURCE_Pos\fP)"
SysTick CTRL: CLKSOURCE Mask 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_CLKSOURCE_Pos   2U"
SysTick CTRL: CLKSOURCE Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Msk   (1UL << \fBSysTick_CTRL_COUNTFLAG_Pos\fP)"
SysTick CTRL: COUNTFLAG Mask 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_COUNTFLAG_Pos   16U"
SysTick CTRL: COUNTFLAG Position 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Msk   (1UL /*<< \fBSysTick_CTRL_ENABLE_Pos\fP*/)"
SysTick CTRL: ENABLE Mask 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_ENABLE_Pos   0U"
SysTick CTRL: ENABLE Position 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Msk   (1UL << \fBSysTick_CTRL_TICKINT_Pos\fP)"
SysTick CTRL: TICKINT Mask 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_CTRL_TICKINT_Pos   1U"
SysTick CTRL: TICKINT Position 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Msk   (0xFFFFFFUL /*<< \fBSysTick_LOAD_RELOAD_Pos\fP*/)"
SysTick LOAD: RELOAD Mask 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_LOAD_RELOAD_Pos   0U"
SysTick LOAD: RELOAD Position 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Msk   (0xFFFFFFUL /*<< \fBSysTick_VAL_CURRENT_Pos\fP*/)"
SysTick VAL: CURRENT Mask 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define SysTick_VAL_CURRENT_Pos   0U"
SysTick VAL: CURRENT Position 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP         )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
TPI configuration struct 
.SS "#define TPI   ((\fBTPI_Type\fP       *)     \fBTPI_BASE\fP      )"
TPI configuration struct 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Msk   (0x1FFFUL /*<< \fBTPI_ACPR_PRESCALER_Pos\fP*/)"
TPI ACPR: PRESCALER Mask 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_ACPR_PRESCALER_Pos   0U"
TPI ACPR: PRESCALER Position 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_BASE   (0xE0040000UL)"
TPI Base Address 
.SS "#define TPI_DEVID_AsynClkIn_Msk   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
TPI DEVID: AsynClkIn Mask 
.SS "#define TPI_DEVID_AsynClkIn_Msk   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
TPI DEVID: AsynClkIn Mask 
.SS "#define TPI_DEVID_AsynClkIn_Msk   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
TPI DEVID: AsynClkIn Mask 
.SS "#define TPI_DEVID_AsynClkIn_Msk   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
TPI DEVID: AsynClkIn Mask 
.SS "#define TPI_DEVID_AsynClkIn_Msk   (0x1UL << \fBTPI_DEVID_AsynClkIn_Pos\fP)"
TPI DEVID: AsynClkIn Mask 
.SS "#define TPI_DEVID_AsynClkIn_Pos   5U"
TPI DEVID: AsynClkIn Position 
.SS "#define TPI_DEVID_AsynClkIn_Pos   5U"
TPI DEVID: AsynClkIn Position 
.SS "#define TPI_DEVID_AsynClkIn_Pos   5U"
TPI DEVID: AsynClkIn Position 
.SS "#define TPI_DEVID_AsynClkIn_Pos   5U"
TPI DEVID: AsynClkIn Position 
.SS "#define TPI_DEVID_AsynClkIn_Pos   5U"
TPI DEVID: AsynClkIn Position 
.SS "#define TPI_DEVID_FIFOSZ_Msk   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
TPI DEVID: FIFO depth Mask
.PP
TPI DEVID: FIFOSZ Mask 
.SS "#define TPI_DEVID_FIFOSZ_Msk   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
TPI DEVID: FIFO depth Mask
.PP
TPI DEVID: FIFOSZ Mask 
.SS "#define TPI_DEVID_FIFOSZ_Msk   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
TPI DEVID: FIFOSZ Mask 
.SS "#define TPI_DEVID_FIFOSZ_Msk   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
TPI DEVID: FIFOSZ Mask 
.SS "#define TPI_DEVID_FIFOSZ_Msk   (0x7UL << \fBTPI_DEVID_FIFOSZ_Pos\fP)"
TPI DEVID: FIFOSZ Mask 
.SS "#define TPI_DEVID_FIFOSZ_Pos   6U"
TPI DEVID: FIFO depth Position
.PP
TPI DEVID: FIFOSZ Position 
.SS "#define TPI_DEVID_FIFOSZ_Pos   6U"
TPI DEVID: FIFO depth Position
.PP
TPI DEVID: FIFOSZ Position 
.SS "#define TPI_DEVID_FIFOSZ_Pos   6U"
TPI DEVID: FIFOSZ Position 
.SS "#define TPI_DEVID_FIFOSZ_Pos   6U"
TPI DEVID: FIFOSZ Position 
.SS "#define TPI_DEVID_FIFOSZ_Pos   6U"
TPI DEVID: FIFOSZ Position 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Msk   (0x1UL << \fBTPI_DEVID_MANCVALID_Pos\fP)"
TPI DEVID: MANCVALID Mask 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MANCVALID_Pos   10U"
TPI DEVID: MANCVALID Position 
.SS "#define TPI_DEVID_MinBufSz_Msk   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
TPI DEVID: MinBufSz Mask 
.SS "#define TPI_DEVID_MinBufSz_Msk   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
TPI DEVID: MinBufSz Mask 
.SS "#define TPI_DEVID_MinBufSz_Msk   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
TPI DEVID: MinBufSz Mask 
.SS "#define TPI_DEVID_MinBufSz_Msk   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
TPI DEVID: MinBufSz Mask 
.SS "#define TPI_DEVID_MinBufSz_Msk   (0x7UL << \fBTPI_DEVID_MinBufSz_Pos\fP)"
TPI DEVID: MinBufSz Mask 
.SS "#define TPI_DEVID_MinBufSz_Pos   6U"
TPI DEVID: MinBufSz Position 
.SS "#define TPI_DEVID_MinBufSz_Pos   6U"
TPI DEVID: MinBufSz Position 
.SS "#define TPI_DEVID_MinBufSz_Pos   6U"
TPI DEVID: MinBufSz Position 
.SS "#define TPI_DEVID_MinBufSz_Pos   6U"
TPI DEVID: MinBufSz Position 
.SS "#define TPI_DEVID_MinBufSz_Pos   6U"
TPI DEVID: MinBufSz Position 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x3FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x3FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x3FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Msk   (0x1FUL /*<< \fBTPI_DEVID_NrTraceInput_Pos\fP*/)"
TPI DEVID: NrTraceInput Mask 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NrTraceInput_Pos   0U"
TPI DEVID: NrTraceInput Position 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Msk   (0x1UL << \fBTPI_DEVID_NRZVALID_Pos\fP)"
TPI DEVID: NRZVALID Mask 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_NRZVALID_Pos   11U"
TPI DEVID: NRZVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Msk   (0x1UL << \fBTPI_DEVID_PTINVALID_Pos\fP)"
TPI DEVID: PTINVALID Mask 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVID_PTINVALID_Pos   9U"
TPI DEVID: PTINVALID Position 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Msk   (0xFUL << \fBTPI_DEVTYPE_MajorType_Pos\fP)"
TPI DEVTYPE: MajorType Mask 
.SS "#define TPI_DEVTYPE_MajorType_Pos   4U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_MajorType_Pos   0U"
TPI DEVTYPE: MajorType Position 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Msk   (0xFUL /*<< \fBTPI_DEVTYPE_SubType_Pos\fP*/)"
TPI DEVTYPE: SubType Mask 
.SS "#define TPI_DEVTYPE_SubType_Pos   0U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_DEVTYPE_SubType_Pos   4U"
TPI DEVTYPE: SubType Position 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Msk   (0x1UL << \fBTPI_FFCR_EnFCont_Pos\fP)"
TPI FFCR: EnFCont Mask 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_EnFCont_Pos   1U"
TPI FFCR: EnFCont Position 
.SS "#define TPI_FFCR_FOnMan_Msk   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
TPI FFCR: FOnMan Mask 
.SS "#define TPI_FFCR_FOnMan_Msk   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
TPI FFCR: FOnMan Mask 
.SS "#define TPI_FFCR_FOnMan_Msk   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
TPI FFCR: FOnMan Mask 
.SS "#define TPI_FFCR_FOnMan_Msk   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
TPI FFCR: FOnMan Mask 
.SS "#define TPI_FFCR_FOnMan_Msk   (0x1UL << \fBTPI_FFCR_FOnMan_Pos\fP)"
TPI FFCR: FOnMan Mask 
.SS "#define TPI_FFCR_FOnMan_Pos   6U"
TPI FFCR: FOnMan Position 
.SS "#define TPI_FFCR_FOnMan_Pos   6U"
TPI FFCR: FOnMan Position 
.SS "#define TPI_FFCR_FOnMan_Pos   6U"
TPI FFCR: FOnMan Position 
.SS "#define TPI_FFCR_FOnMan_Pos   6U"
TPI FFCR: FOnMan Position 
.SS "#define TPI_FFCR_FOnMan_Pos   6U"
TPI FFCR: FOnMan Position 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Msk   (0x1UL << \fBTPI_FFCR_TrigIn_Pos\fP)"
TPI FFCR: TrigIn Mask 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFCR_TrigIn_Pos   8U"
TPI FFCR: TrigIn Position 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Msk   (0x1UL /*<< \fBTPI_FFSR_FlInProg_Pos\fP*/)"
TPI FFSR: FlInProg Mask 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FlInProg_Pos   0U"
TPI FFSR: FlInProg Position 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Msk   (0x1UL << \fBTPI_FFSR_FtNonStop_Pos\fP)"
TPI FFSR: FtNonStop Mask 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtNonStop_Pos   3U"
TPI FFSR: FtNonStop Position 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Msk   (0x1UL << \fBTPI_FFSR_FtStopped_Pos\fP)"
TPI FFSR: FtStopped Mask 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_FtStopped_Pos   1U"
TPI FFSR: FtStopped Position 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Msk   (0x1UL << \fBTPI_FFSR_TCPresent_Pos\fP)"
TPI FFSR: TCPresent Mask 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FFSR_TCPresent_Pos   2U"
TPI FFSR: TCPresent Position 
.SS "#define TPI_FIFO0_ETM0_Msk   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
TPI FIFO0: ETM0 Mask 
.SS "#define TPI_FIFO0_ETM0_Msk   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
TPI FIFO0: ETM0 Mask 
.SS "#define TPI_FIFO0_ETM0_Msk   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
TPI FIFO0: ETM0 Mask 
.SS "#define TPI_FIFO0_ETM0_Msk   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
TPI FIFO0: ETM0 Mask 
.SS "#define TPI_FIFO0_ETM0_Msk   (0xFFUL /*<< \fBTPI_FIFO0_ETM0_Pos\fP*/)"
TPI FIFO0: ETM0 Mask 
.SS "#define TPI_FIFO0_ETM0_Pos   0U"
TPI FIFO0: ETM0 Position 
.SS "#define TPI_FIFO0_ETM0_Pos   0U"
TPI FIFO0: ETM0 Position 
.SS "#define TPI_FIFO0_ETM0_Pos   0U"
TPI FIFO0: ETM0 Position 
.SS "#define TPI_FIFO0_ETM0_Pos   0U"
TPI FIFO0: ETM0 Position 
.SS "#define TPI_FIFO0_ETM0_Pos   0U"
TPI FIFO0: ETM0 Position 
.SS "#define TPI_FIFO0_ETM1_Msk   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
TPI FIFO0: ETM1 Mask 
.SS "#define TPI_FIFO0_ETM1_Msk   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
TPI FIFO0: ETM1 Mask 
.SS "#define TPI_FIFO0_ETM1_Msk   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
TPI FIFO0: ETM1 Mask 
.SS "#define TPI_FIFO0_ETM1_Msk   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
TPI FIFO0: ETM1 Mask 
.SS "#define TPI_FIFO0_ETM1_Msk   (0xFFUL << \fBTPI_FIFO0_ETM1_Pos\fP)"
TPI FIFO0: ETM1 Mask 
.SS "#define TPI_FIFO0_ETM1_Pos   8U"
TPI FIFO0: ETM1 Position 
.SS "#define TPI_FIFO0_ETM1_Pos   8U"
TPI FIFO0: ETM1 Position 
.SS "#define TPI_FIFO0_ETM1_Pos   8U"
TPI FIFO0: ETM1 Position 
.SS "#define TPI_FIFO0_ETM1_Pos   8U"
TPI FIFO0: ETM1 Position 
.SS "#define TPI_FIFO0_ETM1_Pos   8U"
TPI FIFO0: ETM1 Position 
.SS "#define TPI_FIFO0_ETM2_Msk   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
TPI FIFO0: ETM2 Mask 
.SS "#define TPI_FIFO0_ETM2_Msk   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
TPI FIFO0: ETM2 Mask 
.SS "#define TPI_FIFO0_ETM2_Msk   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
TPI FIFO0: ETM2 Mask 
.SS "#define TPI_FIFO0_ETM2_Msk   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
TPI FIFO0: ETM2 Mask 
.SS "#define TPI_FIFO0_ETM2_Msk   (0xFFUL << \fBTPI_FIFO0_ETM2_Pos\fP)"
TPI FIFO0: ETM2 Mask 
.SS "#define TPI_FIFO0_ETM2_Pos   16U"
TPI FIFO0: ETM2 Position 
.SS "#define TPI_FIFO0_ETM2_Pos   16U"
TPI FIFO0: ETM2 Position 
.SS "#define TPI_FIFO0_ETM2_Pos   16U"
TPI FIFO0: ETM2 Position 
.SS "#define TPI_FIFO0_ETM2_Pos   16U"
TPI FIFO0: ETM2 Position 
.SS "#define TPI_FIFO0_ETM2_Pos   16U"
TPI FIFO0: ETM2 Position 
.SS "#define TPI_FIFO0_ETM_ATVALID_Msk   (0x3UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
TPI FIFO0: ETM_ATVALID Mask 
.SS "#define TPI_FIFO0_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
TPI FIFO0: ETM_ATVALID Mask 
.SS "#define TPI_FIFO0_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
TPI FIFO0: ETM_ATVALID Mask 
.SS "#define TPI_FIFO0_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
TPI FIFO0: ETM_ATVALID Mask 
.SS "#define TPI_FIFO0_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ETM_ATVALID_Pos\fP)"
TPI FIFO0: ETM_ATVALID Mask 
.SS "#define TPI_FIFO0_ETM_ATVALID_Pos   26U"
TPI FIFO0: ETM_ATVALID Position 
.SS "#define TPI_FIFO0_ETM_ATVALID_Pos   26U"
TPI FIFO0: ETM_ATVALID Position 
.SS "#define TPI_FIFO0_ETM_ATVALID_Pos   26U"
TPI FIFO0: ETM_ATVALID Position 
.SS "#define TPI_FIFO0_ETM_ATVALID_Pos   26U"
TPI FIFO0: ETM_ATVALID Position 
.SS "#define TPI_FIFO0_ETM_ATVALID_Pos   26U"
TPI FIFO0: ETM_ATVALID Position 
.SS "#define TPI_FIFO0_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
TPI FIFO0: ETM_bytecount Mask 
.SS "#define TPI_FIFO0_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
TPI FIFO0: ETM_bytecount Mask 
.SS "#define TPI_FIFO0_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
TPI FIFO0: ETM_bytecount Mask 
.SS "#define TPI_FIFO0_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
TPI FIFO0: ETM_bytecount Mask 
.SS "#define TPI_FIFO0_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ETM_bytecount_Pos\fP)"
TPI FIFO0: ETM_bytecount Mask 
.SS "#define TPI_FIFO0_ETM_bytecount_Pos   24U"
TPI FIFO0: ETM_bytecount Position 
.SS "#define TPI_FIFO0_ETM_bytecount_Pos   24U"
TPI FIFO0: ETM_bytecount Position 
.SS "#define TPI_FIFO0_ETM_bytecount_Pos   24U"
TPI FIFO0: ETM_bytecount Position 
.SS "#define TPI_FIFO0_ETM_bytecount_Pos   24U"
TPI FIFO0: ETM_bytecount Position 
.SS "#define TPI_FIFO0_ETM_bytecount_Pos   24U"
TPI FIFO0: ETM_bytecount Position 
.SS "#define TPI_FIFO0_ITM_ATVALID_Msk   (0x3UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
TPI FIFO0: ITM_ATVALID Mask 
.SS "#define TPI_FIFO0_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
TPI FIFO0: ITM_ATVALID Mask 
.SS "#define TPI_FIFO0_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
TPI FIFO0: ITM_ATVALID Mask 
.SS "#define TPI_FIFO0_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
TPI FIFO0: ITM_ATVALID Mask 
.SS "#define TPI_FIFO0_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO0_ITM_ATVALID_Pos\fP)"
TPI FIFO0: ITM_ATVALID Mask 
.SS "#define TPI_FIFO0_ITM_ATVALID_Pos   29U"
TPI FIFO0: ITM_ATVALID Position 
.SS "#define TPI_FIFO0_ITM_ATVALID_Pos   29U"
TPI FIFO0: ITM_ATVALID Position 
.SS "#define TPI_FIFO0_ITM_ATVALID_Pos   29U"
TPI FIFO0: ITM_ATVALID Position 
.SS "#define TPI_FIFO0_ITM_ATVALID_Pos   29U"
TPI FIFO0: ITM_ATVALID Position 
.SS "#define TPI_FIFO0_ITM_ATVALID_Pos   29U"
TPI FIFO0: ITM_ATVALID Position 
.SS "#define TPI_FIFO0_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
TPI FIFO0: ITM_bytecount Mask 
.SS "#define TPI_FIFO0_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
TPI FIFO0: ITM_bytecount Mask 
.SS "#define TPI_FIFO0_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
TPI FIFO0: ITM_bytecount Mask 
.SS "#define TPI_FIFO0_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
TPI FIFO0: ITM_bytecount Mask 
.SS "#define TPI_FIFO0_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO0_ITM_bytecount_Pos\fP)"
TPI FIFO0: ITM_bytecount Mask 
.SS "#define TPI_FIFO0_ITM_bytecount_Pos   27U"
TPI FIFO0: ITM_bytecount Position 
.SS "#define TPI_FIFO0_ITM_bytecount_Pos   27U"
TPI FIFO0: ITM_bytecount Position 
.SS "#define TPI_FIFO0_ITM_bytecount_Pos   27U"
TPI FIFO0: ITM_bytecount Position 
.SS "#define TPI_FIFO0_ITM_bytecount_Pos   27U"
TPI FIFO0: ITM_bytecount Position 
.SS "#define TPI_FIFO0_ITM_bytecount_Pos   27U"
TPI FIFO0: ITM_bytecount Position 
.SS "#define TPI_FIFO1_ETM_ATVALID_Msk   (0x3UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
TPI FIFO1: ETM_ATVALID Mask 
.SS "#define TPI_FIFO1_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
TPI FIFO1: ETM_ATVALID Mask 
.SS "#define TPI_FIFO1_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
TPI FIFO1: ETM_ATVALID Mask 
.SS "#define TPI_FIFO1_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
TPI FIFO1: ETM_ATVALID Mask 
.SS "#define TPI_FIFO1_ETM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ETM_ATVALID_Pos\fP)"
TPI FIFO1: ETM_ATVALID Mask 
.SS "#define TPI_FIFO1_ETM_ATVALID_Pos   26U"
TPI FIFO1: ETM_ATVALID Position 
.SS "#define TPI_FIFO1_ETM_ATVALID_Pos   26U"
TPI FIFO1: ETM_ATVALID Position 
.SS "#define TPI_FIFO1_ETM_ATVALID_Pos   26U"
TPI FIFO1: ETM_ATVALID Position 
.SS "#define TPI_FIFO1_ETM_ATVALID_Pos   26U"
TPI FIFO1: ETM_ATVALID Position 
.SS "#define TPI_FIFO1_ETM_ATVALID_Pos   26U"
TPI FIFO1: ETM_ATVALID Position 
.SS "#define TPI_FIFO1_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
TPI FIFO1: ETM_bytecount Mask 
.SS "#define TPI_FIFO1_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
TPI FIFO1: ETM_bytecount Mask 
.SS "#define TPI_FIFO1_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
TPI FIFO1: ETM_bytecount Mask 
.SS "#define TPI_FIFO1_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
TPI FIFO1: ETM_bytecount Mask 
.SS "#define TPI_FIFO1_ETM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ETM_bytecount_Pos\fP)"
TPI FIFO1: ETM_bytecount Mask 
.SS "#define TPI_FIFO1_ETM_bytecount_Pos   24U"
TPI FIFO1: ETM_bytecount Position 
.SS "#define TPI_FIFO1_ETM_bytecount_Pos   24U"
TPI FIFO1: ETM_bytecount Position 
.SS "#define TPI_FIFO1_ETM_bytecount_Pos   24U"
TPI FIFO1: ETM_bytecount Position 
.SS "#define TPI_FIFO1_ETM_bytecount_Pos   24U"
TPI FIFO1: ETM_bytecount Position 
.SS "#define TPI_FIFO1_ETM_bytecount_Pos   24U"
TPI FIFO1: ETM_bytecount Position 
.SS "#define TPI_FIFO1_ITM0_Msk   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
TPI FIFO1: ITM0 Mask 
.SS "#define TPI_FIFO1_ITM0_Msk   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
TPI FIFO1: ITM0 Mask 
.SS "#define TPI_FIFO1_ITM0_Msk   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
TPI FIFO1: ITM0 Mask 
.SS "#define TPI_FIFO1_ITM0_Msk   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
TPI FIFO1: ITM0 Mask 
.SS "#define TPI_FIFO1_ITM0_Msk   (0xFFUL /*<< \fBTPI_FIFO1_ITM0_Pos\fP*/)"
TPI FIFO1: ITM0 Mask 
.SS "#define TPI_FIFO1_ITM0_Pos   0U"
TPI FIFO1: ITM0 Position 
.SS "#define TPI_FIFO1_ITM0_Pos   0U"
TPI FIFO1: ITM0 Position 
.SS "#define TPI_FIFO1_ITM0_Pos   0U"
TPI FIFO1: ITM0 Position 
.SS "#define TPI_FIFO1_ITM0_Pos   0U"
TPI FIFO1: ITM0 Position 
.SS "#define TPI_FIFO1_ITM0_Pos   0U"
TPI FIFO1: ITM0 Position 
.SS "#define TPI_FIFO1_ITM1_Msk   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
TPI FIFO1: ITM1 Mask 
.SS "#define TPI_FIFO1_ITM1_Msk   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
TPI FIFO1: ITM1 Mask 
.SS "#define TPI_FIFO1_ITM1_Msk   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
TPI FIFO1: ITM1 Mask 
.SS "#define TPI_FIFO1_ITM1_Msk   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
TPI FIFO1: ITM1 Mask 
.SS "#define TPI_FIFO1_ITM1_Msk   (0xFFUL << \fBTPI_FIFO1_ITM1_Pos\fP)"
TPI FIFO1: ITM1 Mask 
.SS "#define TPI_FIFO1_ITM1_Pos   8U"
TPI FIFO1: ITM1 Position 
.SS "#define TPI_FIFO1_ITM1_Pos   8U"
TPI FIFO1: ITM1 Position 
.SS "#define TPI_FIFO1_ITM1_Pos   8U"
TPI FIFO1: ITM1 Position 
.SS "#define TPI_FIFO1_ITM1_Pos   8U"
TPI FIFO1: ITM1 Position 
.SS "#define TPI_FIFO1_ITM1_Pos   8U"
TPI FIFO1: ITM1 Position 
.SS "#define TPI_FIFO1_ITM2_Msk   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
TPI FIFO1: ITM2 Mask 
.SS "#define TPI_FIFO1_ITM2_Msk   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
TPI FIFO1: ITM2 Mask 
.SS "#define TPI_FIFO1_ITM2_Msk   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
TPI FIFO1: ITM2 Mask 
.SS "#define TPI_FIFO1_ITM2_Msk   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
TPI FIFO1: ITM2 Mask 
.SS "#define TPI_FIFO1_ITM2_Msk   (0xFFUL << \fBTPI_FIFO1_ITM2_Pos\fP)"
TPI FIFO1: ITM2 Mask 
.SS "#define TPI_FIFO1_ITM2_Pos   16U"
TPI FIFO1: ITM2 Position 
.SS "#define TPI_FIFO1_ITM2_Pos   16U"
TPI FIFO1: ITM2 Position 
.SS "#define TPI_FIFO1_ITM2_Pos   16U"
TPI FIFO1: ITM2 Position 
.SS "#define TPI_FIFO1_ITM2_Pos   16U"
TPI FIFO1: ITM2 Position 
.SS "#define TPI_FIFO1_ITM2_Pos   16U"
TPI FIFO1: ITM2 Position 
.SS "#define TPI_FIFO1_ITM_ATVALID_Msk   (0x3UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
TPI FIFO1: ITM_ATVALID Mask 
.SS "#define TPI_FIFO1_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
TPI FIFO1: ITM_ATVALID Mask 
.SS "#define TPI_FIFO1_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
TPI FIFO1: ITM_ATVALID Mask 
.SS "#define TPI_FIFO1_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
TPI FIFO1: ITM_ATVALID Mask 
.SS "#define TPI_FIFO1_ITM_ATVALID_Msk   (0x1UL << \fBTPI_FIFO1_ITM_ATVALID_Pos\fP)"
TPI FIFO1: ITM_ATVALID Mask 
.SS "#define TPI_FIFO1_ITM_ATVALID_Pos   29U"
TPI FIFO1: ITM_ATVALID Position 
.SS "#define TPI_FIFO1_ITM_ATVALID_Pos   29U"
TPI FIFO1: ITM_ATVALID Position 
.SS "#define TPI_FIFO1_ITM_ATVALID_Pos   29U"
TPI FIFO1: ITM_ATVALID Position 
.SS "#define TPI_FIFO1_ITM_ATVALID_Pos   29U"
TPI FIFO1: ITM_ATVALID Position 
.SS "#define TPI_FIFO1_ITM_ATVALID_Pos   29U"
TPI FIFO1: ITM_ATVALID Position 
.SS "#define TPI_FIFO1_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
TPI FIFO1: ITM_bytecount Mask 
.SS "#define TPI_FIFO1_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
TPI FIFO1: ITM_bytecount Mask 
.SS "#define TPI_FIFO1_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
TPI FIFO1: ITM_bytecount Mask 
.SS "#define TPI_FIFO1_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
TPI FIFO1: ITM_bytecount Mask 
.SS "#define TPI_FIFO1_ITM_bytecount_Msk   (0x3UL << \fBTPI_FIFO1_ITM_bytecount_Pos\fP)"
TPI FIFO1: ITM_bytecount Mask 
.SS "#define TPI_FIFO1_ITM_bytecount_Pos   27U"
TPI FIFO1: ITM_bytecount Position 
.SS "#define TPI_FIFO1_ITM_bytecount_Pos   27U"
TPI FIFO1: ITM_bytecount Position 
.SS "#define TPI_FIFO1_ITM_bytecount_Pos   27U"
TPI FIFO1: ITM_bytecount Position 
.SS "#define TPI_FIFO1_ITM_bytecount_Pos   27U"
TPI FIFO1: ITM_bytecount Position 
.SS "#define TPI_FIFO1_ITM_bytecount_Pos   27U"
TPI FIFO1: ITM_bytecount Position 
.SS "#define TPI_ITATBCTR0_AFVALID1S_Msk   (0x1UL << \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP)"
TPI ITATBCTR0: AFVALID1SS Mask 
.SS "#define TPI_ITATBCTR0_AFVALID1S_Msk   (0x1UL << \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP)"
TPI ITATBCTR0: AFVALID1SS Mask 
.SS "#define TPI_ITATBCTR0_AFVALID1S_Msk   (0x1UL << \fBTPI_ITATBCTR0_AFVALID1S_Pos\fP)"
TPI ITATBCTR0: AFVALID1SS Mask 
.SS "#define TPI_ITATBCTR0_AFVALID1S_Pos   1U"
TPI ITATBCTR0: AFVALID1S Position 
.SS "#define TPI_ITATBCTR0_AFVALID1S_Pos   1U"
TPI ITATBCTR0: AFVALID1S Position 
.SS "#define TPI_ITATBCTR0_AFVALID1S_Pos   1U"
TPI ITATBCTR0: AFVALID1S Position 
.SS "#define TPI_ITATBCTR0_AFVALID2S_Msk   (0x1UL << \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP)"
TPI ITATBCTR0: AFVALID2SS Mask 
.SS "#define TPI_ITATBCTR0_AFVALID2S_Msk   (0x1UL << \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP)"
TPI ITATBCTR0: AFVALID2SS Mask 
.SS "#define TPI_ITATBCTR0_AFVALID2S_Msk   (0x1UL << \fBTPI_ITATBCTR0_AFVALID2S_Pos\fP)"
TPI ITATBCTR0: AFVALID2SS Mask 
.SS "#define TPI_ITATBCTR0_AFVALID2S_Pos   1U"
TPI ITATBCTR0: AFVALID2S Position 
.SS "#define TPI_ITATBCTR0_AFVALID2S_Pos   1U"
TPI ITATBCTR0: AFVALID2S Position 
.SS "#define TPI_ITATBCTR0_AFVALID2S_Pos   1U"
TPI ITATBCTR0: AFVALID2S Position 
.SS "#define TPI_ITATBCTR0_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
TPI ITATBCTR0: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
TPI ITATBCTR0: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
TPI ITATBCTR0: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1_Pos\fP*/)"
TPI ITATBCTR0: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY1_Pos   0U"
TPI ITATBCTR0: ATREADY1 Position 
.SS "#define TPI_ITATBCTR0_ATREADY1_Pos   0U"
TPI ITATBCTR0: ATREADY1 Position 
.SS "#define TPI_ITATBCTR0_ATREADY1_Pos   0U"
TPI ITATBCTR0: ATREADY1 Position 
.SS "#define TPI_ITATBCTR0_ATREADY1_Pos   0U"
TPI ITATBCTR0: ATREADY1 Position 
.SS "#define TPI_ITATBCTR0_ATREADY1S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP*/)"
TPI ITATBCTR0: ATREADY1S Mask 
.SS "#define TPI_ITATBCTR0_ATREADY1S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP*/)"
TPI ITATBCTR0: ATREADY1S Mask 
.SS "#define TPI_ITATBCTR0_ATREADY1S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY1S_Pos\fP*/)"
TPI ITATBCTR0: ATREADY1S Mask 
.SS "#define TPI_ITATBCTR0_ATREADY1S_Pos   0U"
TPI ITATBCTR0: ATREADY1S Position 
.SS "#define TPI_ITATBCTR0_ATREADY1S_Pos   0U"
TPI ITATBCTR0: ATREADY1S Position 
.SS "#define TPI_ITATBCTR0_ATREADY1S_Pos   0U"
TPI ITATBCTR0: ATREADY1S Position 
.SS "#define TPI_ITATBCTR0_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
TPI ITATBCTR0: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
TPI ITATBCTR0: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
TPI ITATBCTR0: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2_Pos\fP*/)"
TPI ITATBCTR0: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR0_ATREADY2_Pos   0U"
TPI ITATBCTR0: ATREADY2 Position 
.SS "#define TPI_ITATBCTR0_ATREADY2_Pos   0U"
TPI ITATBCTR0: ATREADY2 Position 
.SS "#define TPI_ITATBCTR0_ATREADY2_Pos   0U"
TPI ITATBCTR0: ATREADY2 Position 
.SS "#define TPI_ITATBCTR0_ATREADY2_Pos   0U"
TPI ITATBCTR0: ATREADY2 Position 
.SS "#define TPI_ITATBCTR0_ATREADY2S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP*/)"
TPI ITATBCTR0: ATREADY2S Mask 
.SS "#define TPI_ITATBCTR0_ATREADY2S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP*/)"
TPI ITATBCTR0: ATREADY2S Mask 
.SS "#define TPI_ITATBCTR0_ATREADY2S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR0_ATREADY2S_Pos\fP*/)"
TPI ITATBCTR0: ATREADY2S Mask 
.SS "#define TPI_ITATBCTR0_ATREADY2S_Pos   0U"
TPI ITATBCTR0: ATREADY2S Position 
.SS "#define TPI_ITATBCTR0_ATREADY2S_Pos   0U"
TPI ITATBCTR0: ATREADY2S Position 
.SS "#define TPI_ITATBCTR0_ATREADY2S_Pos   0U"
TPI ITATBCTR0: ATREADY2S Position 
.SS "#define TPI_ITATBCTR2_AFVALID1S_Msk   (0x1UL << \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP)"
TPI ITATBCTR2: AFVALID1SS Mask 
.SS "#define TPI_ITATBCTR2_AFVALID1S_Msk   (0x1UL << \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP)"
TPI ITATBCTR2: AFVALID1SS Mask 
.SS "#define TPI_ITATBCTR2_AFVALID1S_Msk   (0x1UL << \fBTPI_ITATBCTR2_AFVALID1S_Pos\fP)"
TPI ITATBCTR2: AFVALID1SS Mask 
.SS "#define TPI_ITATBCTR2_AFVALID1S_Pos   1U"
TPI ITATBCTR2: AFVALID1S Position 
.SS "#define TPI_ITATBCTR2_AFVALID1S_Pos   1U"
TPI ITATBCTR2: AFVALID1S Position 
.SS "#define TPI_ITATBCTR2_AFVALID1S_Pos   1U"
TPI ITATBCTR2: AFVALID1S Position 
.SS "#define TPI_ITATBCTR2_AFVALID2S_Msk   (0x1UL << \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP)"
TPI ITATBCTR2: AFVALID2SS Mask 
.SS "#define TPI_ITATBCTR2_AFVALID2S_Msk   (0x1UL << \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP)"
TPI ITATBCTR2: AFVALID2SS Mask 
.SS "#define TPI_ITATBCTR2_AFVALID2S_Msk   (0x1UL << \fBTPI_ITATBCTR2_AFVALID2S_Pos\fP)"
TPI ITATBCTR2: AFVALID2SS Mask 
.SS "#define TPI_ITATBCTR2_AFVALID2S_Pos   1U"
TPI ITATBCTR2: AFVALID2S Position 
.SS "#define TPI_ITATBCTR2_AFVALID2S_Pos   1U"
TPI ITATBCTR2: AFVALID2S Position 
.SS "#define TPI_ITATBCTR2_AFVALID2S_Pos   1U"
TPI ITATBCTR2: AFVALID2S Position 
.SS "#define TPI_ITATBCTR2_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
TPI ITATBCTR2: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
TPI ITATBCTR2: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
TPI ITATBCTR2: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY1_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1_Pos\fP*/)"
TPI ITATBCTR2: ATREADY1 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY1_Pos   0U"
TPI ITATBCTR2: ATREADY1 Position 
.SS "#define TPI_ITATBCTR2_ATREADY1_Pos   0U"
TPI ITATBCTR2: ATREADY1 Position 
.SS "#define TPI_ITATBCTR2_ATREADY1_Pos   0U"
TPI ITATBCTR2: ATREADY1 Position 
.SS "#define TPI_ITATBCTR2_ATREADY1_Pos   0U"
TPI ITATBCTR2: ATREADY1 Position 
.SS "#define TPI_ITATBCTR2_ATREADY1S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP*/)"
TPI ITATBCTR2: ATREADY1S Mask 
.SS "#define TPI_ITATBCTR2_ATREADY1S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP*/)"
TPI ITATBCTR2: ATREADY1S Mask 
.SS "#define TPI_ITATBCTR2_ATREADY1S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY1S_Pos\fP*/)"
TPI ITATBCTR2: ATREADY1S Mask 
.SS "#define TPI_ITATBCTR2_ATREADY1S_Pos   0U"
TPI ITATBCTR2: ATREADY1S Position 
.SS "#define TPI_ITATBCTR2_ATREADY1S_Pos   0U"
TPI ITATBCTR2: ATREADY1S Position 
.SS "#define TPI_ITATBCTR2_ATREADY1S_Pos   0U"
TPI ITATBCTR2: ATREADY1S Position 
.SS "#define TPI_ITATBCTR2_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
TPI ITATBCTR2: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
TPI ITATBCTR2: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
TPI ITATBCTR2: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY2_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2_Pos\fP*/)"
TPI ITATBCTR2: ATREADY2 Mask 
.SS "#define TPI_ITATBCTR2_ATREADY2_Pos   0U"
TPI ITATBCTR2: ATREADY2 Position 
.SS "#define TPI_ITATBCTR2_ATREADY2_Pos   0U"
TPI ITATBCTR2: ATREADY2 Position 
.SS "#define TPI_ITATBCTR2_ATREADY2_Pos   0U"
TPI ITATBCTR2: ATREADY2 Position 
.SS "#define TPI_ITATBCTR2_ATREADY2_Pos   0U"
TPI ITATBCTR2: ATREADY2 Position 
.SS "#define TPI_ITATBCTR2_ATREADY2S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP*/)"
TPI ITATBCTR2: ATREADY2S Mask 
.SS "#define TPI_ITATBCTR2_ATREADY2S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP*/)"
TPI ITATBCTR2: ATREADY2S Mask 
.SS "#define TPI_ITATBCTR2_ATREADY2S_Msk   (0x1UL /*<< \fBTPI_ITATBCTR2_ATREADY2S_Pos\fP*/)"
TPI ITATBCTR2: ATREADY2S Mask 
.SS "#define TPI_ITATBCTR2_ATREADY2S_Pos   0U"
TPI ITATBCTR2: ATREADY2S Position 
.SS "#define TPI_ITATBCTR2_ATREADY2S_Pos   0U"
TPI ITATBCTR2: ATREADY2S Position 
.SS "#define TPI_ITATBCTR2_ATREADY2S_Pos   0U"
TPI ITATBCTR2: ATREADY2S Position 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x1UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Msk   (0x3UL /*<< \fBTPI_ITCTRL_Mode_Pos\fP*/)"
TPI ITCTRL: Mode Mask 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITCTRL_Mode_Pos   0U"
TPI ITCTRL: Mode Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 ATVALID Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 ATVALID Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_ATVALID_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 ATVALID Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_ATVALID_Pos   26U"
TPI ITFTTD0: ATB Interface 1 ATVALID Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_ATVALID_Pos   26U"
TPI ITFTTD0: ATB Interface 1 ATVALID Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_ATVALID_Pos   26U"
TPI ITFTTD0: ATB Interface 1 ATVALID Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 byte countt Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 byte countt Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF1_bytecount_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 byte countt Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_bytecount_Pos   24U"
TPI ITFTTD0: ATB Interface 1 byte count Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_bytecount_Pos   24U"
TPI ITFTTD0: ATB Interface 1 byte count Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_bytecount_Pos   24U"
TPI ITFTTD0: ATB Interface 1 byte count Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data0_Msk   (0xFFUL /*<< \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP*/)"
TPI ITFTTD0: ATB Interface 1 data0 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data0_Msk   (0xFFUL /*<< \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP*/)"
TPI ITFTTD0: ATB Interface 1 data0 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data0_Msk   (0xFFUL /*<< \fBTPI_ITFTTD0_ATB_IF1_data0_Pos\fP*/)"
TPI ITFTTD0: ATB Interface 1 data0 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data0_Pos   0U"
TPI ITFTTD0: ATB Interface 1 data0 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data0_Pos   0U"
TPI ITFTTD0: ATB Interface 1 data0 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data0_Pos   0U"
TPI ITFTTD0: ATB Interface 1 data0 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data1_Msk   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 data1 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data1_Msk   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 data1 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data1_Msk   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 data1 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data1_Pos   8U"
TPI ITFTTD0: ATB Interface 1 data1 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data1_Pos   8U"
TPI ITFTTD0: ATB Interface 1 data1 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data1_Pos   8U"
TPI ITFTTD0: ATB Interface 1 data1 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data2_Msk   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 data2 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data2_Msk   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 data2 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data2_Msk   (0xFFUL << \fBTPI_ITFTTD0_ATB_IF1_data1_Pos\fP)"
TPI ITFTTD0: ATB Interface 1 data2 Mask 
.SS "#define TPI_ITFTTD0_ATB_IF1_data2_Pos   16U"
TPI ITFTTD0: ATB Interface 1 data2 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data2_Pos   16U"
TPI ITFTTD0: ATB Interface 1 data2 Position 
.SS "#define TPI_ITFTTD0_ATB_IF1_data2_Pos   16U"
TPI ITFTTD0: ATB Interface 1 data2 Position 
.SS "#define TPI_ITFTTD0_ATB_IF2_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP)"
TPI ITFTTD0: ATB Interface 2 ATVALID Mask 
.SS "#define TPI_ITFTTD0_ATB_IF2_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP)"
TPI ITFTTD0: ATB Interface 2 ATVALID Mask 
.SS "#define TPI_ITFTTD0_ATB_IF2_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_ATVALID_Pos\fP)"
TPI ITFTTD0: ATB Interface 2 ATVALID Mask 
.SS "#define TPI_ITFTTD0_ATB_IF2_ATVALID_Pos   29U"
TPI ITFTTD0: ATB Interface 2 ATVALIDPosition 
.SS "#define TPI_ITFTTD0_ATB_IF2_ATVALID_Pos   29U"
TPI ITFTTD0: ATB Interface 2 ATVALIDPosition 
.SS "#define TPI_ITFTTD0_ATB_IF2_ATVALID_Pos   29U"
TPI ITFTTD0: ATB Interface 2 ATVALIDPosition 
.SS "#define TPI_ITFTTD0_ATB_IF2_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP)"
TPI ITFTTD0: ATB Interface 2 byte count Mask 
.SS "#define TPI_ITFTTD0_ATB_IF2_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP)"
TPI ITFTTD0: ATB Interface 2 byte count Mask 
.SS "#define TPI_ITFTTD0_ATB_IF2_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD0_ATB_IF2_bytecount_Pos\fP)"
TPI ITFTTD0: ATB Interface 2 byte count Mask 
.SS "#define TPI_ITFTTD0_ATB_IF2_bytecount_Pos   27U"
TPI ITFTTD0: ATB Interface 2 byte count Position 
.SS "#define TPI_ITFTTD0_ATB_IF2_bytecount_Pos   27U"
TPI ITFTTD0: ATB Interface 2 byte count Position 
.SS "#define TPI_ITFTTD0_ATB_IF2_bytecount_Pos   27U"
TPI ITFTTD0: ATB Interface 2 byte count Position 
.SS "#define TPI_ITFTTD1_ATB_IF1_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP)"
TPI ITFTTD1: ATB Interface 1 ATVALID Mask 
.SS "#define TPI_ITFTTD1_ATB_IF1_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP)"
TPI ITFTTD1: ATB Interface 1 ATVALID Mask 
.SS "#define TPI_ITFTTD1_ATB_IF1_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_ATVALID_Pos\fP)"
TPI ITFTTD1: ATB Interface 1 ATVALID Mask 
.SS "#define TPI_ITFTTD1_ATB_IF1_ATVALID_Pos   26U"
TPI ITFTTD1: ATB Interface 1 ATVALID Position 
.SS "#define TPI_ITFTTD1_ATB_IF1_ATVALID_Pos   26U"
TPI ITFTTD1: ATB Interface 1 ATVALID Position 
.SS "#define TPI_ITFTTD1_ATB_IF1_ATVALID_Pos   26U"
TPI ITFTTD1: ATB Interface 1 ATVALID Position 
.SS "#define TPI_ITFTTD1_ATB_IF1_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP)"
TPI ITFTTD1: ATB Interface 1 byte countt Mask 
.SS "#define TPI_ITFTTD1_ATB_IF1_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP)"
TPI ITFTTD1: ATB Interface 1 byte countt Mask 
.SS "#define TPI_ITFTTD1_ATB_IF1_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF1_bytecount_Pos\fP)"
TPI ITFTTD1: ATB Interface 1 byte countt Mask 
.SS "#define TPI_ITFTTD1_ATB_IF1_bytecount_Pos   24U"
TPI ITFTTD1: ATB Interface 1 byte count Position 
.SS "#define TPI_ITFTTD1_ATB_IF1_bytecount_Pos   24U"
TPI ITFTTD1: ATB Interface 1 byte count Position 
.SS "#define TPI_ITFTTD1_ATB_IF1_bytecount_Pos   24U"
TPI ITFTTD1: ATB Interface 1 byte count Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 ATVALID Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 ATVALID Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_ATVALID_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_ATVALID_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 ATVALID Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_ATVALID_Pos   29U"
TPI ITFTTD1: ATB Interface 2 ATVALID Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_ATVALID_Pos   29U"
TPI ITFTTD1: ATB Interface 2 ATVALID Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_ATVALID_Pos   29U"
TPI ITFTTD1: ATB Interface 2 ATVALID Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 byte count Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 byte count Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_bytecount_Msk   (0x3UL << \fBTPI_ITFTTD1_ATB_IF2_bytecount_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 byte count Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_bytecount_Pos   27U"
TPI ITFTTD1: ATB Interface 2 byte count Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_bytecount_Pos   27U"
TPI ITFTTD1: ATB Interface 2 byte count Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_bytecount_Pos   27U"
TPI ITFTTD1: ATB Interface 2 byte count Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data0_Msk   (0xFFUL /*<< \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP*/)"
TPI ITFTTD1: ATB Interface 2 data0 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data0_Msk   (0xFFUL /*<< \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP*/)"
TPI ITFTTD1: ATB Interface 2 data0 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data0_Msk   (0xFFUL /*<< \fBTPI_ITFTTD1_ATB_IF2_data0_Pos\fP*/)"
TPI ITFTTD1: ATB Interface 2 data0 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data0_Pos   0U"
TPI ITFTTD1: ATB Interface 2 data0 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data0_Pos   0U"
TPI ITFTTD1: ATB Interface 2 data0 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data0_Pos   0U"
TPI ITFTTD1: ATB Interface 2 data0 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data1_Msk   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 data1 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data1_Msk   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 data1 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data1_Msk   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 data1 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data1_Pos   8U"
TPI ITFTTD1: ATB Interface 2 data1 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data1_Pos   8U"
TPI ITFTTD1: ATB Interface 2 data1 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data1_Pos   8U"
TPI ITFTTD1: ATB Interface 2 data1 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data2_Msk   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 data2 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data2_Msk   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 data2 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data2_Msk   (0xFFUL << \fBTPI_ITFTTD1_ATB_IF2_data1_Pos\fP)"
TPI ITFTTD1: ATB Interface 2 data2 Mask 
.SS "#define TPI_ITFTTD1_ATB_IF2_data2_Pos   16U"
TPI ITFTTD1: ATB Interface 2 data2 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data2_Pos   16U"
TPI ITFTTD1: ATB Interface 2 data2 Position 
.SS "#define TPI_ITFTTD1_ATB_IF2_data2_Pos   16U"
TPI ITFTTD1: ATB Interface 2 data2 Position 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Msk   (0x3UL /*<< \fBTPI_SPPR_TXMODE_Pos\fP*/)"
TPI SPPR: TXMODE Mask 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_SPPR_TXMODE_Pos   0U"
TPI SPPR: TXMODE Position 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Msk   (0x1UL /*<< \fBTPI_TRIGGER_TRIGGER_Pos\fP*/)"
TPI TRIGGER: TRIGGER Mask 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define TPI_TRIGGER_TRIGGER_Pos   0U"
TPI TRIGGER: TRIGGER Position 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Msk   (1UL << \fBxPSR_C_Pos\fP)"
xPSR: C Mask 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_C_Pos   29U"
xPSR: C Position 
.SS "#define xPSR_GE_Msk   (0xFUL << \fBxPSR_GE_Pos\fP)"
xPSR: GE Mask 
.SS "#define xPSR_GE_Msk   (0xFUL << \fBxPSR_GE_Pos\fP)"
xPSR: GE Mask 
.SS "#define xPSR_GE_Msk   (0xFUL << \fBxPSR_GE_Pos\fP)"
xPSR: GE Mask 
.SS "#define xPSR_GE_Msk   (0xFUL << \fBxPSR_GE_Pos\fP)"
xPSR: GE Mask 
.SS "#define xPSR_GE_Msk   (0xFUL << \fBxPSR_GE_Pos\fP)"
xPSR: GE Mask 
.SS "#define xPSR_GE_Msk   (0xFUL << \fBxPSR_GE_Pos\fP)"
xPSR: GE Mask 
.SS "#define xPSR_GE_Pos   16U"
xPSR: GE Position 
.SS "#define xPSR_GE_Pos   16U"
xPSR: GE Position 
.SS "#define xPSR_GE_Pos   16U"
xPSR: GE Position 
.SS "#define xPSR_GE_Pos   16U"
xPSR: GE Position 
.SS "#define xPSR_GE_Pos   16U"
xPSR: GE Position 
.SS "#define xPSR_GE_Pos   16U"
xPSR: GE Position 
.SS "#define xPSR_ICI_IT_1_Msk   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
xPSR: ICI/IT part 1 Mask 
.SS "#define xPSR_ICI_IT_1_Msk   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
xPSR: ICI/IT part 1 Mask 
.SS "#define xPSR_ICI_IT_1_Msk   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
xPSR: ICI/IT part 1 Mask 
.SS "#define xPSR_ICI_IT_1_Msk   (0x3FUL << \fBxPSR_ICI_IT_1_Pos\fP)"
xPSR: ICI/IT part 1 Mask 
.SS "#define xPSR_ICI_IT_1_Pos   10U"
xPSR: ICI/IT part 1 Position 
.SS "#define xPSR_ICI_IT_1_Pos   10U"
xPSR: ICI/IT part 1 Position 
.SS "#define xPSR_ICI_IT_1_Pos   10U"
xPSR: ICI/IT part 1 Position 
.SS "#define xPSR_ICI_IT_1_Pos   10U"
xPSR: ICI/IT part 1 Position 
.SS "#define xPSR_ICI_IT_2_Msk   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
xPSR: ICI/IT part 2 Mask 
.SS "#define xPSR_ICI_IT_2_Msk   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
xPSR: ICI/IT part 2 Mask 
.SS "#define xPSR_ICI_IT_2_Msk   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
xPSR: ICI/IT part 2 Mask 
.SS "#define xPSR_ICI_IT_2_Msk   (3UL << \fBxPSR_ICI_IT_2_Pos\fP)"
xPSR: ICI/IT part 2 Mask 
.SS "#define xPSR_ICI_IT_2_Pos   25U"
xPSR: ICI/IT part 2 Position 
.SS "#define xPSR_ICI_IT_2_Pos   25U"
xPSR: ICI/IT part 2 Position 
.SS "#define xPSR_ICI_IT_2_Pos   25U"
xPSR: ICI/IT part 2 Position 
.SS "#define xPSR_ICI_IT_2_Pos   25U"
xPSR: ICI/IT part 2 Position 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Msk   (0x1FFUL /*<< \fBxPSR_ISR_Pos\fP*/)"
xPSR: ISR Mask 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_ISR_Pos   0U"
xPSR: ISR Position 
.SS "#define xPSR_IT_Msk   (3UL << \fBxPSR_IT_Pos\fP)"
xPSR: IT Mask 
.SS "#define xPSR_IT_Msk   (3UL << \fBxPSR_IT_Pos\fP)"
xPSR: IT Mask 
.SS "#define xPSR_IT_Msk   (3UL << \fBxPSR_IT_Pos\fP)"
xPSR: IT Mask 
.SS "#define xPSR_IT_Msk   (3UL << \fBxPSR_IT_Pos\fP)"
xPSR: IT Mask 
.SS "#define xPSR_IT_Pos   25U"
xPSR: IT Position 
.SS "#define xPSR_IT_Pos   25U"
xPSR: IT Position 
.SS "#define xPSR_IT_Pos   25U"
xPSR: IT Position 
.SS "#define xPSR_IT_Pos   25U"
xPSR: IT Position 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Msk   (1UL << \fBxPSR_N_Pos\fP)"
xPSR: N Mask 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_N_Pos   31U"
xPSR: N Position 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Msk   (1UL << \fBxPSR_Q_Pos\fP)"
xPSR: Q Mask 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_Q_Pos   27U"
xPSR: Q Position 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Msk   (1UL << \fBxPSR_T_Pos\fP)"
xPSR: T Mask 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_T_Pos   24U"
xPSR: T Position 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Msk   (1UL << \fBxPSR_V_Pos\fP)"
xPSR: V Mask 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_V_Pos   28U"
xPSR: V Position 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Msk   (1UL << \fBxPSR_Z_Pos\fP)"
xPSR: Z Mask 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SS "#define xPSR_Z_Pos   30U"
xPSR: Z Position 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

.TH "CMSIS_core_DebugFunctions" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CMSIS_core_DebugFunctions \- ITM Functions
.PP
 \- Functions that access the ITM debug interface\&.  

.SH SYNOPSIS
.br
.PP
.SS "Variables"

.in +1c
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::w\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::w\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::w\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::w\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBNVIC_Type::ISER\fP [16U]"
.br
.ti -1c
.RI "uint32_t \fBNVIC_Type::RESERVED0\fP [16U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBNVIC_Type::ICER\fP [16U]"
.br
.ti -1c
.RI "uint32_t \fBNVIC_Type::RSERVED1\fP [16U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBNVIC_Type::ISPR\fP [16U]"
.br
.ti -1c
.RI "uint32_t \fBNVIC_Type::RESERVED2\fP [16U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBNVIC_Type::ICPR\fP [16U]"
.br
.ti -1c
.RI "uint32_t \fBNVIC_Type::RESERVED3\fP [16U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBNVIC_Type::IABR\fP [16U]"
.br
.ti -1c
.RI "uint32_t \fBNVIC_Type::RESERVED4\fP [16U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBNVIC_Type::ITNS\fP [16U]"
.br
.ti -1c
.RI "uint32_t \fBNVIC_Type::RESERVED5\fP [16U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint8_t \fBNVIC_Type::IPR\fP [496U]"
.br
.ti -1c
.RI "uint32_t \fBNVIC_Type::RESERVED6\fP [580U]"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBNVIC_Type::STIR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::CPUID\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::ICSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::VTOR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::AIRCR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::SCR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::CCR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint8_t \fBSCB_Type::SHPR\fP [12U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::SHCSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::CFSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::HFSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::DFSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::MMFAR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::BFAR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::AFSR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ID_PFR\fP [2U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ID_DFR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ID_ADR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ID_MMFR\fP [4U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ID_ISAR\fP [6U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::CLIDR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::CTR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::CCSIDR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::CSSELR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::CPACR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::NSACR\fP"
.br
.ti -1c
.RI "uint32_t \fBSCB_Type::RESERVED3\fP [92U]"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::STIR\fP"
.br
.ti -1c
.RI "uint32_t \fBSCB_Type::RESERVED4\fP [15U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::MVFR0\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::MVFR1\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::MVFR2\fP"
.br
.ti -1c
.RI "uint32_t \fBSCB_Type::RESERVED5\fP [1U]"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::ICIALLU\fP"
.br
.ti -1c
.RI "uint32_t \fBSCB_Type::RESERVED6\fP [1U]"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::ICIMVAU\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::DCIMVAC\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::DCISW\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::DCCMVAU\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::DCCMVAC\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::DCCSW\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::DCCIMVAC\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBSCB_Type::DCCISW\fP"
.br
.ti -1c
.RI "uint32_t \fBSCB_Type::RESERVED7\fP [6U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::ITCMCR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::DTCMCR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::AHBPCR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::CACR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::AHBSCR\fP"
.br
.ti -1c
.RI "uint32_t \fBSCB_Type::RESERVED8\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCB_Type::ABFSR\fP"
.br
.ti -1c
.RI "uint32_t \fBSCnSCB_Type::RESERVED0\fP [1U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCnSCB_Type::ICTR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCnSCB_Type::ACTLR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSCnSCB_Type::CPPWR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSysTick_Type::CTRL\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSysTick_Type::LOAD\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBSysTick_Type::VAL\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSysTick_Type::CALIB\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.ti -1c
.RI "uint32_t \fBITM_Type::RESERVED0\fP [864U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBITM_Type::TER\fP"
.br
.ti -1c
.RI "uint32_t \fBITM_Type::RESERVED1\fP [15U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBITM_Type::TPR\fP"
.br
.ti -1c
.RI "uint32_t \fBITM_Type::RESERVED2\fP [15U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBITM_Type::TCR\fP"
.br
.ti -1c
.RI "uint32_t \fBITM_Type::RESERVED3\fP [29U]"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::IWR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::IRR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBITM_Type::IMCR\fP"
.br
.ti -1c
.RI "uint32_t \fBITM_Type::RESERVED4\fP [43U]"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::LAR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::LSR\fP"
.br
.ti -1c
.RI "uint32_t \fBITM_Type::RESERVED5\fP [1U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::DEVARCH\fP"
.br
.ti -1c
.RI "uint32_t \fBITM_Type::RESERVED6\fP [4U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID4\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID5\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID6\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID7\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID0\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID1\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID2\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::PID3\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::CID0\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::CID1\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::CID2\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBITM_Type::CID3\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::CTRL\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::CYCCNT\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::CPICNT\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::EXCCNT\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::SLEEPCNT\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::LSUCNT\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FOLDCNT\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBDWT_Type::PCSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP0\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED1\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION0\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED2\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP1\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED3\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION1\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED4\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP2\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED5\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION2\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED6\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP3\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED7\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION3\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED8\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP4\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED9\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION4\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED10\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP5\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED11\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION5\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED12\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP6\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED13\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION6\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED14\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP7\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED15\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION7\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED16\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP8\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED17\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION8\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED18\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP9\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED19\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION9\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED20\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP10\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED21\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION10\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED22\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP11\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED23\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION11\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED24\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP12\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED25\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION12\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED26\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP13\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED27\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION13\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED28\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP14\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED29\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION14\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED30\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::COMP15\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED31\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::FUNCTION15\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED32\fP [934U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBDWT_Type::LSR\fP"
.br
.ti -1c
.RI "uint32_t \fBDWT_Type::RESERVED33\fP [1U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBDWT_Type::DEVARCH\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::SSPSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBTPI_Type::CSPSR\fP"
.br
.ti -1c
.RI "uint32_t \fBTPI_Type::RESERVED0\fP [2U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBTPI_Type::ACPR\fP"
.br
.ti -1c
.RI "uint32_t \fBTPI_Type::RESERVED1\fP [55U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBTPI_Type::SPPR\fP"
.br
.ti -1c
.RI "uint32_t \fBTPI_Type::RESERVED2\fP [131U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::FFSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBTPI_Type::FFCR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::FSCR\fP"
.br
.ti -1c
.RI "uint32_t \fBTPI_Type::RESERVED3\fP [759U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::TRIGGER\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::FIFO0\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::ITATBCTR2\fP"
.br
.ti -1c
.RI "uint32_t \fBTPI_Type::RESERVED4\fP [1U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::ITATBCTR0\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::FIFO1\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBTPI_Type::ITCTRL\fP"
.br
.ti -1c
.RI "uint32_t \fBTPI_Type::RESERVED5\fP [39U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBTPI_Type::CLAIMSET\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBTPI_Type::CLAIMCLR\fP"
.br
.ti -1c
.RI "uint32_t \fBTPI_Type::RESERVED7\fP [8U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::DEVID\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBTPI_Type::DEVTYPE\fP"
.br
.ti -1c
.RI "uint32_t \fBFPU_Type::RESERVED0\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBFPU_Type::FPCCR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBFPU_Type::FPCAR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBFPU_Type::FPDSCR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBFPU_Type::MVFR0\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBFPU_Type::MVFR1\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBCoreDebug_Type::DHCSR\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBCoreDebug_Type::DCRSR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBCoreDebug_Type::DCRDR\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBCoreDebug_Type::DEMCR\fP"
.br
.ti -1c
.RI "uint32_t \fBCoreDebug_Type::RESERVED4\fP [1U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBCoreDebug_Type::DAUTHCTRL\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBCoreDebug_Type::DSCSR\fP"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:27"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:27"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:8"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:8"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved1\fP:30"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved1\fP:30"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint8_t \fBNVIC_Type::IP\fP [240U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint8_t \fBSCB_Type::SHP\fP [12U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::PFR\fP [2U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::DFR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ADR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::MMFR\fP [4U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ISAR\fP [5U]"
.br
.ti -1c
.RI "uint32_t \fBSCnSCB_Type::RESERVED1\fP [1U]"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::MASK0\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::MASK1\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::MASK2\fP"
.br
.ti -1c
.RI "\fB__IOM\fP uint32_t \fBDWT_Type::MASK3\fP"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::IT\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SFPA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved1\fP:28"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved0\fP:29"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved0\fP:29"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBFPU_Type::MVFR2\fP"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:16"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved1\fP:7"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::GE\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:4"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved0\fP:29"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::FPCA\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved0\fP:29"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ID_AFR\fP"
.br
.ti -1c
.RI "\fB__IM\fP uint32_t \fBSCB_Type::ID_MFR\fP [4U]"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBDWT_Type::LAR\fP"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::_reserved0\fP:27"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::_reserved0\fP:27"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBAPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBAPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBIPSR_Type::_reserved0\fP:23"
.br
.ti -1c
.RI "} \fBIPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::_reserved1\fP:8"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ISR\fP:9"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved0\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_1\fP:6"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::_reserved1\fP:8"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::T\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::ICI_IT_2\fP:2"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Q\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::V\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::C\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::Z\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBxPSR_Type::N\fP:1"
.br
.ti -1c
.RI "} \fBxPSR_Type::b\fP"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "uint32_t \fBCONTROL_Type::_reserved1\fP:30"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::nPRIV\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::SPSEL\fP:1"
.br
.ti -1c
.RI "   uint32_t \fBCONTROL_Type::_reserved1\fP:30"
.br
.ti -1c
.RI "} \fBCONTROL_Type::b\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "\fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__OM\fP uint8_t \fBITM_Type::u8\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint16_t \fBITM_Type::u16\fP"
.br
.ti -1c
.RI "   \fB__OM\fP uint32_t \fBITM_Type::u32\fP"
.br
.ti -1c
.RI "} \fBITM_Type::PORT\fP [32U]"
.br
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fBITM_SendChar\fP (uint32_t ch)"
.br
.RI "ITM Send Character\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP int32_t \fBITM_ReceiveChar\fP (void)"
.br
.RI "ITM Receive Character\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP int32_t \fBITM_CheckChar\fP (void)"
.br
.RI "ITM Check Character\&. "
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.in -1c
.in +1c
.ti -1c
.RI "volatile int32_t \fBITM_RxBuffer\fP"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.ti -1c
.RI "#define \fBITM_RXBUFFER_EMPTY\fP   ((int32_t)0x5AA55AA5U)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Functions that access the ITM debug interface\&. 


.SH "Macro Definition Documentation"
.PP 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SS "#define ITM_RXBUFFER_EMPTY   ((int32_t)0x5AA55AA5U)"
Value identifying \fBITM_RxBuffer\fP is ready for next character\&. 
.SH "Function Documentation"
.PP 
.SS "\fB__STATIC_INLINE\fP int32_t ITM_CheckChar (void)"

.PP
ITM Check Character\&. Checks whether a character is pending for reading in the variable \fBITM_RxBuffer\fP\&. 
.PP
\fBReturns\fP
.RS 4
0 No character available\&. 
.PP
1 Character available\&. 
.RE
.PP

.SS "\fB__STATIC_INLINE\fP int32_t ITM_ReceiveChar (void)"

.PP
ITM Receive Character\&. Inputs a character via the external variable \fBITM_RxBuffer\fP\&. 
.PP
\fBReturns\fP
.RS 4
Received character\&. 
.PP
-1 No character pending\&. 
.RE
.PP

.SS "\fB__STATIC_INLINE\fP uint32_t ITM_SendChar (uint32_t ch)"

.PP
ITM Send Character\&. Transmits a character via the ITM channel 0, and 
.PD 0
.IP "\(bu" 1
Just returns when no debugger is connected that has booked the output\&. 
.IP "\(bu" 1
Is blocking when a debugger is connected, but the previous character sent has not been transmitted\&. 
.PP
\fBParameters\fP
.RS 4
\fIch\fP Character to transmit\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Character to transmit\&. 
.RE
.PP

.PP

.SH "Variable Documentation"
.PP 
.SS "uint32_t APSR_Type::_reserved0"
bit: 0\&.\&.15 Reserved
.PP
bit: 0\&.\&.27 Reserved
.PP
bit: 0\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t IPSR_Type::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t xPSR_Type::_reserved0"
bit: 9\&.\&.15 Reserved
.PP
bit: 9\&.\&.23 Reserved
.PP
bit: 9 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 3\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.15 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 3\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 0\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved0"
bit: 9 Reserved 
.SS "uint32_t APSR_Type::_reserved1"
bit: 20\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.26 Reserved 
.SS "uint32_t xPSR_Type::_reserved1"
bit: 20\&.\&.23 Reserved
.PP
bit: 25\&.\&.27 Reserved
.PP
bit: 16\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.23 Reserved 
.SS "uint32_t CONTROL_Type::_reserved1"
bit: 4\&.\&.31 Reserved
.PP
bit: 2\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 4\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 4\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 16\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 2\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 4\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 4\&.\&.31 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.26 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 20\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 16\&.\&.23 Reserved 
.SS "uint32_t  { \&.\&.\&. } ::_reserved1"
bit: 2\&.\&.31 Reserved 
.SS "\fB__IOM\fP uint32_t SCB_Type::ABFSR"
Offset: 0x2A8 (R/W) Auxiliary Bus Fault Status Register 
.SS "\fB__IOM\fP uint32_t TPI_Type::ACPR"
Offset: 0x010 (R/W) Asynchronous Clock Prescaler Register 
.SS "\fB__IOM\fP uint32_t SCnSCB_Type::ACTLR"
Offset: 0x008 (R/W) Auxiliary Control Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ADR"
Offset: 0x04C (R/ ) Auxiliary Feature Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::AFSR"
Offset: 0x03C (R/W) Auxiliary Fault Status Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::AHBPCR"
Offset: 0x298 (R/W) AHBP Control Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::AHBSCR"
Offset: 0x2A0 (R/W) AHB Slave Control Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::AIRCR"
Offset: 0x00C (R/W) Application Interrupt and Reset Control Register 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  APSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  IPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  xPSR_Type::b"
Structure used for bit access 
.SS "struct  { \&.\&.\&. }  CONTROL_Type::b"
Structure used for bit access 
.SS "\fB__IOM\fP uint32_t SCB_Type::BFAR"
Offset: 0x038 (R/W) BusFault Address Register 
.SS "uint32_t APSR_Type::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t xPSR_Type::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::C"
bit: 29 Carry condition code flag 
.SS "\fB__IOM\fP uint32_t SCB_Type::CACR"
Offset: 0x29C (R/W) L1 Cache Control Register 
.SS "\fB__IM\fP uint32_t SysTick_Type::CALIB"
Offset: 0x00C (R/ ) SysTick Calibration Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::CCR"
Offset: 0x014 (R/W) Configuration Control Register 
.SS "\fB__IM\fP uint32_t SCB_Type::CCSIDR"
Offset: 0x080 (R/ ) Cache Size ID Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::CFSR"
Offset: 0x028 (R/W) Configurable Fault Status Register 
.SS "\fB__IM\fP uint32_t ITM_Type::CID0"
Offset: 0xFF0 (R/ ) ITM Component Identification Register #0 
.SS "\fB__IM\fP uint32_t ITM_Type::CID1"
Offset: 0xFF4 (R/ ) ITM Component Identification Register #1 
.SS "\fB__IM\fP uint32_t ITM_Type::CID2"
Offset: 0xFF8 (R/ ) ITM Component Identification Register #2 
.SS "\fB__IM\fP uint32_t ITM_Type::CID3"
Offset: 0xFFC (R/ ) ITM Component Identification Register #3 
.SS "\fB__IOM\fP uint32_t TPI_Type::CLAIMCLR"
Offset: 0xFA4 (R/W) Claim tag clear 
.SS "\fB__IOM\fP uint32_t TPI_Type::CLAIMSET"
Offset: 0xFA0 (R/W) Claim tag set 
.SS "\fB__IM\fP uint32_t SCB_Type::CLIDR"
Offset: 0x078 (R/ ) Cache Level ID register 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP0"
Offset: 0x020 (R/W) Comparator Register 0 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP1"
Offset: 0x030 (R/W) Comparator Register 1 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP10"
Offset: 0x0C0 (R/W) Comparator Register 10 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP11"
Offset: 0x0D0 (R/W) Comparator Register 11 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP12"
Offset: 0x0E0 (R/W) Comparator Register 12 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP13"
Offset: 0x0F0 (R/W) Comparator Register 13 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP14"
Offset: 0x100 (R/W) Comparator Register 14 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP15"
Offset: 0x110 (R/W) Comparator Register 15 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP2"
Offset: 0x040 (R/W) Comparator Register 2 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP3"
Offset: 0x050 (R/W) Comparator Register 3 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP4"
Offset: 0x060 (R/W) Comparator Register 4 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP5"
Offset: 0x070 (R/W) Comparator Register 5 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP6"
Offset: 0x080 (R/W) Comparator Register 6 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP7"
Offset: 0x090 (R/W) Comparator Register 7 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP8"
Offset: 0x0A0 (R/W) Comparator Register 8 
.SS "\fB__IOM\fP uint32_t DWT_Type::COMP9"
Offset: 0x0B0 (R/W) Comparator Register 9 
.SS "\fB__IOM\fP uint32_t SCB_Type::CPACR"
Offset: 0x088 (R/W) Coprocessor Access Control Register 
.SS "\fB__IOM\fP uint32_t DWT_Type::CPICNT"
Offset: 0x008 (R/W) CPI Count Register 
.SS "\fB__IOM\fP uint32_t SCnSCB_Type::CPPWR"
Offset: 0x00C (R/W) Coprocessor Power Control Register 
.SS "\fB__IM\fP uint32_t SCB_Type::CPUID"
Offset: 0x000 (R/ ) CPUID Base Register 
.SS "\fB__IOM\fP uint32_t TPI_Type::CSPSR"
Offset: 0x004 (R/W) Current Parallel Port Sizes Register
.PP
Offset: 0x004 (R/W) Current Parallel Port Size Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::CSSELR"
Offset: 0x084 (R/W) Cache Size Selection Register 
.SS "\fB__IM\fP uint32_t SCB_Type::CTR"
Offset: 0x07C (R/ ) Cache Type register 
.SS "\fB__IOM\fP uint32_t SysTick_Type::CTRL"
Offset: 0x000 (R/W) SysTick Control and Status Register 
.SS "\fB__IOM\fP uint32_t DWT_Type::CTRL"
Offset: 0x000 (R/W) Control Register 
.SS "\fB__IOM\fP uint32_t DWT_Type::CYCCNT"
Offset: 0x004 (R/W) Cycle Count Register 
.SS "\fB__IOM\fP uint32_t CoreDebug_Type::DAUTHCTRL"
Offset: 0x014 (R/W) Debug Authentication Control Register 
.SS "\fB__OM\fP uint32_t SCB_Type::DCCIMVAC"
Offset: 0x270 ( /W) D-Cache Clean and Invalidate by MVA to PoC 
.SS "\fB__OM\fP uint32_t SCB_Type::DCCISW"
Offset: 0x274 ( /W) D-Cache Clean and Invalidate by Set-way 
.SS "\fB__OM\fP uint32_t SCB_Type::DCCMVAC"
Offset: 0x268 ( /W) D-Cache Clean by MVA to PoC 
.SS "\fB__OM\fP uint32_t SCB_Type::DCCMVAU"
Offset: 0x264 ( /W) D-Cache Clean by MVA to PoU 
.SS "\fB__OM\fP uint32_t SCB_Type::DCCSW"
Offset: 0x26C ( /W) D-Cache Clean by Set-way 
.SS "\fB__OM\fP uint32_t SCB_Type::DCIMVAC"
Offset: 0x25C ( /W) D-Cache Invalidate by MVA to PoC 
.SS "\fB__OM\fP uint32_t SCB_Type::DCISW"
Offset: 0x260 ( /W) D-Cache Invalidate by Set-way 
.SS "\fB__IOM\fP uint32_t CoreDebug_Type::DCRDR"
Offset: 0x008 (R/W) Debug Core Register Data Register 
.SS "\fB__OM\fP uint32_t CoreDebug_Type::DCRSR"
Offset: 0x004 ( /W) Debug Core Register Selector Register 
.SS "\fB__IOM\fP uint32_t CoreDebug_Type::DEMCR"
Offset: 0x00C (R/W) Debug Exception and Monitor Control Register 
.SS "\fB__IM\fP uint32_t ITM_Type::DEVARCH"
Offset: 0xFBC (R/ ) ITM Device Architecture Register 
.SS "\fB__IM\fP uint32_t DWT_Type::DEVARCH"
Offset: 0xFBC (R/ ) Device Architecture Register 
.SS "\fB__IM\fP uint32_t TPI_Type::DEVID"
Offset: 0xFC8 (R/ ) TPIU_DEVID
.PP
Offset: 0xFC8 (R/ ) Device Configuration Register 
.SS "\fB__IM\fP uint32_t TPI_Type::DEVTYPE"
Offset: 0xFCC (R/ ) TPIU_DEVTYPE
.PP
Offset: 0xFCC (R/ ) Device Type Register
.PP
Offset: 0xFCC (R/ ) Device Type Identifier Register 
.SS "\fB__IM\fP uint32_t SCB_Type::DFR"
Offset: 0x048 (R/ ) Debug Feature Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::DFSR"
Offset: 0x030 (R/W) Debug Fault Status Register 
.SS "\fB__IOM\fP uint32_t CoreDebug_Type::DHCSR"
Offset: 0x000 (R/W) Debug Halting Control and Status Register 
.SS "\fB__IOM\fP uint32_t CoreDebug_Type::DSCSR"
Offset: 0x018 (R/W) Debug Security Control and Status Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::DTCMCR"
Offset: 0x294 (R/W) Data Tightly-Coupled Memory Control Registers 
.SS "\fB__IOM\fP uint32_t DWT_Type::EXCCNT"
Offset: 0x00C (R/W) Exception Overhead Count Register 
.SS "\fB__IOM\fP uint32_t TPI_Type::FFCR"
Offset: 0x304 (R/W) Formatter and Flush Control Register 
.SS "\fB__IM\fP uint32_t TPI_Type::FFSR"
Offset: 0x300 (R/ ) Formatter and Flush Status Register 
.SS "\fB__IM\fP uint32_t TPI_Type::FIFO0"
Offset: 0xEEC (R/ ) Integration ETM Data 
.SS "\fB__IM\fP uint32_t TPI_Type::FIFO1"
Offset: 0xEFC (R/ ) Integration ITM Data 
.SS "\fB__IOM\fP uint32_t DWT_Type::FOLDCNT"
Offset: 0x018 (R/W) Folded-instruction Count Register 
.SS "uint32_t CONTROL_Type::FPCA"
bit: 2 Floating-point context active
.PP
bit: 2 FP extension active flag 
.SS "uint32_t  { \&.\&.\&. } ::FPCA"
bit: 2 Floating-point context active 
.SS "uint32_t  { \&.\&.\&. } ::FPCA"
bit: 2 Floating-point context active 
.SS "uint32_t  { \&.\&.\&. } ::FPCA"
bit: 2 Floating-point context active 
.SS "uint32_t  { \&.\&.\&. } ::FPCA"
bit: 2 Floating-point context active 
.SS "uint32_t  { \&.\&.\&. } ::FPCA"
bit: 2 FP extension active flag 
.SS "uint32_t  { \&.\&.\&. } ::FPCA"
bit: 2 FP extension active flag 
.SS "\fB__IOM\fP uint32_t FPU_Type::FPCAR"
Offset: 0x008 (R/W) Floating-Point Context Address Register 
.SS "\fB__IOM\fP uint32_t FPU_Type::FPCCR"
Offset: 0x004 (R/W) Floating-Point Context Control Register 
.SS "\fB__IOM\fP uint32_t FPU_Type::FPDSCR"
Offset: 0x00C (R/W) Floating-Point Default Status Control Register 
.SS "\fB__IM\fP uint32_t TPI_Type::FSCR"
Offset: 0x308 (R/ ) Formatter Synchronization Counter Register 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION0"
Offset: 0x028 (R/W) Function Register 0 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION1"
Offset: 0x038 (R/W) Function Register 1 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION10"
Offset: 0x0C8 (R/W) Function Register 10 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION11"
Offset: 0x0D8 (R/W) Function Register 11 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION12"
Offset: 0x0E8 (R/W) Function Register 12 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION13"
Offset: 0x0F8 (R/W) Function Register 13 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION14"
Offset: 0x108 (R/W) Function Register 14 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION15"
Offset: 0x118 (R/W) Function Register 15 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION2"
Offset: 0x048 (R/W) Function Register 2 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION3"
Offset: 0x058 (R/W) Function Register 3 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION4"
Offset: 0x068 (R/W) Function Register 4 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION5"
Offset: 0x078 (R/W) Function Register 5 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION6"
Offset: 0x088 (R/W) Function Register 6 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION7"
Offset: 0x098 (R/W) Function Register 7 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION8"
Offset: 0x0A8 (R/W) Function Register 8 
.SS "\fB__IOM\fP uint32_t DWT_Type::FUNCTION9"
Offset: 0x0B8 (R/W) Function Register 9 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t APSR_Type::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t xPSR_Type::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "uint32_t  { \&.\&.\&. } ::GE"
bit: 16\&.\&.19 Greater than or Equal flags 
.SS "\fB__IOM\fP uint32_t SCB_Type::HFSR"
Offset: 0x02C (R/W) HardFault Status Register 
.SS "\fB__IOM\fP uint32_t NVIC_Type::IABR"
Offset: 0x200 (R/W) Interrupt Active bit Register 
.SS "\fB__IOM\fP uint32_t NVIC_Type::ICER"
Offset: 0x080 (R/W) Interrupt Clear Enable Register 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_1"
bit: 10\&.\&.15 ICI/IT part 1 
.SS "uint32_t xPSR_Type::ICI_IT_1"
bit: 10\&.\&.15 ICI/IT part 1 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_1"
bit: 10\&.\&.15 ICI/IT part 1 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_1"
bit: 10\&.\&.15 ICI/IT part 1 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_1"
bit: 10\&.\&.15 ICI/IT part 1 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_2"
bit: 25\&.\&.26 ICI/IT part 2 
.SS "uint32_t xPSR_Type::ICI_IT_2"
bit: 25\&.\&.26 ICI/IT part 2 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_2"
bit: 25\&.\&.26 ICI/IT part 2 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_2"
bit: 25\&.\&.26 ICI/IT part 2 
.SS "uint32_t  { \&.\&.\&. } ::ICI_IT_2"
bit: 25\&.\&.26 ICI/IT part 2 
.SS "\fB__OM\fP uint32_t SCB_Type::ICIALLU"
Offset: 0x250 ( /W) I-Cache Invalidate All to PoU 
.SS "\fB__OM\fP uint32_t SCB_Type::ICIMVAU"
Offset: 0x258 ( /W) I-Cache Invalidate by MVA to PoU 
.SS "\fB__IOM\fP uint32_t NVIC_Type::ICPR"
Offset: 0x180 (R/W) Interrupt Clear Pending Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::ICSR"
Offset: 0x004 (R/W) Interrupt Control and State Register 
.SS "\fB__IM\fP uint32_t SCnSCB_Type::ICTR"
Offset: 0x004 (R/ ) Interrupt Controller Type Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ID_ADR"
Offset: 0x04C (R/ ) Auxiliary Feature Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ID_AFR"
Offset: 0x04C (R/ ) Auxiliary Feature Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ID_DFR"
Offset: 0x048 (R/ ) Debug Feature Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ID_ISAR"
Offset: 0x060 (R/ ) Instruction Set Attributes Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ID_MFR[4U]"
Offset: 0x050 (R/ ) Memory Model Feature Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ID_MMFR"
Offset: 0x050 (R/ ) Memory Model Feature Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ID_PFR"
Offset: 0x040 (R/ ) Processor Feature Register 
.SS "\fB__IOM\fP uint32_t ITM_Type::IMCR"
Offset: 0xF00 (R/W) ITM Integration Mode Control Register 
.SS "\fB__IOM\fP uint8_t NVIC_Type::IP[240U]"
Offset: 0x300 (R/W) Interrupt Priority Register (8Bit wide) 
.SS "\fB__IOM\fP uint8_t NVIC_Type::IPR"
Offset: 0x300 (R/W) Interrupt Priority Register (8Bit wide)
.PP
Offset: 0x300 (R/W) Interrupt Priority Register 
.SS "\fB__IM\fP uint32_t ITM_Type::IRR"
Offset: 0xEFC (R/ ) ITM Integration Read Register 
.SS "\fB__IM\fP uint32_t SCB_Type::ISAR"
Offset: 0x060 (R/ ) Instruction Set Attributes Register 
.SS "\fB__IOM\fP uint32_t NVIC_Type::ISER"
Offset: 0x000 (R/W) Interrupt Set Enable Register 
.SS "\fB__IOM\fP uint32_t NVIC_Type::ISPR"
Offset: 0x100 (R/W) Interrupt Set Pending Register 
.SS "uint32_t IPSR_Type::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t xPSR_Type::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t  { \&.\&.\&. } ::ISR"
bit: 0\&.\&. 8 Exception number 
.SS "uint32_t xPSR_Type::IT"
bit: 25\&.\&.26 saved IT state (read 0) 
.SS "uint32_t  { \&.\&.\&. } ::IT"
bit: 25\&.\&.26 saved IT state (read 0) 
.SS "uint32_t  { \&.\&.\&. } ::IT"
bit: 25\&.\&.26 saved IT state (read 0) 
.SS "uint32_t  { \&.\&.\&. } ::IT"
bit: 25\&.\&.26 saved IT state (read 0) 
.SS "uint32_t  { \&.\&.\&. } ::IT"
bit: 25\&.\&.26 saved IT state (read 0) 
.SS "\fB__IM\fP uint32_t TPI_Type::ITATBCTR0"
Offset: 0xEF8 (R/ ) ITATBCTR0
.PP
Offset: 0xEF8 (R/ ) Integration Test ATB Control Register 0 
.SS "\fB__IM\fP uint32_t TPI_Type::ITATBCTR2"
Offset: 0xEF0 (R/ ) ITATBCTR2
.PP
Offset: 0xEF0 (R/W) Integration Test ATB Control Register 2 
.SS "\fB__IOM\fP uint32_t SCB_Type::ITCMCR"
Offset: 0x290 (R/W) Instruction Tightly-Coupled Memory Control Register 
.SS "\fB__IOM\fP uint32_t TPI_Type::ITCTRL"
Offset: 0xF00 (R/W) Integration Mode Control 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "volatile int32_t ITM_RxBuffer\fC [extern]\fP"
External variable to receive characters\&. 
.SS "\fB__IOM\fP uint32_t NVIC_Type::ITNS"
Offset: 0x280 (R/W) Interrupt Non-Secure State Register 
.SS "\fB__OM\fP uint32_t ITM_Type::IWR"
Offset: 0xEF8 ( /W) ITM Integration Write Register 
.SS "\fB__OM\fP uint32_t ITM_Type::LAR"
Offset: 0xFB0 ( /W) ITM Lock Access Register 
.SS "\fB__OM\fP uint32_t DWT_Type::LAR"
Offset: 0xFB0 ( W) Lock Access Register 
.SS "\fB__IOM\fP uint32_t SysTick_Type::LOAD"
Offset: 0x004 (R/W) SysTick Reload Value Register 
.SS "\fB__IM\fP uint32_t ITM_Type::LSR"
Offset: 0xFB4 (R/ ) ITM Lock Status Register 
.SS "\fB__IM\fP uint32_t DWT_Type::LSR"
Offset: 0xFB4 (R ) Lock Status Register 
.SS "\fB__IOM\fP uint32_t DWT_Type::LSUCNT"
Offset: 0x014 (R/W) LSU Count Register 
.SS "\fB__IOM\fP uint32_t DWT_Type::MASK0"
Offset: 0x024 (R/W) Mask Register 0 
.SS "\fB__IOM\fP uint32_t DWT_Type::MASK1"
Offset: 0x034 (R/W) Mask Register 1 
.SS "\fB__IOM\fP uint32_t DWT_Type::MASK2"
Offset: 0x044 (R/W) Mask Register 2 
.SS "\fB__IOM\fP uint32_t DWT_Type::MASK3"
Offset: 0x054 (R/W) Mask Register 3 
.SS "\fB__IOM\fP uint32_t SCB_Type::MMFAR"
Offset: 0x034 (R/W) MemManage Fault Address Register 
.SS "\fB__IM\fP uint32_t SCB_Type::MMFR"
Offset: 0x050 (R/ ) Memory Model Feature Register 
.SS "\fB__IM\fP uint32_t SCB_Type::MVFR0"
Offset: 0x240 (R/ ) Media and VFP Feature Register 0 
.SS "\fB__IM\fP uint32_t FPU_Type::MVFR0"
Offset: 0x010 (R/ ) Media and FP Feature Register 0 
.SS "\fB__IM\fP uint32_t SCB_Type::MVFR1"
Offset: 0x244 (R/ ) Media and VFP Feature Register 1 
.SS "\fB__IM\fP uint32_t FPU_Type::MVFR1"
Offset: 0x014 (R/ ) Media and FP Feature Register 1 
.SS "\fB__IM\fP uint32_t SCB_Type::MVFR2"
Offset: 0x248 (R/ ) Media and VFP Feature Register 2 
.SS "\fB__IM\fP uint32_t FPU_Type::MVFR2"
Offset: 0x018 (R/ ) Media and FP Feature Register 2 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t APSR_Type::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t xPSR_Type::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::N"
bit: 31 Negative condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t CONTROL_Type::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "uint32_t  { \&.\&.\&. } ::nPRIV"
bit: 0 Execution privilege in Thread mode 
.SS "\fB__IOM\fP uint32_t SCB_Type::NSACR"
Offset: 0x08C (R/W) Non-Secure Access Control Register 
.SS "\fB__IM\fP uint32_t DWT_Type::PCSR"
Offset: 0x01C (R/ ) Program Counter Sample Register 
.SS "\fB__IM\fP uint32_t SCB_Type::PFR"
Offset: 0x040 (R/ ) Processor Feature Register 
.SS "\fB__IM\fP uint32_t ITM_Type::PID0"
Offset: 0xFE0 (R/ ) ITM Peripheral Identification Register #0 
.SS "\fB__IM\fP uint32_t ITM_Type::PID1"
Offset: 0xFE4 (R/ ) ITM Peripheral Identification Register #1 
.SS "\fB__IM\fP uint32_t ITM_Type::PID2"
Offset: 0xFE8 (R/ ) ITM Peripheral Identification Register #2 
.SS "\fB__IM\fP uint32_t ITM_Type::PID3"
Offset: 0xFEC (R/ ) ITM Peripheral Identification Register #3 
.SS "\fB__IM\fP uint32_t ITM_Type::PID4"
Offset: 0xFD0 (R/ ) ITM Peripheral Identification Register #4 
.SS "\fB__IM\fP uint32_t ITM_Type::PID5"
Offset: 0xFD4 (R/ ) ITM Peripheral Identification Register #5 
.SS "\fB__IM\fP uint32_t ITM_Type::PID6"
Offset: 0xFD8 (R/ ) ITM Peripheral Identification Register #6 
.SS "\fB__IM\fP uint32_t ITM_Type::PID7"
Offset: 0xFDC (R/ ) ITM Peripheral Identification Register #7 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "__OM union  { \&.\&.\&. }  ITM_Type::PORT[32U]"
Offset: 0x000 ( /W) ITM Stimulus Port Registers 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t APSR_Type::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t xPSR_Type::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t  { \&.\&.\&. } ::Q"
bit: 27 Saturation condition flag 
.SS "uint32_t NVIC_Type::RESERVED0"

.SS "uint32_t SCnSCB_Type::RESERVED0"

.SS "uint32_t FPU_Type::RESERVED0"

.SS "uint32_t TPI_Type::RESERVED0"

.SS "uint32_t ITM_Type::RESERVED0"

.SS "uint32_t ITM_Type::RESERVED1"

.SS "uint32_t DWT_Type::RESERVED1"

.SS "uint32_t SCnSCB_Type::RESERVED1[1U]"

.SS "uint32_t TPI_Type::RESERVED1"

.SS "uint32_t DWT_Type::RESERVED10"

.SS "uint32_t DWT_Type::RESERVED11"

.SS "uint32_t DWT_Type::RESERVED12"

.SS "uint32_t DWT_Type::RESERVED13"

.SS "uint32_t DWT_Type::RESERVED14"

.SS "uint32_t DWT_Type::RESERVED15"

.SS "uint32_t DWT_Type::RESERVED16"

.SS "uint32_t DWT_Type::RESERVED17"

.SS "uint32_t DWT_Type::RESERVED18"

.SS "uint32_t DWT_Type::RESERVED19"

.SS "uint32_t TPI_Type::RESERVED2"

.SS "uint32_t ITM_Type::RESERVED2"

.SS "uint32_t NVIC_Type::RESERVED2"

.SS "uint32_t DWT_Type::RESERVED2"

.SS "uint32_t DWT_Type::RESERVED20"

.SS "uint32_t DWT_Type::RESERVED21"

.SS "uint32_t DWT_Type::RESERVED22"

.SS "uint32_t DWT_Type::RESERVED23"

.SS "uint32_t DWT_Type::RESERVED24"

.SS "uint32_t DWT_Type::RESERVED25"

.SS "uint32_t DWT_Type::RESERVED26"

.SS "uint32_t DWT_Type::RESERVED27"

.SS "uint32_t DWT_Type::RESERVED28"

.SS "uint32_t DWT_Type::RESERVED29"

.SS "uint32_t NVIC_Type::RESERVED3"

.SS "uint32_t DWT_Type::RESERVED3"

.SS "uint32_t ITM_Type::RESERVED3"

.SS "uint32_t TPI_Type::RESERVED3"

.SS "uint32_t SCB_Type::RESERVED3"

.SS "uint32_t DWT_Type::RESERVED30"

.SS "uint32_t DWT_Type::RESERVED31"

.SS "uint32_t DWT_Type::RESERVED32"

.SS "uint32_t DWT_Type::RESERVED33"

.SS "uint32_t SCB_Type::RESERVED4"

.SS "uint32_t NVIC_Type::RESERVED4"

.SS "uint32_t DWT_Type::RESERVED4"

.SS "uint32_t TPI_Type::RESERVED4"

.SS "uint32_t CoreDebug_Type::RESERVED4"

.SS "uint32_t ITM_Type::RESERVED4"

.SS "uint32_t NVIC_Type::RESERVED5"

.SS "uint32_t SCB_Type::RESERVED5"

.SS "uint32_t ITM_Type::RESERVED5"

.SS "uint32_t DWT_Type::RESERVED5"

.SS "uint32_t TPI_Type::RESERVED5"

.SS "uint32_t SCB_Type::RESERVED6"

.SS "uint32_t DWT_Type::RESERVED6"

.SS "uint32_t ITM_Type::RESERVED6"

.SS "uint32_t NVIC_Type::RESERVED6"

.SS "uint32_t DWT_Type::RESERVED7"

.SS "uint32_t SCB_Type::RESERVED7"

.SS "uint32_t TPI_Type::RESERVED7"

.SS "uint32_t SCB_Type::RESERVED8"

.SS "uint32_t DWT_Type::RESERVED8"

.SS "uint32_t DWT_Type::RESERVED9"

.SS "uint32_t NVIC_Type::RSERVED1"

.SS "\fB__IOM\fP uint32_t SCB_Type::SCR"
Offset: 0x010 (R/W) System Control Register 
.SS "uint32_t CONTROL_Type::SFPA"
bit: 3 Secure floating-point active 
.SS "uint32_t  { \&.\&.\&. } ::SFPA"
bit: 3 Secure floating-point active 
.SS "uint32_t  { \&.\&.\&. } ::SFPA"
bit: 3 Secure floating-point active 
.SS "uint32_t  { \&.\&.\&. } ::SFPA"
bit: 3 Secure floating-point active 
.SS "uint32_t  { \&.\&.\&. } ::SFPA"
bit: 3 Secure floating-point active 
.SS "\fB__IOM\fP uint32_t SCB_Type::SHCSR"
Offset: 0x024 (R/W) System Handler Control and State Register 
.SS "\fB__IOM\fP uint8_t SCB_Type::SHP[12U]"
Offset: 0x018 (R/W) System Handlers Priority Registers (4-7, 8-11, 12-15) 
.SS "\fB__IOM\fP uint8_t SCB_Type::SHPR"
Offset: 0x018 (R/W) System Handlers Priority Registers (4-7, 8-11, 12-15)
.PP
Offset: 0x01C (R/W) System Handlers Priority Registers\&. [0] is RESERVED 
.SS "\fB__IOM\fP uint32_t DWT_Type::SLEEPCNT"
Offset: 0x010 (R/W) Sleep Count Register 
.SS "\fB__IOM\fP uint32_t TPI_Type::SPPR"
Offset: 0x0F0 (R/W) Selected Pin Protocol Register 
.SS "uint32_t CONTROL_Type::SPSEL"
bit: 1 Stack-pointer select
.PP
bit: 1 Stack to be used 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack-pointer select 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack-pointer select 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack to be used 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack-pointer select 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack-pointer select 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack to be used 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack to be used 
.SS "uint32_t  { \&.\&.\&. } ::SPSEL"
bit: 1 Stack to be used 
.SS "\fB__IM\fP uint32_t TPI_Type::SSPSR"
Offset: 0x000 (R/ ) Supported Parallel Port Sizes Register
.PP
Offset: 0x000 (R/ ) Supported Parallel Port Size Register 
.SS "\fB__OM\fP uint32_t NVIC_Type::STIR"
Offset: 0xE00 ( /W) Software Trigger Interrupt Register 
.SS "\fB__OM\fP uint32_t SCB_Type::STIR"
Offset: 0x200 ( /W) Software Triggered Interrupt Register 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit (read 0) 
.SS "uint32_t xPSR_Type::T"
bit: 24 Thumb bit (read 0)
.PP
bit: 24 Thumb bit 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit (read 0) 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit (read 0) 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit (read 0) 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit 
.SS "uint32_t  { \&.\&.\&. } ::T"
bit: 24 Thumb bit 
.SS "\fB__IOM\fP uint32_t ITM_Type::TCR"
Offset: 0xE80 (R/W) ITM Trace Control Register 
.SS "\fB__IOM\fP uint32_t ITM_Type::TER"
Offset: 0xE00 (R/W) ITM Trace Enable Register 
.SS "\fB__IOM\fP uint32_t ITM_Type::TPR"
Offset: 0xE40 (R/W) ITM Trace Privilege Register 
.SS "\fB__IM\fP uint32_t TPI_Type::TRIGGER"
Offset: 0xEE8 (R/ ) TRIGGER
.PP
Offset: 0xEE8 (R/ ) TRIGGER Register 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "\fB__OM\fP uint16_t ITM_Type::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint16_t  { \&.\&.\&. } ::u16"
Offset: 0x000 ( /W) ITM Stimulus Port 16-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "\fB__OM\fP uint32_t ITM_Type::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint32_t  { \&.\&.\&. } ::u32"
Offset: 0x000 ( /W) ITM Stimulus Port 32-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "\fB__OM\fP uint8_t ITM_Type::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "__OM uint8_t  { \&.\&.\&. } ::u8"
Offset: 0x000 ( /W) ITM Stimulus Port 8-bit 
.SS "uint32_t APSR_Type::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t xPSR_Type::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::V"
bit: 28 Overflow condition code flag 
.SS "\fB__IOM\fP uint32_t SysTick_Type::VAL"
Offset: 0x008 (R/W) SysTick Current Value Register 
.SS "\fB__IOM\fP uint32_t SCB_Type::VTOR"
Offset: 0x008 (R/W) Vector Table Offset Register 
.SS "uint32_t APSR_Type::w"
Type used for word access 
.SS "uint32_t IPSR_Type::w"
Type used for word access 
.SS "uint32_t xPSR_Type::w"
Type used for word access 
.SS "uint32_t CONTROL_Type::w"
Type used for word access 
.SS "uint32_t APSR_Type::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t xPSR_Type::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SS "uint32_t  { \&.\&.\&. } ::Z"
bit: 30 Zero condition code flag 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

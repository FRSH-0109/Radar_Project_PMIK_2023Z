.TH "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c" 3 "Version 1.0.0" "Radar" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c \- DMA HAL module driver\&. This file provides firmware functions to manage the following functionalities of the Direct Memory Access (DMA) peripheral:  

.SH SYNOPSIS
.br
.PP
\fC#include 'stm32g0xx_hal\&.h'\fP
.br

.SH "Detailed Description"
.PP 
DMA HAL module driver\&. This file provides firmware functions to manage the following functionalities of the Direct Memory Access (DMA) peripheral: 


.PP
\fBAuthor\fP
.RS 4
MCD Application Team
.IP "\(bu" 2
Initialization and de-initialization functions
.IP "\(bu" 2
IO operation functions
.IP "\(bu" 2
Peripheral State and errors functions
.PP
.RE
.PP
\fBAttention\fP
.RS 4
.RE
.PP
Copyright (c) 2018 STMicroelectronics\&. All rights reserved\&.
.PP
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component\&. If no LICENSE file comes with this software, it is provided AS-IS\&.
.PP
.PP
.nf
==============================================================================
                      ##### How to use this driver #####
==============================================================================
[\&.\&.]
 (#) Enable and configure the peripheral to be connected to the DMA Channel
     (except for internal SRAM / FLASH memories: no initialization is
     necessary)\&. Please refer to the Reference manual for connection between peripherals
     and DMA requests\&.

 (#) For a given Channel, program the required configuration through the following parameters:
     Channel request, Transfer Direction, Source and Destination data formats,
     Circular or Normal mode, Channel Priority level, Source and Destination Increment mode
     using HAL_DMA_Init() function\&.

     Prior to HAL_DMA_Init the peripheral clock shall be enabled for both DMA & DMAMUX
     thanks to:
    (##) DMA1 or DMA2: __HAL_RCC_DMA1_CLK_ENABLE() or  __HAL_RCC_DMA2_CLK_ENABLE();

 (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of error
     detection\&.

 (#) Use HAL_DMA_Abort() function to abort the current transfer

   -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed\&.

   *** Polling mode IO operation ***
   =================================
   [\&.\&.]
     (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source
         address and destination address and the Length of data to be transferred
     (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this
         case a fixed Timeout can be configured by User depending from his application\&.

   *** Interrupt mode IO operation ***
   ===================================
   [\&.\&.]
     (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
     (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
     (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of
         Source address and destination address and the Length of data to be transferred\&.
         In this case the DMA interrupt is configured
     (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
     (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can
            add his own function to register callbacks with HAL_DMA_RegisterCallback()\&.

   *** DMA HAL driver macros list ***
   =============================================
   [\&.\&.]
     Below the list of macros in DMA HAL driver\&.

     (+) __HAL_DMA_ENABLE: Enable the specified DMA Channel\&.
     (+) __HAL_DMA_DISABLE: Disable the specified DMA Channel\&.
     (+) __HAL_DMA_GET_FLAG: Get the DMA Channel pending flags\&.
     (+) __HAL_DMA_CLEAR_FLAG: Clear the DMA Channel pending flags\&.
     (+) __HAL_DMA_ENABLE_IT: Enable the specified DMA Channel interrupts\&.
     (+) __HAL_DMA_DISABLE_IT: Disable the specified DMA Channel interrupts\&.
     (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Channel interrupt is enabled or not\&.

   [\&.\&.]
    (@) You can refer to the DMA HAL driver header file for more useful macros.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for Radar from the source code\&.

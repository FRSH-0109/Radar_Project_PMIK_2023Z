<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="group___r_c_c___clock___configuration" kind="group">
    <compoundname>RCC_Clock_Configuration</compoundname>
    <title>RCC Clock Configuration</title>
    <sectiondef kind="define">
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaab944f562b53fc74bcc0e4958388fd42" prot="public" static="no">
        <name>__HAL_RCC_HSI_ENABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaf4fcacf94a97f7d49a70e089b39cf474" kindref="member">RCC_CR_HSION</ref>)</initializer>
        <briefdescription>
<para>Macros to enable the Internal High Speed oscillator (HSI). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The HSI is stopped by hardware when entering STOP and STANDBY modes. It is used (enabled by hardware) as system clock source after startup from Reset, wakeup from STOP and STANDBY mode, or in case of failure of the HSE used directly or indirectly as system clock (if the Clock Security System CSS is enabled). </para>
</simplesect>
<simplesect kind="note"><para>After enabling the HSI, the application software should wait on HSIRDY flag to be set indicating that HSI clock is stable and can be used as system clock source. This parameter can be: ENABLE or DISABLE. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2468" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga0c0dc8bc0ef58703782f45b4e487c031" prot="public" static="no">
        <name>__HAL_RCC_HSI_DISABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaf4fcacf94a97f7d49a70e089b39cf474" kindref="member">RCC_CR_HSION</ref>)</initializer>
        <briefdescription>
<para>Macros to disable the Internal High Speed oscillator (HSI). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HSI can not be stopped if it is used as system clock source. In this case, you have to select another source of the system clock then stop the HSI. </para>
</simplesect>
<simplesect kind="note"><para>When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator clock cycles. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2477" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga74c3b20fdb9a7672c50aa97bb46537b1" prot="public" static="no">
        <name>__HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST</name>
        <param><defname>__HSICALIBRATIONVALUE__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;ICSCR, <ref refid="group___peripheral___registers___bits___definition_1gab79c333962d5bd80636eca9997759804" kindref="member">RCC_ICSCR_HSITRIM</ref>, (uint32_t)(__HSICALIBRATIONVALUE__) &lt;&lt; <ref refid="group___peripheral___registers___bits___definition_1ga1f1261416d104fe7cd9f5001ffbf8330" kindref="member">RCC_ICSCR_HSITRIM_Pos</ref>)</initializer>
        <briefdescription>
<para>Macro to adjust the Internal High Speed oscillator (HSI) calibration value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The calibration is used to compensate for the variations in voltage and temperature that influence the frequency of the internal HSI RC. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__HSICALIBRATIONVALUE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the calibration trimming value (default is RCC_HSICALIBRATION_DEFAULT). This parameter must be a number between 0 and 127. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2487" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2487" bodyend="2488"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gae069a430441e0547d753a7b47feaebd1" prot="public" static="no">
        <name>__HAL_RCC_HSISTOP_ENABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaa9172ae30b26b2daad9442579b8e2dd0" kindref="member">RCC_CR_HSIKERON</ref>)</initializer>
        <briefdescription>
<para>Macros to enable or disable the force of the Internal High Speed oscillator (HSI) in STOP mode to be quickly available as kernel clock for USARTs and I2Cs. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Keeping the HSI ON in STOP mode allows to avoid slowing down the communication speed because of the HSI startup time. </para>
</simplesect>
<simplesect kind="note"><para>The enable of this function has not effect on the HSION bit. This parameter can be: ENABLE or DISABLE. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2499" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaca5ca4b6c2cbd0e638b4c3b8b71cbc61" prot="public" static="no">
        <name>__HAL_RCC_HSISTOP_DISABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaa9172ae30b26b2daad9442579b8e2dd0" kindref="member">RCC_CR_HSIKERON</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2501" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga99cd8a4ebbe11cd3be3cadddec9c5c59" prot="public" static="no">
        <name>__HAL_RCC_HSI_CONFIG</name>
        <param><defname>__HSIDIV__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1ga1fc0a415e8fd2af09b0fcb0fa2d4c2e9" kindref="member">RCC_CR_HSIDIV</ref>, (__HSIDIV__))</initializer>
        <briefdescription>
<para>Macro to configure the HSISYS clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__HSIDIV__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the HSI16 division factor. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga47ea1a7697d9e3f7eda06b45bc7f4db6" kindref="member">RCC_HSI_DIV1</ref> HSI clock source is divided by 1 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga38a54d39b6808f476a0a81b47a4f50f8" kindref="member">RCC_HSI_DIV2</ref> HSI clock source is divided by 2 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga3280982afa72662f07301844a8272d1e" kindref="member">RCC_HSI_DIV4</ref> HSI clock source is divided by 4 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga06315b229d36c98402286f0b48f85d99" kindref="member">RCC_HSI_DIV8</ref> HSI clock source is divided by 8 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga53a5667c8d0a738236054a62ea9a06e1" kindref="member">RCC_HSI_DIV16</ref> HSI clock source is divided by 16 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga02a19e7c99a6d747ed28d4a7b50115e7" kindref="member">RCC_HSI_DIV32</ref> HSI clock source is divided by 32 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga40072a748e39bfdd921e7d745eeb871e" kindref="member">RCC_HSI_DIV64</ref> HSI clock source is divided by 64 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_i___div_1ga4a1d9f3bc8669fa718c569c135b50ed4" kindref="member">RCC_HSI_DIV128</ref> HSI clock source is divided by 128 </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2515" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2515" bodyend="2516"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga560de8b8991db4a296de878a7a8aa58b" prot="public" static="no">
        <name>__HAL_RCC_LSI_ENABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CSR, <ref refid="group___peripheral___registers___bits___definition_1ga803cbf97bda1ebaf9afee2a3c9f0851b" kindref="member">RCC_CSR_LSION</ref>)</initializer>
        <briefdescription>
<para>Macros to enable or disable the Internal Low Speed oscillator (LSI). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>After enabling the LSI, the application software should wait on LSIRDY flag to be set indicating that LSI clock is stable and can be used to clock the IWDG and/or the RTC. </para>
</simplesect>
<simplesect kind="note"><para>LSI can not be disabled if the IWDG is running. </para>
</simplesect>
<simplesect kind="note"><para>When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator clock cycles. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2527" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga4f96095bb4acda60b7f66d5d927da181" prot="public" static="no">
        <name>__HAL_RCC_LSI_DISABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CSR, <ref refid="group___peripheral___registers___bits___definition_1ga803cbf97bda1ebaf9afee2a3c9f0851b" kindref="member">RCC_CSR_LSION</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2529" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaa3d98648399f15d02645ef84f6ca8e4b" prot="public" static="no">
        <name>__HAL_RCC_HSE_CONFIG</name>
        <param><defname>__STATE__</defname></param>
        <initializer>                                              do {                                        \
                                              if((__STATE__) == <ref refid="group___r_c_c___h_s_e___config_1gabc4f70a44776c557af20496b04d9a9db" kindref="member">RCC_HSE_ON</ref>)          \
                                              {                                      \
                                                <ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);      \
                                              }                                      \
                                              else if((__STATE__) == <ref refid="group___r_c_c___h_s_e___config_1ga5ca515db2d5c4d5bdb9ee3d154df2704" kindref="member">RCC_HSE_BYPASS</ref>) \
                                              {                                      \
                                                <ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>);     \
                                                <ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);      \
                                              }                                      \
                                              else                                   \
                                              {                                      \
                                                <ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gadb8228c9020595b4cf9995137b8c9a7d" kindref="member">RCC_CR_HSEON</ref>);    \
                                                <ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gaa3288090671af5a959aae4d7f7696d55" kindref="member">RCC_CR_HSEBYP</ref>);   \
                                              }                                      \
                                            } while(0U)</initializer>
        <briefdescription>
<para>Macro to configure the External High Speed oscillator (HSE). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not supported by this macro. User should request a transition to HSE Off first and then HSE On or HSE Bypass. </para>
</simplesect>
<simplesect kind="note"><para>After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application software should wait on HSERDY flag to be set indicating that HSE clock is stable and can be used to clock the PLL and/or system clock. </para>
</simplesect>
<simplesect kind="note"><para>HSE state can not be changed if it is used directly or through the PLL as system clock. In this case, you have to select another source of the system clock then change the HSE state (ex. disable it). </para>
</simplesect>
<simplesect kind="note"><para>The HSE is stopped by hardware when entering STOP and STANDBY modes. </para>
</simplesect>
<simplesect kind="note"><para>This function reset the CSSON bit, so if the clock security system(CSS) was previously enabled you have to enable it again after calling this function. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__STATE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the HSE. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___h_s_e___config_1ga1616626d23fbce440398578855df6f97" kindref="member">RCC_HSE_OFF</ref> Turn OFF the HSE oscillator, HSERDY flag goes low after 6 HSE oscillator clock cycles. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_e___config_1gabc4f70a44776c557af20496b04d9a9db" kindref="member">RCC_HSE_ON</ref> Turn ON the HSE oscillator. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___h_s_e___config_1ga5ca515db2d5c4d5bdb9ee3d154df2704" kindref="member">RCC_HSE_BYPASS</ref> HSE oscillator bypassed with external clock. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2554" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2554" bodyend="2569"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga6b2b48f429e347c1c9c469122c64798b" prot="public" static="no">
        <name>__HAL_RCC_LSE_CONFIG</name>
        <param><defname>__STATE__</defname></param>
        <initializer>                                              do {                                          \
                                              if((__STATE__) == <ref refid="group___r_c_c___l_s_e___config_1gac981ea636c2f215e4473901e0912f55a" kindref="member">RCC_LSE_ON</ref>)            \
                                              {                                        \
                                                <ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1ga00145f8814cb9a5b180d76499d97aead" kindref="member">RCC_BDCR_LSEON</ref>);    \
                                              }                                        \
                                              else if((__STATE__) == <ref refid="group___r_c_c___l_s_e___config_1gaad580157edbae878edbcc83c5a68e767" kindref="member">RCC_LSE_BYPASS</ref>)   \
                                              {                                        \
                                                <ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1ga542dffd7f8dc4da5401b54d822a22af0" kindref="member">RCC_BDCR_LSEBYP</ref>);   \
                                                <ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1ga00145f8814cb9a5b180d76499d97aead" kindref="member">RCC_BDCR_LSEON</ref>);    \
                                              }                                        \
                                              else                                     \
                                              {                                        \
                                                <ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1ga00145f8814cb9a5b180d76499d97aead" kindref="member">RCC_BDCR_LSEON</ref>);  \
                                                <ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1ga542dffd7f8dc4da5401b54d822a22af0" kindref="member">RCC_BDCR_LSEBYP</ref>); \
                                              }                                        \
                                            } while(0U)</initializer>
        <briefdescription>
<para>Macro to configure the External Low Speed oscillator (LSE). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not supported by this macro. User should request a transition to LSE Off first and then LSE On or LSE Bypass. </para>
</simplesect>
<simplesect kind="note"><para>As the LSE is in the Backup domain and write access is denied to this domain after reset, you have to enable write access using <ref refid="group___p_w_r___exported___functions___group2_1ga3d07cef39bf294db4aed7e06e5dbf9af" kindref="member">HAL_PWR_EnableBkUpAccess()</ref> function before to configure the LSE (to be done once after reset). </para>
</simplesect>
<simplesect kind="note"><para>After enabling the LSE (RCC_LSE_ON or RCC_LSE_BYPASS), the application software should wait on LSERDY flag to be set indicating that LSE clock is stable and can be used to clock the RTC. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__STATE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the LSE. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___l_s_e___config_1ga6645c27708d0cad1a4ab61d2abb24c77" kindref="member">RCC_LSE_OFF</ref> Turn OFF the LSE oscillator, LSERDY flag goes low after 6 LSE oscillator clock cycles. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___l_s_e___config_1gac981ea636c2f215e4473901e0912f55a" kindref="member">RCC_LSE_ON</ref> Turn ON the LSE oscillator. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___l_s_e___config_1gaad580157edbae878edbcc83c5a68e767" kindref="member">RCC_LSE_BYPASS</ref> LSE oscillator bypassed with external clock. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2591" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2591" bodyend="2606"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaaf196a2df41b0bcbc32745c2b218e696" prot="public" static="no">
        <name>__HAL_RCC_PLL_ENABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2684" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga718a6afcb1492cc2796be78445a7d5ab" prot="public" static="no">
        <name>__HAL_RCC_PLL_DISABLE</name>
        <param></param>
        <initializer><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CR, <ref refid="group___peripheral___registers___bits___definition_1gad0e73d5b0a4883e074d40029b49ee47e" kindref="member">RCC_CR_PLLON</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2686" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaf9a8466f991888332ec978dc92c62d7d" prot="public" static="no">
        <name>__HAL_RCC_PLL_PLLSOURCE_CONFIG</name>
        <param><defname>__PLLSOURCE__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;PLLCFGR, <ref refid="group___peripheral___registers___bits___definition_1ga92cb53ea81d2c47537eb217cc6659a2e" kindref="member">RCC_PLLCFGR_PLLSRC</ref>, (__PLLSOURCE__))</initializer>
        <briefdescription>
<para>Macro to configure the PLL clock source. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function must be used only when the main PLL is disabled. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLSOURCE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL entry clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga2a440b01eaeb8f3a6282598fc748ef1f" kindref="member">RCC_PLLSOURCE_NONE</ref> No clock selected as PLL clock entry </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga0e07703f1ccb3d60f8a47a2dc631c218" kindref="member">RCC_PLLSOURCE_HSI</ref> HSI oscillator clock selected as PLL clock entry </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref> HSE oscillator clock selected as PLL clock entry </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2698" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2698" bodyend="2699"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gabca62f581e6c2553cca7ef0d7a2a4b7f" prot="public" static="no">
        <name>__HAL_RCC_PLL_PLLM_CONFIG</name>
        <param><defname>__PLLM__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;PLLCFGR, <ref refid="group___peripheral___registers___bits___definition_1ga9a42e8b9ee60126976d9be056e5e66b1" kindref="member">RCC_PLLCFGR_PLLM</ref>, (__PLLM__))</initializer>
        <briefdescription>
<para>Macro to configure the PLL multiplication factor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function must be used only when the main PLL is disabled. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLM__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the division factor for PLL VCO input clock This parameter must be a value of RCC_PLLM_Clock_Divider. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You have to set the PLLM parameter correctly to ensure that the VCO input frequency ranges from 4 to 16 MHz. It is recommended to select a frequency of 16 MHz to limit PLL jitter. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2711" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2711" bodyend="2712"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga269ff294715f1e64ff445507041cdb48" prot="public" static="no">
        <name>__HAL_RCC_PLL_CONFIG</name>
        <param><defname>__PLLSOURCE__</defname></param>
        <param><defname>__PLLM__</defname></param>
        <param><defname>__PLLN__</defname></param>
        <param><defname>__PLLP__</defname></param>
        <param><defname>__PLLR__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;PLLCFGR,                                                   \
             (<ref refid="group___peripheral___registers___bits___definition_1ga92cb53ea81d2c47537eb217cc6659a2e" kindref="member">RCC_PLLCFGR_PLLSRC</ref> | <ref refid="group___peripheral___registers___bits___definition_1ga9a42e8b9ee60126976d9be056e5e66b1" kindref="member">RCC_PLLCFGR_PLLM</ref> | <ref refid="group___peripheral___registers___bits___definition_1ga4b571901d7cdc93ca1ecc1531f26ba6a" kindref="member">RCC_PLLCFGR_PLLN</ref> |     \
              <ref refid="group___peripheral___registers___bits___definition_1ga2561745be271ee828e26de601f72162d" kindref="member">RCC_PLLCFGR_PLLP</ref> | <ref refid="group___peripheral___registers___bits___definition_1gaf94ebe400d76dd3d34e78244a8ceb050" kindref="member">RCC_PLLCFGR_PLLR</ref>),                          \
             ((uint32_t) (__PLLSOURCE__)                     |              \
              (uint32_t) (__PLLM__)                           |              \
              (uint32_t) ((__PLLN__) &lt;&lt; <ref refid="group___peripheral___registers___bits___definition_1ga78a5913e3fc53a740fe874ece04b2d84" kindref="member">RCC_PLLCFGR_PLLN_Pos</ref>) |              \
              (uint32_t) (__PLLP__)                           |              \
              (uint32_t) (__PLLR__)))</initializer>
        <briefdescription>
<para>Macro to configure the main PLL clock source, multiplication and division factors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function must be used only when the main PLL is disabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLSOURCE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL entry clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga2a440b01eaeb8f3a6282598fc748ef1f" kindref="member">RCC_PLLSOURCE_NONE</ref> No clock selected as PLL clock entry </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga0e07703f1ccb3d60f8a47a2dc631c218" kindref="member">RCC_PLLSOURCE_HSI</ref> HSI oscillator clock selected as PLL clock entry </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref> HSE oscillator clock selected as PLL clock entry</para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__PLLM__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the division factor for PLL VCO input clock. This parameter must be a value of RCC_PLLM_Clock_Divider. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You have to set the PLLM parameter correctly to ensure that the VCO input frequency ranges from 4 to 16 MHz. It is recommended to select a frequency of 16 MHz to limit PLL jitter.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLN__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the multiplication factor for PLL VCO output clock. This parameter must be a number between 8 and 86. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You have to set the PLLN parameter correctly to ensure that the VCO output frequency is between 64 and 344 MHz.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLP__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the division factor for ADC clock. This parameter must be a value of <ref refid="group___r_c_c___p_l_l_p___clock___divider" kindref="compound">PLLP Clock Divider</ref>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__PLLQ__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the division factor for RBG &amp; HS Timers clocks.(1) This parameter must be a value of RCC_PLLQ_Clock_Divider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>(1)__PLLQ__ parameter availability depends on devices </para>
</simplesect>
<simplesect kind="note"><para>If the USB FS is used in your application, you have to set the PLLQ parameter correctly to have 48 MHz clock for the USB. However, the RNG needs a frequency lower than or equal to 48 MHz to work correctly.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLR__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the division factor for the main system clock. This parameter must be a value of RCC_PLLR_Clock_Divider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You have to set the PLL parameters correctly to not exceed 64MHZ. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2763" column="10" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2763" bodyend="2771"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga3ea1390f8124e2b3b8d53e95541d6e53" prot="public" static="no">
        <name>__HAL_RCC_GET_PLL_OSCSOURCE</name>
        <param></param>
        <initializer>((uint32_t)(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;PLLCFGR &amp; <ref refid="group___peripheral___registers___bits___definition_1ga92cb53ea81d2c47537eb217cc6659a2e" kindref="member">RCC_PLLCFGR_PLLSRC</ref>))</initializer>
        <briefdescription>
<para>Macro to get the oscillator used as PLL clock source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>oscillator used as PLL clock source. The returned value can be one of the following: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga2a440b01eaeb8f3a6282598fc748ef1f" kindref="member">RCC_PLLSOURCE_NONE</ref> No oscillator is used as PLL clock source. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga0e07703f1ccb3d60f8a47a2dc631c218" kindref="member">RCC_PLLSOURCE_HSI</ref> HSI oscillator is used as PLL clock source. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___source_1ga197cea7fe5c2db26fe7fcdb0f99dd4d7" kindref="member">RCC_PLLSOURCE_HSE</ref> HSE oscillator is used as PLL clock source. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2780" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaab70beccea4c82e4acc69befcdb5e862" prot="public" static="no">
        <name>__HAL_RCC_PLLCLKOUT_ENABLE</name>
        <param><defname>__PLLCLOCKOUT__</defname></param>
        <initializer><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;PLLCFGR, (__PLLCLOCKOUT__))</initializer>
        <briefdescription>
<para>Enable each clock output (RCC_PLLRCLK, RCC_PLLQCLK(*), RCC_PLLPCLK) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Enabling clock outputs RCC_PLLPCLK and RCC_PLLQCLK(*) can be done at anytime without the need to stop the PLL in order to save power. But RCC_PLLRCLK cannot be stopped if used as System Clock. </para>
</simplesect>
<simplesect kind="note"><para>(*) RCC_PLLQCLK availability depends on devices </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLCLOCKOUT__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL clock to be output. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___output_1ga62762c1c562eb0255f2bf109e42d872a" kindref="member">RCC_PLLPCLK</ref> This clock is used to generate the clock for the ADC.  </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___output_1gadce2ca306ca9620983351ce048be950f" kindref="member">RCC_PLLRCLK</ref> This Clock is used to generate the high speed system clock (up to 64MHz) </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2798" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaee19cf9a5cb792b5c9a94ad88103ab93" prot="public" static="no">
        <name>__HAL_RCC_PLLCLKOUT_DISABLE</name>
        <param><defname>__PLLCLOCKOUT__</defname></param>
        <initializer><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;PLLCFGR, (__PLLCLOCKOUT__))</initializer>
        <briefdescription>
<para>Disable each clock output (RCC_PLLRCLK, RCC_PLLQCLK(*), RCC_PLLPCLK) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Disabling clock outputs RCC_PLLPCLK and RCC_PLLQCLK(*) can be done at anytime without the need to stop the PLL in order to save power. But RCC_PLLRCLK cannot be stopped if used as System Clock. </para>
</simplesect>
<simplesect kind="note"><para>(*) RCC_PLLQCLK availability depends on devices </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLCLOCKOUT__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the PLL clock to be output. This parameter can be one or a combination of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___output_1ga62762c1c562eb0255f2bf109e42d872a" kindref="member">RCC_PLLPCLK</ref> This clock may be used to generate the clock for the ADC, I2S1.  </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___output_1gadce2ca306ca9620983351ce048be950f" kindref="member">RCC_PLLRCLK</ref> This Clock is used to generate the high speed system clock (up to 64MHz) </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2816" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga8df63b4aaea1551f9d4ba3fe22360cbb" prot="public" static="no">
        <name>__HAL_RCC_GET_PLLCLKOUT_CONFIG</name>
        <param><defname>__PLLCLOCKOUT__</defname></param>
        <initializer><ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;PLLCFGR, (__PLLCLOCKOUT__))</initializer>
        <briefdescription>
<para>Get clock output enable status (RCC_PLLRCLK, RCC_PLLQCLK(*), RCC_PLLPCLK) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__PLLCLOCKOUT__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the output PLL clock to be checked. This parameter can be one of the following values: <itemizedlist>
<listitem><para>RCC_PLLPCLK This clock may be used to generate the clock for ADC, I2S1.  </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___p_l_l___clock___output_1gadce2ca306ca9620983351ce048be950f" kindref="member">RCC_PLLRCLK</ref> This Clock is used to generate the high speed system clock (up to 64MHz) </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SET</parametername>
</parameternamelist>
<parameterdescription>
<para>/ RESET </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>(*) RCC_PLLQCLK availability depends on devices </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2831" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gaa29be28740b3d480e83efbc2e695c1b8" prot="public" static="no">
        <name>__HAL_RCC_SYSCLK_CONFIG</name>
        <param><defname>__SYSCLKSOURCE__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR, <ref refid="group___peripheral___registers___bits___definition_1ga0eea5e5f7743a7e8995b8beeb18355c1" kindref="member">RCC_CFGR_SW</ref>, (__SYSCLKSOURCE__))</initializer>
        <briefdescription>
<para>Macro to configure the system clock source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__SYSCLKSOURCE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the system clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___system___clock___source_1gaaeeb699502e7d7a9f1b5d57fcf1f5095" kindref="member">RCC_SYSCLKSOURCE_HSI</ref> HSI oscillator is used as system clock source. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source_1ga9116d0627e1e7f33c48e1357b9a35a1c" kindref="member">RCC_SYSCLKSOURCE_HSE</ref> HSE oscillator is used as system clock source. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source_1ga5caf08ac71d7dd7e7b2e3e421606aca7" kindref="member">RCC_SYSCLKSOURCE_PLLCLK</ref> PLL output is used as system clock source. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source_1gafd81d39139ae1b087b751f5215d0c730" kindref="member">RCC_SYSCLKSOURCE_LSI</ref> LSI oscillator is used as system clock source. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source_1ga6a611de7f77dd8eec9ab15bc9e98bad3" kindref="member">RCC_SYSCLKSOURCE_LSE</ref> LSE oscillator is used as system clock source. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2844" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2844" bodyend="2845"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gac99c2453d9e77c8b457acc0210e754c2" prot="public" static="no">
        <name>__HAL_RCC_GET_SYSCLK_SOURCE</name>
        <param></param>
        <initializer>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR &amp; <ref refid="group___peripheral___registers___bits___definition_1ga15bf2269500dc97e137315f44aa015c9" kindref="member">RCC_CFGR_SWS</ref>)</initializer>
        <briefdescription>
<para>Macro to get the clock source used as system clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>clock source used as system clock. The returned value can be one of the following: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___system___clock___source___status_1ga0d6c2b0b2d59e6591295649853bb2abd" kindref="member">RCC_SYSCLKSOURCE_STATUS_HSI</ref> HSI used as system clock. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source___status_1ga3847769265bf19becf7b976a7e908a64" kindref="member">RCC_SYSCLKSOURCE_STATUS_HSE</ref> HSE used as system clock. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source___status_1ga4f05019ec09da478d084f44dbaad7d6d" kindref="member">RCC_SYSCLKSOURCE_STATUS_PLLCLK</ref> PLL used as system clock. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source___status_1ga5af6b8ed9e8bc883fc7483547bfd6992" kindref="member">RCC_SYSCLKSOURCE_STATUS_LSI</ref> LSI used as system clock source. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___system___clock___source___status_1gaf3590365adbde2716a03aa8670f1fb4e" kindref="member">RCC_SYSCLKSOURCE_STATUS_LSE</ref> LSE used as system clock source. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2856" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1gad6731530ebbbcc0696e9bd94eb0d2724" prot="public" static="no">
        <name>__HAL_RCC_LSEDRIVE_CONFIG</name>
        <param><defname>__LSEDRIVE__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;BDCR, <ref refid="group___peripheral___registers___bits___definition_1gaa9e761cf5e09906a38e9c7e8e750514c" kindref="member">RCC_BDCR_LSEDRV</ref>, (uint32_t)(__LSEDRIVE__))</initializer>
        <briefdescription>
<para>Macro to configure the External Low Speed oscillator (LSE) drive capability. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>As the LSE is in the Backup domain and write access is denied to this domain after reset, you have to enable write access using <ref refid="group___p_w_r___exported___functions___group2_1ga3d07cef39bf294db4aed7e06e5dbf9af" kindref="member">HAL_PWR_EnableBkUpAccess()</ref> function before to configure the LSE (to be done once after reset). </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__LSEDRIVE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the new state of the LSE drive capability. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___l_s_e_drive___config_1gab5fa5b50304710db2d7f6d583a225da3" kindref="member">RCC_LSEDRIVE_LOW</ref> LSE oscillator low drive capability. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___l_s_e_drive___config_1ga1151beb7f9869e91fe7617936ad0efff" kindref="member">RCC_LSEDRIVE_MEDIUMLOW</ref> LSE oscillator medium low drive capability. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___l_s_e_drive___config_1ga295eed1e1368d526fa0f6356ceecbc48" kindref="member">RCC_LSEDRIVE_MEDIUMHIGH</ref> LSE oscillator medium high drive capability. </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___l_s_e_drive___config_1ga90b0854f3813d7ab2781519bfa58fd95" kindref="member">RCC_LSEDRIVE_HIGH</ref> LSE oscillator high drive capability. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2872" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2872" bodyend="2873"/>
      </memberdef>
      <memberdef kind="define" id="group___r_c_c___clock___configuration_1ga7e5f7f1efc92794b6f0e96068240b45e" prot="public" static="no">
        <name>__HAL_RCC_MCO1_CONFIG</name>
        <param><defname>__MCOCLKSOURCE__</defname></param>
        <param><defname>__MCODIV__</defname></param>
        <initializer>  <ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(<ref refid="group___peripheral__declaration_1ga74944438a086975793d26ae48d5882d4" kindref="member">RCC</ref>-&gt;CFGR, (<ref refid="group___peripheral___registers___bits___definition_1ga76304e842d0244575776a28f82cafcfd" kindref="member">RCC_CFGR_MCOSEL</ref> | <ref refid="group___peripheral___registers___bits___definition_1ga2c2055812655d6acfda9a73dd2e94e10" kindref="member">RCC_CFGR_MCOPRE</ref>), ((__MCOCLKSOURCE__) | (__MCODIV__)))</initializer>
        <briefdescription>
<para>Macro to configure the Microcontroller output clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__MCOCLKSOURCE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the MCO clock source. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___source_1ga725a16362f3324ef5866dc5a1ff07cf5" kindref="member">RCC_MCO1SOURCE_NOCLOCK</ref> MCO output disabled </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___source_1gae8ca2959a1252ecd319843da02c79526" kindref="member">RCC_MCO1SOURCE_SYSCLK</ref> System clock selected as MCO source </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___source_1gad99c388c455852143220397db3730635" kindref="member">RCC_MCO1SOURCE_HSI</ref> HSI clock selected as MCO source </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___source_1ga5582d2ab152eb440a6cc3ae4833b043f" kindref="member">RCC_MCO1SOURCE_HSE</ref> HSE clock selected as MCO sourcee </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___source_1ga79d888f2238eaa4e4b8d02b3900ea18b" kindref="member">RCC_MCO1SOURCE_PLLCLK</ref> Main PLL clock selected as MCO source </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___source_1ga4ada18d28374df66c1b6da16606c23d8" kindref="member">RCC_MCO1SOURCE_LSI</ref> LSI clock selected as MCO source </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___source_1gaa01b6cb196df3a4ad690f8bcaa4d0621" kindref="member">RCC_MCO1SOURCE_LSE</ref> LSE clock selected as MCO source </para>
</listitem>
<listitem><para>RCC_MCO1SOURCE_PLLPCLK PLLP output clock selected as MCO source </para>
</listitem>
<listitem><para>RCC_MCO1SOURCE_PLLQCLK PLLQ output clock selected as MCO source </para>
</listitem>
<listitem><para>RCC_MCO1SOURCE_RTCCLK RTC clock selected as MCO source </para>
</listitem>
<listitem><para>RCC_MCO1SOURCE_RTC_WKUP RTC_WKUP clock selected as MCO source  </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>__MCODIV__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the MCO clock prescaler. This parameter can be one of the following values: <itemizedlist>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1ga438d8c3bead4e1ec5dd5757cb0313d53" kindref="member">RCC_MCODIV_1</ref> MCO clock source is divided by 1 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1ga6198330847077f4da351915518140bfc" kindref="member">RCC_MCODIV_2</ref> MCO clock source is divided by 2 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1ga1bdc2eb56aaeb53dc3ca5cd72f22d4c8" kindref="member">RCC_MCODIV_4</ref> MCO clock source is divided by 4 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1gadb84d9a10db2c49376be8fada619fe08" kindref="member">RCC_MCODIV_8</ref> MCO clock source is divided by 8 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1ga3ab3ab9547ef8800355111517b547882" kindref="member">RCC_MCODIV_16</ref> MCO clock source is divided by 16 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1ga6992ae7e6940f17362bcf2107c634cb3" kindref="member">RCC_MCODIV_32</ref> MCO clock source is divided by 32 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1ga2330ed42b1743f239ccdd37f7df6635b" kindref="member">RCC_MCODIV_64</ref> MCO clock source is divided by 64 </para>
</listitem>
<listitem><para><ref refid="group___r_c_c___m_c_o1___clock___prescaler_1ga82bbfcc3bbd113b9d1b7a05c9db2dd24" kindref="member">RCC_MCODIV_128</ref> MCO clock source is divided by 128  </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" line="2908" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h" bodystart="2908" bodyend="2909"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>

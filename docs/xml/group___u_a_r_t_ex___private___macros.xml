<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="group___u_a_r_t_ex___private___macros" kind="group">
    <compoundname>UARTEx_Private_Macros</compoundname>
    <title>UARTEx Private Macros</title>
    <sectiondef kind="define">
      <memberdef kind="define" id="group___u_a_r_t_ex___private___macros_1gad9330184a8bd9399a36bcc93215a50d1" prot="public" static="no">
        <name>UART_MASK_COMPUTATION</name>
        <param><defname>__HANDLE__</defname></param>
        <briefdescription>
<para>Report the UART mask to apply to retrieve the received data according to the word length and to the parity bits activation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If PCE = 1, the parity bit is not included in the data extracted by the reception API(). This masking operation is not carried out in the case of DMA transfers. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__HANDLE__</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the UART Handle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>mask to apply to UART RDR register is stored in (<bold>HANDLE</bold>)-&gt;Mask field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="670" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="670" bodyend="709"/>
      </memberdef>
      <memberdef kind="define" id="group___u_a_r_t_ex___private___macros_1gaf856254e5a61d2ee81086918bffabde5" prot="public" static="no">
        <name>IS_UART_WORD_LENGTH</name>
        <param><defname>__LENGTH__</defname></param>
        <initializer>                                         (((__LENGTH__) == <ref refid="group___u_a_r_t_ex___word___length_1gadaec9a23646032a333a5327d66aae4fe" kindref="member">UART_WORDLENGTH_7B</ref>) || \
                                         ((__LENGTH__) == <ref refid="group___u_a_r_t_ex___word___length_1gaf394e9abaf17932ee89591f990fe6407" kindref="member">UART_WORDLENGTH_8B</ref>) || \
                                         ((__LENGTH__) == <ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>))</initializer>
        <briefdescription>
<para>Ensure that UART frame length is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__LENGTH__</parametername>
</parameternamelist>
<parameterdescription>
<para>UART frame length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SET</parametername>
</parameternamelist>
<parameterdescription>
<para>(<bold>LENGTH</bold> is valid) or RESET (<bold>LENGTH</bold> is invalid) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="716" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="716" bodyend="718"/>
      </memberdef>
      <memberdef kind="define" id="group___u_a_r_t_ex___private___macros_1gaa4cf2a15ad7ae46e2905debeef35a908" prot="public" static="no">
        <name>IS_UART_ADDRESSLENGTH_DETECT</name>
        <param><defname>__ADDRESS__</defname></param>
        <initializer>                                                   (((__ADDRESS__) == <ref refid="group___u_a_r_t_ex___wake_up___address___length_1ga6599292020c484faeea894307d9dc6d5" kindref="member">UART_ADDRESS_DETECT_4B</ref>) || \
                                                   ((__ADDRESS__) == <ref refid="group___u_a_r_t_ex___wake_up___address___length_1ga4dbd5995e0e4998cb1a312c183d7cbb0" kindref="member">UART_ADDRESS_DETECT_7B</ref>))</initializer>
        <briefdescription>
<para>Ensure that UART wake-up address length is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__ADDRESS__</parametername>
</parameternamelist>
<parameterdescription>
<para>UART wake-up address length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SET</parametername>
</parameternamelist>
<parameterdescription>
<para>(<bold>ADDRESS</bold> is valid) or RESET (<bold>ADDRESS</bold> is invalid) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="725" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="725" bodyend="726"/>
      </memberdef>
      <memberdef kind="define" id="group___u_a_r_t_ex___private___macros_1ga59f192f936bea1dac321a552ab3e662d" prot="public" static="no">
        <name>IS_UART_TXFIFO_THRESHOLD</name>
        <param><defname>__THRESHOLD__</defname></param>
        <initializer>                                                 (((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___t_x_f_i_f_o__threshold__level_1gac0167b844b8cc2d183b55a0b296b2803" kindref="member">UART_TXFIFO_THRESHOLD_1_8</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___t_x_f_i_f_o__threshold__level_1ga7b6a3451b4d3677ba49f05228832edad" kindref="member">UART_TXFIFO_THRESHOLD_1_4</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___t_x_f_i_f_o__threshold__level_1ga3ded7de796281c47106eab832068534d" kindref="member">UART_TXFIFO_THRESHOLD_1_2</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___t_x_f_i_f_o__threshold__level_1ga0dd7780c824caddd1476cb59b9d5e5d0" kindref="member">UART_TXFIFO_THRESHOLD_3_4</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___t_x_f_i_f_o__threshold__level_1ga8e36c5786a037adae9a124a3094fc374" kindref="member">UART_TXFIFO_THRESHOLD_7_8</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___t_x_f_i_f_o__threshold__level_1ga302d541c0419d26567cc0da09486e73d" kindref="member">UART_TXFIFO_THRESHOLD_8_8</ref>))</initializer>
        <briefdescription>
<para>Ensure that UART TXFIFO threshold level is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__THRESHOLD__</parametername>
</parameternamelist>
<parameterdescription>
<para>UART TXFIFO threshold level. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SET</parametername>
</parameternamelist>
<parameterdescription>
<para>(<bold>THRESHOLD</bold> is valid) or RESET (<bold>THRESHOLD</bold> is invalid) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="733" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="733" bodyend="738"/>
      </memberdef>
      <memberdef kind="define" id="group___u_a_r_t_ex___private___macros_1gac6cc8376326d3982bda0685dbaaff687" prot="public" static="no">
        <name>IS_UART_RXFIFO_THRESHOLD</name>
        <param><defname>__THRESHOLD__</defname></param>
        <initializer>                                                 (((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___r_x_f_i_f_o__threshold__level_1ga9cabde9885fe477df3625fa8fdc7a99a" kindref="member">UART_RXFIFO_THRESHOLD_1_8</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___r_x_f_i_f_o__threshold__level_1ga46898e3dbaa13a52a62ae7dbddc90cd5" kindref="member">UART_RXFIFO_THRESHOLD_1_4</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___r_x_f_i_f_o__threshold__level_1ga032d8a09e993ca8938eb6fa5b97f4d16" kindref="member">UART_RXFIFO_THRESHOLD_1_2</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___r_x_f_i_f_o__threshold__level_1ga822019dbcf489602fe72d84700655e27" kindref="member">UART_RXFIFO_THRESHOLD_3_4</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___r_x_f_i_f_o__threshold__level_1gaba2b8f47d6b307a644ec4dcd6d8202e4" kindref="member">UART_RXFIFO_THRESHOLD_7_8</ref>) || \
                                                 ((__THRESHOLD__) == <ref refid="group___u_a_r_t_ex___r_x_f_i_f_o__threshold__level_1gabc5dc474eeac764ab6e99435ace5ca21" kindref="member">UART_RXFIFO_THRESHOLD_8_8</ref>))</initializer>
        <briefdescription>
<para>Ensure that UART RXFIFO threshold level is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>__THRESHOLD__</parametername>
</parameternamelist>
<parameterdescription>
<para>UART RXFIFO threshold level. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SET</parametername>
</parameternamelist>
<parameterdescription>
<para>(<bold>THRESHOLD</bold> is valid) or RESET (<bold>THRESHOLD</bold> is invalid) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="745" column="9" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="745" bodyend="750"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>

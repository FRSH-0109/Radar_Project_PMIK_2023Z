<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_u_a_r_t___wake_up_type_def" kind="struct" language="C++" prot="public">
    <compoundname>UART_WakeUpTypeDef</compoundname>
    <includes refid="stm32g0xx__hal__uart__ex_8h" local="no">stm32g0xx_hal_uart_ex.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_u_a_r_t___wake_up_type_def_1a1146a984a15b77174e96057cb88e4f59" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t WakeUpEvent</definition>
        <argsstring></argsstring>
        <name>WakeUpEvent</name>
        <qualifiedname>UART_WakeUpTypeDef::WakeUpEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies which event will activate the Wakeup from Stop mode flag (WUF). This parameter can be a value of <ref refid="group___u_a_r_t___wake_up__from___stop___selection" kindref="compound">UART WakeUp From Stop Selection</ref>. If set to UART_WAKEUP_ON_ADDRESS, the two other fields below must be filled up. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="48" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_u_a_r_t___wake_up_type_def_1a5be92432486df9b5320d668c236e1b6f" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t AddressLength</definition>
        <argsstring></argsstring>
        <name>AddressLength</name>
        <qualifiedname>UART_WakeUpTypeDef::AddressLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies whether the address is 4 or 7-bit long. This parameter can be a value of <ref refid="group___u_a_r_t_ex___wake_up___address___length" kindref="compound">UARTEx WakeUp Address Length</ref>. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="53" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_u_a_r_t___wake_up_type_def_1ae2bbeaf207df18992544fd4193b34112" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Address</definition>
        <argsstring></argsstring>
        <name>Address</name>
        <qualifiedname>UART_WakeUpTypeDef::Address</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UART/USART node address (7-bit long max). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="56" column="11" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="56" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>UART wake up from stop mode parameters. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" line="46" column="1" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h" bodystart="47" bodyend="57"/>
    <listofallmembers>
      <member refid="struct_u_a_r_t___wake_up_type_def_1ae2bbeaf207df18992544fd4193b34112" prot="public" virt="non-virtual"><scope>UART_WakeUpTypeDef</scope><name>Address</name></member>
      <member refid="struct_u_a_r_t___wake_up_type_def_1a5be92432486df9b5320d668c236e1b6f" prot="public" virt="non-virtual"><scope>UART_WakeUpTypeDef</scope><name>AddressLength</name></member>
      <member refid="struct_u_a_r_t___wake_up_type_def_1a1146a984a15b77174e96057cb88e4f59" prot="public" virt="non-virtual"><scope>UART_WakeUpTypeDef</scope><name>WakeUpEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

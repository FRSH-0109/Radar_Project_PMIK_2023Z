<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="distance__sensor_8c" kind="file" language="C++">
    <compoundname>distance_sensor.c</compoundname>
    <includes refid="distance__sensor_8h" local="no">distance_sensor.h</includes>
    <incdepgraph>
      <node id="1">
        <label>RadarApp/DistanceSensorDriver/distance_sensor.c</label>
        <link refid="distance__sensor_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>distance_sensor.h</label>
        <link refid="distance__sensor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="distance__sensor_8c_1aea4bc35ea8c7e00d2399a54ba0eb870e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distanceSensorInit</definition>
        <argsstring>(distanceSensorStruct *sensor, double ticksToDistanceFactor)</argsstring>
        <name>distanceSensorInit</name>
        <param>
          <type><ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ticksToDistanceFactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DistanceSensorDriver/distance_sensor.c" line="32" column="6" bodyfile="RadarApp/DistanceSensorDriver/distance_sensor.c" bodystart="32" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="distance__sensor_8c_1af9aace1b44b73111e15aa39f06f43456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__</definition>
        <argsstring>((weak))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(weak)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DistanceSensorDriver/distance_sensor.c" line="49" column="1" bodyfile="RadarApp/DistanceSensorDriver/distance_sensor.c" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="distance__sensor_8c_1a964e472531fcf3cede5de7d5b346e71b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distanceSensorSendTrig</definition>
        <argsstring>(distanceSensorStruct *sensor)</argsstring>
        <name>distanceSensorSendTrig</name>
        <param>
          <type><ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DistanceSensorDriver/distance_sensor.c" line="64" column="6" bodyfile="RadarApp/DistanceSensorDriver/distance_sensor.c" bodystart="64" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="distance__sensor_8c_1a964997505302c61de0ece0f151663c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distanceSensorGetEcho</definition>
        <argsstring>(distanceSensorStruct *sensor, uint16_t ticks)</argsstring>
        <name>distanceSensorGetEcho</name>
        <param>
          <type><ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DistanceSensorDriver/distance_sensor.c" line="76" column="6" bodyfile="RadarApp/DistanceSensorDriver/distance_sensor.c" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="distance__sensor_8c_1a37c464e811677e7c95d8331281304d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool distanceSensorGetReadyToMeasure</definition>
        <argsstring>(distanceSensorStruct *sensor)</argsstring>
        <name>distanceSensorGetReadyToMeasure</name>
        <param>
          <type><ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DistanceSensorDriver/distance_sensor.c" line="85" column="6" bodyfile="RadarApp/DistanceSensorDriver/distance_sensor.c" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="distance__sensor_8c_1af86e9e0dc722a2351b4e909023a53480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double distanceSensorGetDistance</definition>
        <argsstring>(distanceSensorStruct *sensor)</argsstring>
        <name>distanceSensorGetDistance</name>
        <param>
          <type><ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DistanceSensorDriver/distance_sensor.c" line="90" column="8" bodyfile="RadarApp/DistanceSensorDriver/distance_sensor.c" bodystart="90" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2012<sp/>by<sp/>Matteo<sp/>Franchin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Box.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Box<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Box<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>License<sp/>along<sp/>with<sp/>Box.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="distance__sensor_8h" kindref="compound">distance_sensor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distance__sensor_8c_1aea4bc35ea8c7e00d2399a54ba0eb870e" kindref="member">distanceSensorInit</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref>*<sp/>sensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ticksToDistanceFactor)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ticksToDistanceFactor<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a2d7e5dd7a479c4c7aef6e6133a1441c5" kindref="member">factor</ref><sp/>=<sp/>ticksToDistanceFactor;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a2d7e5dd7a479c4c7aef6e6133a1441c5" kindref="member">factor</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a633f87461ad14b25bca192cdf65d1604" kindref="member">ticks</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a0e5f10c80469543c7999d506055e4557" kindref="member">distnace</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a98d184d41dde3a0f043defb9ce57fb4a" kindref="member">readyToMeasure</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="distance__sensor_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a6b42437e0654d88f5b7a68caa22a733c" kindref="member">distanceSensorTrigOn</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref><sp/>*sensor)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="distance__sensor_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a9b87431c23c2a12baa879f62f43bda05" kindref="member">distanceSensorDelay</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref><sp/>*sensor,<sp/>uint32_t<sp/>delay)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="distance__sensor_8c_1af9aace1b44b73111e15aa39f06f43456" kindref="member">__attribute__</ref>((weak))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a902cb6ceee556ebfc81c8d1181d87cc9" kindref="member">distanceSensorTrigOff</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref><sp/>*sensor)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distance__sensor_8c_1a964e472531fcf3cede5de7d5b346e71b" kindref="member">distanceSensorSendTrig</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref>*<sp/>sensor)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sensor-&gt;<ref refid="structdistance_sensor_struct_1a98d184d41dde3a0f043defb9ce57fb4a" kindref="member">readyToMeasure</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a6b42437e0654d88f5b7a68caa22a733c" kindref="member">distanceSensorTrigOn</ref>(sensor);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a9b87431c23c2a12baa879f62f43bda05" kindref="member">distanceSensorDelay</ref>(sensor,<sp/>1);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>change<sp/>to<sp/>assembly<sp/>NOP&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a902cb6ceee556ebfc81c8d1181d87cc9" kindref="member">distanceSensorTrigOff</ref>(sensor);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a98d184d41dde3a0f043defb9ce57fb4a" kindref="member">readyToMeasure</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distance__sensor_8c_1a964997505302c61de0ece0f151663c4c" kindref="member">distanceSensorGetEcho</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref>*<sp/>sensor,<sp/>uint16_t<sp/>ticks)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a633f87461ad14b25bca192cdf65d1604" kindref="member">ticks</ref><sp/>=<sp/>ticks;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a0e5f10c80469543c7999d506055e4557" kindref="member">distnace</ref><sp/>=<sp/>(double)((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)sensor-&gt;<ref refid="structdistance_sensor_struct_1a633f87461ad14b25bca192cdf65d1604" kindref="member">ticks</ref><sp/>/<sp/>(double)sensor-&gt;<ref refid="structdistance_sensor_struct_1a2d7e5dd7a479c4c7aef6e6133a1441c5" kindref="member">factor</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a98d184d41dde3a0f043defb9ce57fb4a" kindref="member">readyToMeasure</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="distance__sensor_8c_1a37c464e811677e7c95d8331281304d33" kindref="member">distanceSensorGetReadyToMeasure</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref>*<sp/>sensor)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a98d184d41dde3a0f043defb9ce57fb4a" kindref="member">readyToMeasure</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="distance__sensor_8c_1af86e9e0dc722a2351b4e909023a53480" kindref="member">distanceSensorGetDistance</ref>(<ref refid="structdistance_sensor_struct" kindref="compound">distanceSensorStruct</ref>*<sp/>sensor)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sensor-&gt;<ref refid="structdistance_sensor_struct_1a0e5f10c80469543c7999d506055e4557" kindref="member">distnace</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="RadarApp/DistanceSensorDriver/distance_sensor.c"/>
  </compounddef>
</doxygen>

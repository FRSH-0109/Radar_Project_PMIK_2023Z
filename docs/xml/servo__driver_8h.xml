<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="servo__driver_8h" kind="file" language="C++">
    <compoundname>servo_driver.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="main_8c" local="yes">Core/Src/main.c</includedby>
    <includedby refid="radar_8h" local="yes">RadarApp/RadarDriver/radar.h</includedby>
    <includedby refid="servo__driver_8c" local="yes">RadarApp/ServoDriver/servo_driver.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>RadarApp/ServoDriver/servo_driver.h</label>
        <link refid="servo__driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>Core/Src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="4">
        <label>RadarApp/RadarDriver/radar.c</label>
        <link refid="radar_8c"/>
      </node>
      <node id="3">
        <label>RadarApp/RadarDriver/radar.h</label>
        <link refid="radar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>RadarApp/ServoDriver/servo_driver.c</label>
        <link refid="servo__driver_8c"/>
      </node>
      <node id="1">
        <label>RadarApp/ServoDriver/servo_driver.h</label>
        <link refid="servo__driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>RadarApp/usart_custom/usart_custom.c</label>
        <link refid="usart__custom_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structservo_driver_struct" prot="public">servoDriverStruct</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="servo__driver_8h_1a7b73184f5eb708f2127342b793ecae91" prot="public" static="no">
        <name>SERVO_MIN_DEGREES</name>
        <initializer>0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum hardware servo position in degrees </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="17" column="9" bodyfile="RadarApp/ServoDriver/servo_driver.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="servo__driver_8h_1a74e21cbe86a16280fdf6c0d28f1c6954" prot="public" static="no">
        <name>SERVO_MAX_DEGREES</name>
        <initializer>180.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum hardware servo position in degrees </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="18" column="9" bodyfile="RadarApp/ServoDriver/servo_driver.h" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="servo__driver_8h_1a20a27d2eaa060a951a5807b5bb48919e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void servoDriverInit</definition>
        <argsstring>(servoDriverStruct *servoDriver, float dMin, float dMax, uint16_t pMin, uint16_t pMax)</argsstring>
        <name>servoDriverInit</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dMax</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>pMin</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>pMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for initialization of servo structure instance</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dMin</parametername>
</parameternamelist>
<parameterdescription>
<para>value of minimal degrees movement for servo </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dMax</parametername>
</parameternamelist>
<parameterdescription>
<para>value of maximal degrees movement for servo </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pMin</parametername>
</parameternamelist>
<parameterdescription>
<para>value of minimal pulse width corresponding to minimal degrees value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pMax</parametername>
</parameternamelist>
<parameterdescription>
<para>value of maximal pulse width corresponding to minimal degrees value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="45" column="6" bodyfile="RadarApp/ServoDriver/servo_driver.c" bodystart="13" bodyend="19" declfile="RadarApp/ServoDriver/servo_driver.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="servo__driver_8h_1a1acdc2cc47d587de4954d1e7602f4898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void servoDriverStart</definition>
        <argsstring>(servoDriverStruct *servoDriver)</argsstring>
        <name>servoDriverStart</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for starting servo movement</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="52" column="6" bodyfile="RadarApp/ServoDriver/servo_driver.c" bodystart="21" bodyend="24" declfile="RadarApp/ServoDriver/servo_driver.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="servo__driver_8h_1a632cccd31e765ad946feea85d0a13d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void servoDriverStop</definition>
        <argsstring>(servoDriverStruct *servoDriver)</argsstring>
        <name>servoDriverStop</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for stopping servo movement</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="59" column="6" bodyfile="RadarApp/ServoDriver/servo_driver.c" bodystart="26" bodyend="29" declfile="RadarApp/ServoDriver/servo_driver.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="servo__driver_8h_1a3a027ed11a1051d0c899706817c68e37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void servoDriverStartTimer</definition>
        <argsstring>(servoDriverStruct *servoDriver)</argsstring>
        <name>servoDriverStartTimer</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for starting timer paired with certain servo struct</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="66" column="6" bodyfile="Core/Src/main.c" bodystart="362" bodyend="368" declfile="RadarApp/ServoDriver/servo_driver.h" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="servo__driver_8h_1a9644009cc702a14f3a480ad472ee4d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void servoDriverStopTimer</definition>
        <argsstring>(servoDriverStruct *servoDriver)</argsstring>
        <name>servoDriverStopTimer</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for stopping timer paired with certain servo struct</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="73" column="6" bodyfile="Core/Src/main.c" bodystart="370" bodyend="376" declfile="RadarApp/ServoDriver/servo_driver.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="servo__driver_8h_1a5728d01171e0105187a4e732e23a1fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool servoDriverSetDegrees</definition>
        <argsstring>(servoDriverStruct *servoDriver, float degrees)</argsstring>
        <name>servoDriverSetDegrees</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <param>
          <type>float</type>
          <declname>degrees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for setting servo position in degrees</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>value of degrees to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool is action was successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="82" column="6" bodyfile="RadarApp/ServoDriver/servo_driver.c" bodystart="41" bodyend="58" declfile="RadarApp/ServoDriver/servo_driver.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="servo__driver_8h_1a5ae45f5c916eb47431e59f94d645bbc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t servoDriverDegreesToPulseWidth</definition>
        <argsstring>(servoDriverStruct *servoDriver, float degrees)</argsstring>
        <name>servoDriverDegreesToPulseWidth</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <param>
          <type>float</type>
          <declname>degrees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for converting degrees value into pulse width</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>value of degrees to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t value of corresponding pulse width </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="91" column="10" bodyfile="RadarApp/ServoDriver/servo_driver.c" bodystart="60" bodyend="64" declfile="RadarApp/ServoDriver/servo_driver.h" declline="91" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="servo__driver_8h_1aa8a4bdef9b3e742a5e225dd29a804db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void servoDriverSetPulseWidth</definition>
        <argsstring>(servoDriverStruct *servoDriver)</argsstring>
        <name>servoDriverSetPulseWidth</name>
        <param>
          <type><ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> *</type>
          <declname>servoDriver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for setting pulse width from struct into timer instance</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>servoDriver</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref> struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/ServoDriver/servo_driver.h" line="98" column="6" bodyfile="Core/Src/main.c" bodystart="378" bodyend="384" declfile="RadarApp/ServoDriver/servo_driver.h" declline="98" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>File containing code of servomechanism driver controlled by PWM, which was created for Radar embedded project. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Kami Kośnik, Kacper Radzikowski </para>
</simplesect>
<simplesect kind="date"><para>20 Nov 2023 </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://github.com/FRSH-0109/Radar_Project_PMIK_2023Z">https://github.com/FRSH-0109/Radar_Project_PMIK_2023Z</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SERVO_DRIVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_DRIVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="servo__driver_8h_1a7b73184f5eb708f2127342b793ecae91" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_MIN_DEGREES<sp/>0.0f<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="servo__driver_8h_1a74e21cbe86a16280fdf6c0d28f1c6954" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVO_MAX_DEGREES<sp/>180.0f<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="structservo_driver_struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25" refid="structservo_driver_struct_1afc1af0b1401452570571cb2261fae0a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structservo_driver_struct_1afc1af0b1401452570571cb2261fae0a2" kindref="member">degreesMin</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="structservo_driver_struct_1ad7d129de79462605d163ac9cd0153101" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structservo_driver_struct_1ad7d129de79462605d163ac9cd0153101" kindref="member">degreesMax</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="structservo_driver_struct_1ae58cfcf62f825adac798acdb7328024e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structservo_driver_struct_1ae58cfcf62f825adac798acdb7328024e" kindref="member">pulseWidthMin</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="structservo_driver_struct_1a06b7608e42efb1b7afa8b4c852bb609d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structservo_driver_struct_1a06b7608e42efb1b7afa8b4c852bb609d" kindref="member">pulseWidthMax</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="structservo_driver_struct_1ab5714dc534cee43335450548d8d5e79f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structservo_driver_struct_1ab5714dc534cee43335450548d8d5e79f" kindref="member">positionInDegrees</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="structservo_driver_struct_1a5ca561b85876367a491830913bd31c53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structservo_driver_struct_1a5ca561b85876367a491830913bd31c53" kindref="member">positionInPulseWidth</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="servo__driver_8h_1a20a27d2eaa060a951a5807b5bb48919e" kindref="member">servoDriverInit</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dMax,<sp/>uint16_t<sp/>pMin,<sp/>uint16_t<sp/>pMax);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="servo__driver_8h_1a1acdc2cc47d587de4954d1e7602f4898" kindref="member">servoDriverStart</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="servo__driver_8h_1a632cccd31e765ad946feea85d0a13d8d" kindref="member">servoDriverStop</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="servo__driver_8h_1a3a027ed11a1051d0c899706817c68e37" kindref="member">servoDriverStartTimer</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="servo__driver_8h_1a9644009cc702a14f3a480ad472ee4d6a" kindref="member">servoDriverStopTimer</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="servo__driver_8h_1a5728d01171e0105187a4e732e23a1fd9" kindref="member">servoDriverSetDegrees</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">uint16_t<sp/><ref refid="servo__driver_8h_1a5ae45f5c916eb47431e59f94d645bbc7" kindref="member">servoDriverDegreesToPulseWidth</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="servo__driver_8h_1aa8a4bdef9b3e742a5e225dd29a804db6" kindref="member">servoDriverSetPulseWidth</ref>(<ref refid="structservo_driver_struct" kindref="compound">servoDriverStruct</ref><sp/>*servoDriver);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="RadarApp/ServoDriver/servo_driver.h"/>
  </compounddef>
</doxygen>

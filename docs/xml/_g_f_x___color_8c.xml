<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_g_f_x___color_8c" kind="file" language="C++">
    <compoundname>GFX_Color.c</compoundname>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includes refid="_g_f_x___color_8h" local="yes">GFX_Color.h</includes>
    <includes local="yes">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32g0xx_hal_conf.h</label>
        <link refid="stm32g0xx__hal__conf_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stm32g0xx.h</label>
        <link refid="stm32g0xx_8h"/>
      </node>
      <node id="8">
        <label>Legacy/stm32_hal_legacy.h</label>
        <link refid="stm32__hal__legacy_8h"/>
      </node>
      <node id="3">
        <label>stm32g0xx_hal.h</label>
        <link refid="stm32g0xx__hal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stm32g0xx_hal_cortex.h</label>
        <link refid="stm32g0xx__hal__cortex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32g0xx_hal_def.h</label>
        <link refid="stm32g0xx__hal__def_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32g0xx_hal_dma.h</label>
        <link refid="stm32g0xx__hal__dma_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stm32g0xx_hal_dma_ex.h</label>
        <link refid="stm32g0xx__hal__dma__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stm32g0xx_hal_exti.h</label>
        <link refid="stm32g0xx__hal__exti_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32g0xx_hal_flash.h</label>
        <link refid="stm32g0xx__hal__flash_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32g0xx_hal_flash_ex.h</label>
        <link refid="stm32g0xx__hal__flash__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32g0xx_hal_gpio.h</label>
        <link refid="stm32g0xx__hal__gpio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stm32g0xx_hal_gpio_ex.h</label>
        <link refid="stm32g0xx__hal__gpio__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stm32g0xx_hal_pwr.h</label>
        <link refid="stm32g0xx__hal__pwr_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stm32g0xx_hal_pwr_ex.h</label>
        <link refid="stm32g0xx__hal__pwr__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stm32g0xx_hal_rcc.h</label>
        <link refid="stm32g0xx__hal__rcc_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stm32g0xx_hal_rcc_ex.h</label>
        <link refid="stm32g0xx__hal__rcc__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>stm32g0xx_hal_spi.h</label>
        <link refid="stm32g0xx__hal__spi_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stm32g0xx_hal_spi_ex.h</label>
        <link refid="stm32g0xx__hal__spi__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stm32g0xx_hal_tim.h</label>
        <link refid="stm32g0xx__hal__tim_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>stm32g0xx_hal_tim_ex.h</label>
        <link refid="stm32g0xx__hal__tim__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stm32g0xx_hal_uart.h</label>
        <link refid="stm32g0xx__hal__uart_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>stm32g0xx_hal_uart_ex.h</label>
        <link refid="stm32g0xx__hal__uart__ex_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stm32g0xx_ll_dma.h</label>
        <link refid="stm32g0xx__ll__dma_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stm32g0xx_ll_dmamux.h</label>
        <link refid="stm32g0xx__ll__dmamux_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stm32g0xx_ll_rcc.h</label>
        <link refid="stm32g0xx__ll__rcc_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>RadarApp/DisplayDriver/GFX_Color.c</label>
        <link refid="_g_f_x___color_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>GFX_Color.h</label>
        <link refid="_g_f_x___color_8h"/>
      </node>
      <node id="34">
        <label>math.h</label>
      </node>
      <node id="30">
        <label>stdbool.h</label>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="32">
        <label>stdint.h</label>
      </node>
      <node id="33">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" prot="public" static="no">
        <name>_swap_int</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>{ int t = a; a = b; b = t; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="22" column="9" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" prot="public" static="no" mutable="no">
        <type>const uint8_t *</type>
        <definition>const uint8_t* font</definition>
        <argsstring></argsstring>
        <name>font</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="25" column="15" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="26" column="9" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_g_f_x___color_8c_1af77ce2e4887fd5ac5a1b2d1db4e035c1" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double sinus_LUT[]</definition>
        <argsstring>[]</argsstring>
        <name>sinus_LUT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="472" column="14" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="472" bodyend="565"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_g_f_x___color_8c_1a596e777e1054a75cc927606847f187ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_SetFont</definition>
        <argsstring>(const uint8_t *font_t)</argsstring>
        <name>GFX_SetFont</name>
        <param>
          <type>const uint8_t *</type>
          <declname>font_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="28" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a25bf38fe8e0c3d3a242a6ade2b366ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_SetFontSize</definition>
        <argsstring>(uint8_t size_t)</argsstring>
        <name>GFX_SetFontSize</name>
        <param>
          <type>uint8_t</type>
          <declname>size_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="33" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1afc7fa4357b8e39e7921b39f91afed253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GFX_GetFontHeight</definition>
        <argsstring>(void)</argsstring>
        <name>GFX_GetFontHeight</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="39" column="9" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a0baffeeea8d7717541e68161b398d568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GFX_GetFontWidth</definition>
        <argsstring>(void)</argsstring>
        <name>GFX_GetFontWidth</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="44" column="9" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1ad0d8418c19681d21ede57c9f94002c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GFX_GetFontSize</definition>
        <argsstring>(void)</argsstring>
        <name>GFX_GetFontSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="49" column="9" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1ace713583b87d448f79610acb3fd279a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawChar</definition>
        <argsstring>(int x, int y, char chr, ColorType color)</argsstring>
        <name>GFX_DrawChar</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="54" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="54" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a344587315e8efa17178ab82ab2bb013c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawChar_const_size</definition>
        <argsstring>(int x, int y, char chr, ColorType color, uint8_t const_size)</argsstring>
        <name>GFX_DrawChar_const_size</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>const_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="74" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="74" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1ae4afef6fed31387849b2bddd1f242abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawString</definition>
        <argsstring>(int x, int y, char *str, ColorType color)</argsstring>
        <name>GFX_DrawString</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="95" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="95" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a53ffa293c0fc65aa299dc03c824729b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawString_const_size</definition>
        <argsstring>(int x, int y, char *str, ColorType color, uint8_t const_size)</argsstring>
        <name>GFX_DrawString_const_size</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>const_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="111" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="111" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a4de11e88bf4b96bd5dfdbb5c3940d0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_WriteLine</definition>
        <argsstring>(int x_start, int y_start, int x_end, int y_end, ColorType color)</argsstring>
        <name>GFX_WriteLine</name>
        <param>
          <type>int</type>
          <declname>x_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_end</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="130" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="130" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawFastVLine</definition>
        <argsstring>(int x_start, int y_start, int h, ColorType color)</argsstring>
        <name>GFX_DrawFastVLine</name>
        <param>
          <type>int</type>
          <declname>x_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="171" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawFastHLine</definition>
        <argsstring>(int x_start, int y_start, int w, ColorType color)</argsstring>
        <name>GFX_DrawFastHLine</name>
        <param>
          <type>int</type>
          <declname>x_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="176" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1ad3342c4916c09b7e6264afa73c533382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawLine</definition>
        <argsstring>(int x_start, int y_start, int x_end, int y_end, ColorType color)</argsstring>
        <name>GFX_DrawLine</name>
        <param>
          <type>int</type>
          <declname>x_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_end</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="181" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="181" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a9c4f1dd628691910617cfc6875f36696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawRectangle</definition>
        <argsstring>(int x, int y, uint16_t w, uint16_t h, ColorType color)</argsstring>
        <name>GFX_DrawRectangle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="196" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="196" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1aa4174018595051ef59fa9b443865bd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawFillRectangle</definition>
        <argsstring>(int x, int y, uint16_t w, uint16_t h, ColorType color)</argsstring>
        <name>GFX_DrawFillRectangle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="207" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="207" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1ac01dbc1da0cefba24b38056b49bdd8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawCircle</definition>
        <argsstring>(int x0, int y0, uint16_t r, ColorType color)</argsstring>
        <name>GFX_DrawCircle</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="216" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="216" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a7e0aa6a2910ddecdf56189ec3903d25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawCircleHelper</definition>
        <argsstring>(int x0, int y0, uint16_t r, uint8_t cornername, ColorType color)</argsstring>
        <name>GFX_DrawCircleHelper</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cornername</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="252" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="252" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a71f40ff1a48fe67b2a27e4dcc0700f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawFillCircleHelper</definition>
        <argsstring>(int x0, int y0, uint16_t r, uint8_t cornername, int16_t delta, ColorType color)</argsstring>
        <name>GFX_DrawFillCircleHelper</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cornername</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="289" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="289" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a1d7cd8472bce76c8dd8bbba7ab53e10b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawFillCircle</definition>
        <argsstring>(int x0, int y0, uint16_t r, ColorType color)</argsstring>
        <name>GFX_DrawFillCircle</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="320" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="320" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a2e36718ba835609b1aecd4ddf3131302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawRoundRectangle</definition>
        <argsstring>(int x, int y, uint16_t w, uint16_t h, uint16_t r, ColorType color)</argsstring>
        <name>GFX_DrawRoundRectangle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="328" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="328" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1abacc0a541cb47255ef77bdbf64471653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawFillRoundRectangle</definition>
        <argsstring>(int x, int y, uint16_t w, uint16_t h, uint16_t r, ColorType color)</argsstring>
        <name>GFX_DrawFillRoundRectangle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="342" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="342" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a2d76c57a88461e77257af6ab5df26235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawTriangle</definition>
        <argsstring>(int x0, int y0, int x1, int y1, int x2, int y2, ColorType color)</argsstring>
        <name>GFX_DrawTriangle</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="354" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="354" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a2dd7abbfd0a6c989d5a317f238d5ce21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_DrawFillTriangle</definition>
        <argsstring>(int x0, int y0, int x1, int y1, int x2, int y2, ColorType color)</argsstring>
        <name>GFX_DrawFillTriangle</name>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="362" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="362" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a9a9fc6c36509ec595d6d36681a270cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_Image</definition>
        <argsstring>(int x, int y, const uint8_t *img, uint16_t w, uint16_t h)</argsstring>
        <name>GFX_Image</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="456" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="456" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1a1ff39d21717667ba893a6a1bcd25c271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double sinus</definition>
        <argsstring>(uint16_t angle)</argsstring>
        <name>sinus</name>
        <param>
          <type>uint16_t</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="567" column="8" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="567" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="_g_f_x___color_8c_1aab6a1316ded700e486a3282035f61c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GFX_ImageRotate</definition>
        <argsstring>(int x, int y, const uint8_t *img, uint8_t w, uint8_t h, ColorType color, uint16_t angle)</argsstring>
        <name>GFX_ImageRotate</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/DisplayDriver/GFX_Color.c" line="577" column="6" bodyfile="RadarApp/DisplayDriver/GFX_Color.c" bodystart="577" bodyend="605"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>GFX_BW.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>MIT<sp/>License.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>25.05.2017</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Mateusz<sp/>Salamon</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>www.msalamon.pl</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>mateusz@msalamon.pl</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_g_f_x___color_8h" kindref="compound">GFX_Color.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_LINES<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>abs()<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_IMAGE_ROTATE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_swap_int(a,<sp/>b)<sp/>{<sp/>int<sp/>t<sp/>=<sp/>a;<sp/>a<sp/>=<sp/>b;<sp/>b<sp/>=<sp/>t;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/>USING_STRINGS<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">uint8_t<sp/><ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a596e777e1054a75cc927606847f187ce" kindref="member">GFX_SetFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>font_t)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref><sp/>=<sp/>font_t;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a25bf38fe8e0c3d3a242a6ade2b366ddd" kindref="member">GFX_SetFontSize</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">uint8_t<sp/><ref refid="_g_f_x___color_8c_1afc7fa4357b8e39e7921b39f91afed253" kindref="member">GFX_GetFontHeight</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[0];</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">uint8_t<sp/><ref refid="_g_f_x___color_8c_1a0baffeeea8d7717541e68161b398d568" kindref="member">GFX_GetFontWidth</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[1];</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">uint8_t<sp/><ref refid="_g_f_x___color_8c_1ad0d8418c19681d21ede57c9f94002c00" kindref="member">GFX_GetFontSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ace713583b87d448f79610acb3fd279a5" kindref="member">GFX_DrawChar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chr<sp/>&gt;<sp/>0x7E)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>chr<sp/>&gt;<sp/>&apos;~&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;<sp/>i&lt;<ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[1];<sp/>i++<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Each<sp/>column<sp/>(Width)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>line<sp/>=<sp/>(uint8_t)<ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[(chr-0x20)<sp/>*<sp/><ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[1]<sp/>+<sp/>i<sp/>+<sp/>2];<sp/></highlight><highlight class="comment">//<sp/>Takie<sp/>this<sp/>line,<sp/>(chr-0x20)<sp/>=<sp/>move<sp/>20<sp/>chars<sp/>back,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>j=0;<sp/>j&lt;font[0];<sp/>j++,<sp/>line<sp/>&gt;&gt;=<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>pixel<sp/>in<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(line<sp/>&amp;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>last<sp/>pixel<sp/>in<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x+i,<sp/>y+j,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>this<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aa4174018595051ef59fa9b443865bd7c" kindref="member">GFX_DrawFillRectangle</ref>(x+i*<ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref>,<sp/>y+j*<ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref>,<sp/><ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref>,<sp/><ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref>,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Or<sp/>bigger<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a344587315e8efa17178ab82ab2bb013c" kindref="member">GFX_DrawChar_const_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color,<sp/>uint8_t<sp/>const_size)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chr<sp/>&gt;<sp/>0x7E)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>chr<sp/>&gt;<sp/>&apos;~&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;<sp/>i&lt;<ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[1];<sp/>i++<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Each<sp/>column<sp/>(Width)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>line<sp/>=<sp/>(uint8_t)<ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[(chr-0x20)<sp/>*<sp/><ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[1]<sp/>+<sp/>i<sp/>+<sp/>2];<sp/></highlight><highlight class="comment">//<sp/>Takie<sp/>this<sp/>line,<sp/>(chr-0x20)<sp/>=<sp/>move<sp/>20<sp/>chars<sp/>back,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>j=0;<sp/>j&lt;font[0];<sp/>j++,<sp/>line<sp/>&gt;&gt;=<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>pixel<sp/>in<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(line<sp/>&amp;<sp/>1)<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>last<sp/>pixel<sp/>in<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(const_size<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x+i,<sp/>y+j,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>this<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aa4174018595051ef59fa9b443865bd7c" kindref="member">GFX_DrawFillRectangle</ref>(x+i*const_size,<sp/>y+j*const_size,<sp/>const_size,<sp/>const_size,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Or<sp/>bigger<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ae4afef6fed31387849b2bddd1f242abb" kindref="member">GFX_DrawString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_tmp<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>znak;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>znak<sp/>=<sp/>*str;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*str++)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ace713583b87d448f79610acb3fd279a5" kindref="member">GFX_DrawChar</ref>(x_tmp,<sp/>y,<sp/>znak,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>current<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_tmp<sp/>+=<sp/>((uint8_t)<ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[1]<sp/>*<sp/><ref refid="_g_f_x___color_8c_1ae5dc6ffcd9b7605c7787791e40cc6bb0" kindref="member">size</ref>)<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>X<sp/>drawing<sp/>pointer<sp/>do<sp/>char<sp/>width<sp/>+<sp/>1<sp/>(space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>znak<sp/>=<sp/>*str;<sp/></highlight><highlight class="comment">//<sp/>Next<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a53ffa293c0fc65aa299dc03c824729b4" kindref="member">GFX_DrawString_const_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color,<sp/>uint8_t<sp/>const_size)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_tmp<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>znak;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>znak<sp/>=<sp/>*str;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*str++)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a344587315e8efa17178ab82ab2bb013c" kindref="member">GFX_DrawChar_const_size</ref>(x_tmp,<sp/>y,<sp/>znak,<sp/>color,<sp/>const_size);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>current<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_tmp<sp/>+=<sp/>((uint8_t)<ref refid="_g_f_x___color_8c_1ad31c968c4933f88b77596e975d57fed0" kindref="member">font</ref>[1]<sp/>*<sp/>const_size)<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>X<sp/>drawing<sp/>pointer<sp/>do<sp/>char<sp/>width<sp/>+<sp/>1<sp/>(space)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>znak<sp/>=<sp/>*str;<sp/></highlight><highlight class="comment">//<sp/>Next<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_LINES<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a4de11e88bf4b96bd5dfdbb5c3940d0ab" kindref="member">GFX_WriteLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_end,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>steep<sp/>=<sp/>abs(y_end<sp/>-<sp/>y_start)<sp/>&gt;<sp/>abs(x_end<sp/>-<sp/>x_start);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(steep)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(x_start,<sp/>y_start);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(x_end,<sp/>y_end);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_start<sp/>&gt;<sp/>x_end)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(x_start,<sp/>x_end);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(y_start,<sp/>y_end);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>dx,<sp/>dy;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>x_end<sp/>-<sp/>x_start;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>abs(y_end<sp/>-<sp/>y_start);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>err<sp/>=<sp/>dx<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>ystep;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_start<sp/>&lt;<sp/>y_end)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ystep<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ystep<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>x_start&lt;=x_end;<sp/>x_start++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(steep)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(y_start,<sp/>x_start,<sp/>color);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x_start,<sp/>y_start,<sp/>color);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>-=<sp/>dy;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_start<sp/>+=<sp/>ystep;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>dx;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a4de11e88bf4b96bd5dfdbb5c3940d0ab" kindref="member">GFX_WriteLine</ref>(x_start,<sp/>y_start,<sp/>x_start,<sp/>y_start+h-1,<sp/>color);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a4de11e88bf4b96bd5dfdbb5c3940d0ab" kindref="member">GFX_WriteLine</ref>(x_start,<sp/>y_start,<sp/>x_start+w-1,<sp/>y_start,<sp/>color);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ad3342c4916c09b7e6264afa73c533382" kindref="member">GFX_DrawLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_end,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x_start<sp/>==<sp/>x_end){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y_start<sp/>&gt;<sp/>y_end)<sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(y_start,<sp/>y_end);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x_start,<sp/>y_start,<sp/>y_end<sp/>-<sp/>y_start<sp/>+<sp/>1,<sp/>color);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y_start<sp/>==<sp/>y_end){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x_start<sp/>&gt;<sp/>x_end)<sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(x_start,<sp/>x_end);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(x_start,<sp/>y_start,<sp/>x_end<sp/>-<sp/>x_start<sp/>+<sp/>1,<sp/>color);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a4de11e88bf4b96bd5dfdbb5c3940d0ab" kindref="member">GFX_WriteLine</ref>(x_start,<sp/>y_start,<sp/>x_end,<sp/>y_end,<sp/>color);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_RECTANGLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a9c4f1dd628691910617cfc6875f36696" kindref="member">GFX_DrawRectangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(x,<sp/>y,<sp/>w,<sp/>color);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(x,<sp/>y+h-1,<sp/>w,<sp/>color);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x,<sp/>y,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x+w-1,<sp/>y,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_FILL_RECTANGLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1aa4174018595051ef59fa9b443865bd7c" kindref="member">GFX_DrawFillRectangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=x;<sp/>i&lt;x+w;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(i,<sp/>y,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_CIRCLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1ac01dbc1da0cefba24b38056b49bdd8c4" kindref="member">GFX_DrawCircle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/>uint16_t<sp/>r,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>f<sp/>=<sp/>1<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_y<sp/>=<sp/>-2<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>y<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/><sp/>,<sp/>y0+r,<sp/>color);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/><sp/>,<sp/>y0-r,<sp/>color);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0+r,<sp/>y0<sp/><sp/>,<sp/>color);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0-r,<sp/>y0<sp/><sp/>,<sp/>color);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x&lt;y)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y--;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_y<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>+=<sp/>ddF_y;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_x<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>+=<sp/>ddF_x;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CIRCLE_HELPER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a7e0aa6a2910ddecdf56189ec3903d25e" kindref="member">GFX_DrawCircleHelper</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/>uint16_t<sp/>r,<sp/>uint8_t<sp/>cornername,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>f<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_y<sp/>=<sp/>-2<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>x<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>y<sp/><sp/><sp/><sp/><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x&lt;y)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y--;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_y<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_y;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_x<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_x;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x4)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x2)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>+<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x8)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>+<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>+<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>y,<sp/>y0<sp/>-<sp/>x,<sp/>color);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x0<sp/>-<sp/>x,<sp/>y0<sp/>-<sp/>y,<sp/>color);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FILL_CIRCLE_HELPER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a71f40ff1a48fe67b2a27e4dcc0700f97" kindref="member">GFX_DrawFillCircleHelper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/>uint16_t<sp/>r,<sp/>uint8_t<sp/>cornername,<sp/>int16_t<sp/>delta,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>f<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>-<sp/>r;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ddF_y<sp/>=<sp/>-2<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>x<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>y<sp/><sp/><sp/><sp/><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x&lt;y)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y--;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_y<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_y;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ddF_x<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/><sp/><sp/>+=<sp/>ddF_x;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x1)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x0+x,<sp/>y0-y,<sp/>2*y+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x0+y,<sp/>y0-x,<sp/>2*x+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cornername<sp/>&amp;<sp/>0x2)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x0-x,<sp/>y0-y,<sp/>2*y+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x0-y,<sp/>y0-x,<sp/>2*x+1+delta,<sp/>color);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_FILL_CIRCLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a1d7cd8472bce76c8dd8bbba7ab53e10b" kindref="member">GFX_DrawFillCircle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/>uint16_t<sp/>r,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x0,<sp/>y0-r,<sp/>2*r+1,<sp/>color);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a71f40ff1a48fe67b2a27e4dcc0700f97" kindref="member">GFX_DrawFillCircleHelper</ref>(x0,<sp/>y0,<sp/>r,<sp/>3,<sp/>0,<sp/>color);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_ROUND_RECTANGLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a2e36718ba835609b1aecd4ddf3131302" kindref="member">GFX_DrawRoundRectangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/>uint16_t<sp/>r,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(x+r<sp/><sp/>,<sp/>y<sp/><sp/><sp/><sp/>,<sp/>w-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(x+r<sp/><sp/>,<sp/>y+h-1,<sp/>w-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x<sp/><sp/><sp/><sp/>,<sp/>y+r<sp/><sp/>,<sp/>h-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ac8da7590cb8e13a8008c64d992d62f5d" kindref="member">GFX_DrawFastVLine</ref>(x+w-1,<sp/>y+r<sp/><sp/>,<sp/>h-2*r,<sp/>color);<sp/></highlight><highlight class="comment">//<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>four<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a7e0aa6a2910ddecdf56189ec3903d25e" kindref="member">GFX_DrawCircleHelper</ref>(x+r<sp/><sp/><sp/><sp/>,<sp/>y+r<sp/><sp/><sp/><sp/>,<sp/>r,<sp/>1,<sp/>color);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a7e0aa6a2910ddecdf56189ec3903d25e" kindref="member">GFX_DrawCircleHelper</ref>(x+w-r-1,<sp/>y+r<sp/><sp/><sp/><sp/>,<sp/>r,<sp/>2,<sp/>color);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a7e0aa6a2910ddecdf56189ec3903d25e" kindref="member">GFX_DrawCircleHelper</ref>(x+w-r-1,<sp/>y+h-r-1,<sp/>r,<sp/>4,<sp/>color);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a7e0aa6a2910ddecdf56189ec3903d25e" kindref="member">GFX_DrawCircleHelper</ref>(x+r<sp/><sp/><sp/><sp/>,<sp/>y+h-r-1,<sp/>r,<sp/>8,<sp/>color);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_FILL_ROUND_RECTANGLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1abacc0a541cb47255ef77bdbf64471653" kindref="member">GFX_DrawFillRoundRectangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/>uint16_t<sp/>r,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smarter<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aa4174018595051ef59fa9b443865bd7c" kindref="member">GFX_DrawFillRectangle</ref>(x+r,<sp/>y,<sp/>w-2*r,<sp/>h,<sp/>color);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>four<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a71f40ff1a48fe67b2a27e4dcc0700f97" kindref="member">GFX_DrawFillCircleHelper</ref>(x+w-r-1,<sp/>y+r,<sp/>r,<sp/>1,<sp/>h-2*r-1,<sp/>color);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1a71f40ff1a48fe67b2a27e4dcc0700f97" kindref="member">GFX_DrawFillCircleHelper</ref>(x+r<sp/><sp/><sp/><sp/>,<sp/>y+r,<sp/>r,<sp/>2,<sp/>h-2*r-1,<sp/>color);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_TRIANGLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a2d76c57a88461e77257af6ab5df26235" kindref="member">GFX_DrawTriangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ad3342c4916c09b7e6264afa73c533382" kindref="member">GFX_DrawLine</ref>(x0,<sp/>y0,<sp/>x1,<sp/>y1,<sp/>color);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ad3342c4916c09b7e6264afa73c533382" kindref="member">GFX_DrawLine</ref>(x1,<sp/>y1,<sp/>x2,<sp/>y2,<sp/>color);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ad3342c4916c09b7e6264afa73c533382" kindref="member">GFX_DrawLine</ref>(x2,<sp/>y2,<sp/>x0,<sp/>y0,<sp/>color);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_FILL_TRIANGLE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a2dd7abbfd0a6c989d5a317f238d5ce21" kindref="member">GFX_DrawFillTriangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>a,<sp/>b,<sp/>y,<sp/>last;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>coordinates<sp/>by<sp/>Y<sp/>order<sp/>(y2<sp/>&gt;=<sp/>y1<sp/>&gt;=<sp/>y0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(y0,<sp/>y1);<sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(x0,<sp/>x1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>&gt;<sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(y2,<sp/>y1);<sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(x2,<sp/>x1);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y0<sp/>&gt;<sp/>y1)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(y0,<sp/>y1);<sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(x0,<sp/>x1);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y0<sp/>==<sp/>y2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>awkward<sp/>all-on-same-line<sp/>case<sp/>as<sp/>its<sp/>own<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>b<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x1<sp/>&lt;<sp/>a)<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x1<sp/>&gt;<sp/>b)<sp/>b<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&lt;<sp/>a)<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x2<sp/>&gt;<sp/>b)<sp/>b<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(a,<sp/>y0,<sp/>b-a+1,<sp/>color);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>dx01<sp/>=<sp/>x1<sp/>-<sp/>x0,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>dy01<sp/>=<sp/>y1<sp/>-<sp/>y0,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>dx02<sp/>=<sp/>x2<sp/>-<sp/>x0,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>dy02<sp/>=<sp/>y2<sp/>-<sp/>y0,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>dx12<sp/>=<sp/>x2<sp/>-<sp/>x1,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>dy12<sp/>=<sp/>y2<sp/>-<sp/>y1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>sa<sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>sb<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>upper<sp/>part<sp/>of<sp/>triangle,<sp/>find<sp/>scanline<sp/>crossings<sp/>for<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0-1<sp/>and<sp/>0-2.<sp/><sp/>If<sp/>y1=y2<sp/>(flat-bottomed<sp/>triangle),<sp/>the<sp/>scanline<sp/>y1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>included<sp/>here<sp/>(and<sp/>second<sp/>loop<sp/>will<sp/>be<sp/>skipped,<sp/>avoiding<sp/>a<sp/>/0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>there),<sp/>otherwise<sp/>scanline<sp/>y1<sp/>is<sp/>skipped<sp/>here<sp/>and<sp/>handled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>second<sp/>loop...which<sp/>also<sp/>avoids<sp/>a<sp/>/0<sp/>error<sp/>here<sp/>if<sp/>y0=y1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(flat-topped<sp/>triangle).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y1<sp/>==<sp/>y2)<sp/>last<sp/>=<sp/>y1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>y1<sp/>scanline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>y1-1;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=y0;<sp/>y&lt;=last;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/><sp/><sp/>=<sp/>x0<sp/>+<sp/>sa<sp/>/<sp/>dy01;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/>=<sp/>x0<sp/>+<sp/>sb<sp/>/<sp/>dy02;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa<sp/>+=<sp/>dx01;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>+=<sp/>dx02;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>longhand:</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x0<sp/>+<sp/>(x1<sp/>-<sp/>x0)<sp/>*<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y1<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>x0<sp/>+<sp/>(x2<sp/>-<sp/>x0)<sp/>*<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y2<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a<sp/>&gt;<sp/>b)<sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(a,b);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(a,<sp/>y,<sp/>b-a+1,<sp/>color);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>lower<sp/>part<sp/>of<sp/>triangle,<sp/>find<sp/>scanline<sp/>crossings<sp/>for<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0-2<sp/>and<sp/>1-2.<sp/><sp/>This<sp/>loop<sp/>is<sp/>skipped<sp/>if<sp/>y1=y2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>sa<sp/>=<sp/>dx12<sp/>*<sp/>(y<sp/>-<sp/>y1);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>sb<sp/>=<sp/>dx02<sp/>*<sp/>(y<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>y&lt;=y2;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/><sp/><sp/>=<sp/>x1<sp/>+<sp/>sa<sp/>/<sp/>dy12;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/><sp/><sp/>=<sp/>x0<sp/>+<sp/>sb<sp/>/<sp/>dy02;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sa<sp/>+=<sp/>dx12;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>+=<sp/>dx02;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>longhand:</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x1<sp/>+<sp/>(x2<sp/>-<sp/>x1)<sp/>*<sp/>(y<sp/>-<sp/>y1)<sp/>/<sp/>(y2<sp/>-<sp/>y1);</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>x0<sp/>+<sp/>(x2<sp/>-<sp/>x0)<sp/>*<sp/>(y<sp/>-<sp/>y0)<sp/>/<sp/>(y2<sp/>-<sp/>y0);</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a<sp/>&gt;<sp/>b)<sp/><ref refid="_g_f_x___color_8c_1aaecec52c343f264e86fb7309e2948a08" kindref="member">_swap_int</ref>(a,b);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8c_1ab89ac564f88a637a1a7d007c347480e1" kindref="member">GFX_DrawFastHLine</ref>(a,<sp/>y,<sp/>b-a+1,<sp/>color);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_IMAGE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>AVR_USING<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GFX_Image_P(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>uint8_t<sp/>*img,<sp/>uint8_t<sp/>w,<sp/>uint8_t<sp/>h,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i,<sp/>j,<sp/>byteWidth<sp/>=<sp/>(w+7)/8;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>h;<sp/>j++)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w;<sp/>i++)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pgm_read_byte(img<sp/>+<sp/>j<sp/>*byteWidth<sp/>+<sp/>i<sp/>/8)<sp/>&amp;<sp/>(128<sp/>&gt;&gt;<sp/>(i&amp;7))<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x+i,<sp/>y+j,<sp/>color);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STM32_USING<sp/>==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a9a9fc6c36509ec595d6d36681a270cca" kindref="member">GFX_Image</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*img,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*Ptr<sp/>=<sp/>img;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>h;<sp/>j++)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w;<sp/>i++)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(x+i,<sp/>y+j,<sp/>(*Ptr<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((*(Ptr+1))<sp/>&amp;<sp/>0xFF)<sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USING_IMAGE_ROTATE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1af77ce2e4887fd5ac5a1b2d1db4e035c1" kindref="member">sinus_LUT</ref>[]<sp/>=</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight><highlight class="comment">//<sp/>0*<sp/>to<sp/>90*<sp/>=<sp/>91<sp/>valuse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0000,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0175,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0349,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0523,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0698,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0872,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.1045,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.1219,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.1392,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.1564,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.1736,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.1908,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2079,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2250,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2419,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2588,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2756,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2924,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3090,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3256,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3420,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3584,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3746,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3907,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.4067,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.4226,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.4384,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.4540,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.4695,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.4848,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5000,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5150,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5299,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5446,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5592,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5736,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5878,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6018,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6157,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6293,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6428,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6561,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6691,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6820,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6947,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7071,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7193,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7314,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7431,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7547,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7660,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7771,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7880,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.7986,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8090,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8192,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8290,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8387,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8480,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8572,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8660,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8746,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8829,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8910,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8988,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9063,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9135,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9205,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9272,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9336,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9397,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9455,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9511,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9563,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9613,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9659,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9703,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9744,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9781,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9816,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9848,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9877,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9903,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9925,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9945,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9962,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9976,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9986,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9994,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.9998,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0000,</highlight></codeline>
<codeline lineno="565"><highlight class="normal">};</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1a1ff39d21717667ba893a6a1bcd25c271" kindref="member">sinus</ref>(uint16_t<sp/>angle)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>%=<sp/>360;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((angle<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(angle<sp/>&lt;<sp/>90))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1af77ce2e4887fd5ac5a1b2d1db4e035c1" kindref="member">sinus_LUT</ref>[angle];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((angle<sp/>&gt;=<sp/>90)<sp/>&amp;&amp;<sp/>(angle<sp/>&lt;<sp/>180))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1af77ce2e4887fd5ac5a1b2d1db4e035c1" kindref="member">sinus_LUT</ref>[180<sp/>-<sp/>angle];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((angle<sp/>&gt;=<sp/>180)<sp/>&amp;&amp;<sp/>(angle<sp/>&lt;<sp/>270))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(<ref refid="_g_f_x___color_8c_1af77ce2e4887fd5ac5a1b2d1db4e035c1" kindref="member">sinus_LUT</ref>[angle<sp/>-<sp/>180]);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((angle<sp/>&gt;=<sp/>270)<sp/>&amp;&amp;<sp/>(angle<sp/>&lt;<sp/>360))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(<ref refid="_g_f_x___color_8c_1af77ce2e4887fd5ac5a1b2d1db4e035c1" kindref="member">sinus_LUT</ref>[180<sp/>-<sp/>(angle<sp/>-<sp/>180)]);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>never<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_g_f_x___color_8c_1aab6a1316ded700e486a3282035f61c87" kindref="member">GFX_ImageRotate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*img,<sp/>uint8_t<sp/>w,<sp/>uint8_t<sp/>h,<sp/><ref refid="_g_f_x___color_8h_1a8203569622d0ce5174c1debb0bce5046" kindref="member">ColorType</ref><sp/>color,<sp/>uint16_t<sp/>angle)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>angle<sp/>%=<sp/>360;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>wHalf<sp/>=<sp/>w/2;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>hHalf<sp/>=<sp/>h/2;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i,<sp/>j,<sp/>byteWidth<sp/>=<sp/>(w+7)/8;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinma<sp/>=<sp/><ref refid="_g_f_x___color_8c_1a1ff39d21717667ba893a6a1bcd25c271" kindref="member">sinus</ref>(angle);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosma<sp/>=<sp/><ref refid="_g_f_x___color_8c_1a1ff39d21717667ba893a6a1bcd25c271" kindref="member">sinus</ref>(angle<sp/>+<sp/>90);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>h;<sp/>j++)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w;<sp/>i++)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(img[j<sp/>*byteWidth<sp/>+<sp/>i<sp/>/8]<sp/>&amp;<sp/>(128<sp/>&gt;&gt;<sp/>(i&amp;7))<sp/>)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xt<sp/>=<sp/>i<sp/>-<sp/>wHalf;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yt<sp/>=<sp/>j<sp/>-<sp/>hHalf;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xs<sp/>=<sp/>(xt*cosma<sp/>-<sp/>yt*sinma)<sp/>+<sp/>wHalf;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ys<sp/>=<sp/>(xt*sinma<sp/>+<sp/>yt*cosma)<sp/>+<sp/>hHalf;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_g_f_x___color_8h_1ac101099e7c44cddd11b39d4b5d9b76e8" kindref="member">GFX_DrawPixel</ref>(xs+x,<sp/>ys+y,<sp/>color);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="RadarApp/DisplayDriver/GFX_Color.c"/>
  </compounddef>
</doxygen>

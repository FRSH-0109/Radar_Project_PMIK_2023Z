<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="usart__custom_8c" kind="file" language="C++">
    <compoundname>usart_custom.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="usart_8h" local="yes">usart.h</includes>
    <includes refid="stm32g0xx__hal__dma_8h" local="no">stm32g0xx_hal_dma.h</includes>
    <includes refid="usart__custom_8h" local="yes">usart_custom.h</includes>
    <includes refid="radar_8h" local="yes">radar.h</includes>
    <incdepgraph>
      <node id="4">
        <label>main.h</label>
        <link refid="main_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32g0xx_hal_conf.h</label>
        <link refid="stm32g0xx__hal__conf_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>usart.h</label>
        <link refid="usart_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stm32g0xx.h</label>
        <link refid="stm32g0xx_8h"/>
      </node>
      <node id="10">
        <label>Legacy/stm32_hal_legacy.h</label>
        <link refid="stm32__hal__legacy_8h"/>
      </node>
      <node id="5">
        <label>stm32g0xx_hal.h</label>
        <link refid="stm32g0xx__hal_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32g0xx_hal_cortex.h</label>
        <link refid="stm32g0xx__hal__cortex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stm32g0xx_hal_def.h</label>
        <link refid="stm32g0xx__hal__def_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stm32g0xx_hal_dma.h</label>
        <link refid="stm32g0xx__hal__dma_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stm32g0xx_hal_dma_ex.h</label>
        <link refid="stm32g0xx__hal__dma__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32g0xx_hal_exti.h</label>
        <link refid="stm32g0xx__hal__exti_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stm32g0xx_hal_flash.h</label>
        <link refid="stm32g0xx__hal__flash_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stm32g0xx_hal_flash_ex.h</label>
        <link refid="stm32g0xx__hal__flash__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32g0xx_hal_gpio.h</label>
        <link refid="stm32g0xx__hal__gpio_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stm32g0xx_hal_gpio_ex.h</label>
        <link refid="stm32g0xx__hal__gpio__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>stm32g0xx_hal_pwr.h</label>
        <link refid="stm32g0xx__hal__pwr_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stm32g0xx_hal_pwr_ex.h</label>
        <link refid="stm32g0xx__hal__pwr__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stm32g0xx_hal_rcc.h</label>
        <link refid="stm32g0xx__hal__rcc_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stm32g0xx_hal_rcc_ex.h</label>
        <link refid="stm32g0xx__hal__rcc__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stm32g0xx_hal_spi.h</label>
        <link refid="stm32g0xx__hal__spi_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>stm32g0xx_hal_spi_ex.h</label>
        <link refid="stm32g0xx__hal__spi__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stm32g0xx_hal_tim.h</label>
        <link refid="stm32g0xx__hal__tim_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>stm32g0xx_hal_tim_ex.h</label>
        <link refid="stm32g0xx__hal__tim__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>stm32g0xx_hal_uart.h</label>
        <link refid="stm32g0xx__hal__uart_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>stm32g0xx_hal_uart_ex.h</label>
        <link refid="stm32g0xx__hal__uart__ex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stm32g0xx_ll_dma.h</label>
        <link refid="stm32g0xx__ll__dma_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stm32g0xx_ll_dmamux.h</label>
        <link refid="stm32g0xx__ll__dmamux_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32g0xx_ll_rcc.h</label>
        <link refid="stm32g0xx__ll__rcc_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>distance_sensor.h</label>
        <link refid="distance__sensor_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>radar.h</label>
        <link refid="radar_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>servo_driver.h</label>
        <link refid="servo__driver_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>RadarApp/usart_custom/usart_custom.c</label>
        <link refid="usart__custom_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>usart_custom.h</label>
        <link refid="usart__custom_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>stdbool.h</label>
      </node>
      <node id="11">
        <label>stddef.h</label>
      </node>
      <node id="38">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="34">
        <label>stdlib.h</label>
      </node>
      <node id="35">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref></type>
        <definition>UART_Custom_HandleTypeDef huartPC</definition>
        <argsstring></argsstring>
        <name>huartPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="16" column="34" bodyfile="Core/Src/main.c" bodystart="55" bodyend="-1" declfile="RadarApp/usart_custom/usart_custom.c" declline="16" declcolumn="34"/>
      </memberdef>
      <memberdef kind="variable" id="usart__custom_8c_1a34251392f0d5e2461e3aef615918c235" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="group___d_m_a___exported___types_1ga41b754a906b86bce54dc79938970138b" kindref="member">DMA_HandleTypeDef</ref></type>
        <definition>DMA_HandleTypeDef hdma_usart1_rx</definition>
        <argsstring></argsstring>
        <name>hdma_usart1_rx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="17" column="26" bodyfile="Core/Src/usart.c" bodystart="28" bodyend="-1" declfile="RadarApp/usart_custom/usart_custom.c" declline="17" declcolumn="26"/>
      </memberdef>
      <memberdef kind="variable" id="usart__custom_8c_1a5af94ab36bfe698db3e6beea96d10a90" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="group___d_m_a___exported___types_1ga41b754a906b86bce54dc79938970138b" kindref="member">DMA_HandleTypeDef</ref></type>
        <definition>DMA_HandleTypeDef hdma_usart1_tx</definition>
        <argsstring></argsstring>
        <name>hdma_usart1_tx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="18" column="26" bodyfile="Core/Src/usart.c" bodystart="29" bodyend="-1" declfile="RadarApp/usart_custom/usart_custom.c" declline="18" declcolumn="26"/>
      </memberdef>
      <memberdef kind="variable" id="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref></type>
        <definition>UART_Queue uartQueuePC</definition>
        <argsstring></argsstring>
        <name>uartQueuePC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="19" column="19" bodyfile="Core/Src/main.c" bodystart="56" bodyend="-1" declfile="RadarApp/usart_custom/usart_custom.c" declline="19" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structradar_struct" kindref="compound">radarStruct</ref></type>
        <definition>radarStruct radar</definition>
        <argsstring></argsstring>
        <name>radar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="20" column="20" bodyfile="Core/Src/main.c" bodystart="52" bodyend="-1" declfile="RadarApp/usart_custom/usart_custom.c" declline="20" declcolumn="20"/>
      </memberdef>
      <memberdef kind="variable" id="usart__custom_8c_1adf53ce83636ba14bf6b66c48aae16e49" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structdraw_helper_struct" kindref="compound">drawHelperStruct</ref></type>
        <definition>drawHelperStruct drawHelper</definition>
        <argsstring></argsstring>
        <name>drawHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="21" column="25" bodyfile="Core/Src/main.c" bodystart="53" bodyend="-1" declfile="RadarApp/usart_custom/usart_custom.c" declline="21" declcolumn="25"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="usart__custom_8c_1ae07c419a1a1df7134ddbfedd9bdf7c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uartCustomInit</definition>
        <argsstring>(UART_Custom_HandleTypeDef *huartCustom, UART_HandleTypeDef *huart, uint16_t rxDataLen, uint16_t txDataLen)</argsstring>
        <name>uartCustomInit</name>
        <param>
          <type><ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> *</type>
          <declname>huartCustom</declname>
        </param>
        <param>
          <type><ref refid="group___u_a_r_t___exported___types_1ga5de4a49eb132735325e706f406c69d6e" kindref="member">UART_HandleTypeDef</ref> *</type>
          <declname>huart</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>rxDataLen</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>txDataLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for receiving next waiting data in queue</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>huartCustom</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> struct instance param huart pointer to UART_HandleTypeDef struct instance param rxDataLen value for maximum rx data length param txDataLen value for maximum tx data length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="23" column="6" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a123702bc9950b2a0ce9a34e889842f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref></type>
        <definition>HAL_StatusTypeDef uartCustomReceiveDMA</definition>
        <argsstring>(UART_Custom_HandleTypeDef *huartCustom)</argsstring>
        <name>uartCustomReceiveDMA</name>
        <param>
          <type><ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> *</type>
          <declname>huartCustom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for calling receiving process via uart with DMA</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>huartCustom</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> struct instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="32" column="26" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a74ea4ae09ad7d11a8ed037ed585f4c24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref></type>
        <definition>HAL_StatusTypeDef uartCustomTransmitDMA</definition>
        <argsstring>(UART_Custom_HandleTypeDef *huartCustom, uint16_t msgLen)</argsstring>
        <name>uartCustomTransmitDMA</name>
        <param>
          <type><ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> *</type>
          <declname>huartCustom</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>msgLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for calling DMA transmit via uart</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>huartCustom</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> struct instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msgLen</parametername>
</parameternamelist>
<parameterdescription>
<para>value for maximum tx data length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="38" column="26" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1af1e3696e453b196847ae422d3cbcd18c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CommandSearchForString</definition>
        <argsstring>(uint8_t *data, uint16_t dataLen, const char *str)</argsstring>
        <name>CommandSearchForString</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>dataLen</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="48" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="48" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a91d4fb9c30425703a0e31b8db32e88c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void removeChar</definition>
        <argsstring>(char *str, char c, uint16_t dataLen)</argsstring>
        <name>removeChar</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>dataLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="60" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="60" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a4dd5805db71c5e3e11920b812bddaa71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352" kindref="member">CommandType</ref></type>
        <definition>CommandType CommandDecode</definition>
        <argsstring>(uint8_t *data, uint16_t dataLen)</argsstring>
        <name>CommandDecode</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>dataLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for checking if any of uart commands is received</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to uin8_t type array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data to decoded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CommandType which was(or not) decoded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="73" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="73" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a0374253064abb32a5c8642a5a3fbbef7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitResponse</definition>
        <argsstring>(volatile UART_Queue *uartQueue, ResponseType respType)</argsstring>
        <name>uartTransmitResponse</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <param>
          <type><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7" kindref="member">ResponseType</ref></type>
          <declname>respType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="151" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="151" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a5a81647e8fc553d4a273bb972a44b923" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitPosition</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartTransmitPosition</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="176" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="176" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1abaeef904f374daf8278ab72c0daf649d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitStep</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartTransmitStep</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="185" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="185" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a346c92ca2cac6c08e8baa31a59a68ba8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitPositionMinMax</definition>
        <argsstring>(volatile UART_Queue *uartQueue, bool isMin)</argsstring>
        <name>uartTransmitPositionMinMax</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isMin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="194" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="194" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a30cc55926edd03d5fc1bcbb44a6a5860" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitSensorMeasure</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartTransmitSensorMeasure</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="210" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="210" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a5e7c212b56ffc34858a436777742380d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitSensorPeriod</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartTransmitSensorPeriod</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="219" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="219" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1ae15fc11694048357fc4198788da8cf2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitDrawScale</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartTransmitDrawScale</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="228" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="228" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1aef265e95be0d7b1a3da0f71a90a9c274" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uartTransmitDrawRules</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartTransmitDrawRules</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="237" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1abbc250ac23ac518f14aa24e1f9a11ead" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void uartQueueReceive</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartQueueReceive</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for receiving next waiting data in queue</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uartQueue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> struct instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="246" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="246" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1affe2663ea2814b2c9ab3695c28961355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void uartQueueInit</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartQueueInit</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for init uart queue structure</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uartQueue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> struct instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="388" column="6" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="388" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void uartQueueAdd</definition>
        <argsstring>(volatile UART_Queue *uartQueue, uint8_t *dataTxSource, uint16_t msgLen)</argsstring>
        <name>uartQueueAdd</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dataTxSource</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>msgLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for adding next data to be send via uart queue</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uartQueue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> struct instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataTxSource</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data array to be added to queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msgLen</parametername>
</parameternamelist>
<parameterdescription>
<para>value for added data buffer length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="397" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="397" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a971ac04f29008014c47a53f31a0eca02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void uartQueueClear</definition>
        <argsstring>(volatile UART_Queue *uartQueue)</argsstring>
        <name>uartQueueClear</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for clearing whole uart structure</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uartQueue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> struct instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="404" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="404" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="usart__custom_8c_1a434833c4433f588d5fda684a54dcb0ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void uartQueueTransmit</definition>
        <argsstring>(volatile UART_Queue *uartQueue, UART_Custom_HandleTypeDef *huartCustom)</argsstring>
        <name>uartQueueTransmit</name>
        <param>
          <type>volatile <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> *</type>
          <declname>uartQueue</declname>
        </param>
        <param>
          <type><ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> *</type>
          <declname>huartCustom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for transmitting next data in queue</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uartQueue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref> struct instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>huartCustom</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref> struct instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="RadarApp/usart_custom/usart_custom.c" line="415" column="13" bodyfile="RadarApp/usart_custom/usart_custom.c" bodystart="415" bodyend="437"/>
      </memberdef>
      <member refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kind="function"><name>HAL_UARTEx_RxEventCallback</name></member>
      <member refid="group___u_a_r_t___exported___functions___group2_1gabcdf9b59049eccbc87d54042f9235b1a" kind="function"><name>HAL_UART_TxCpltCallback</name></member>
      <member refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kind="function"><name>HAL_UART_ErrorCallback</name></member>
    </sectiondef>
    <briefdescription>
<para>Source file for custom uart handling, consists of all used variables, enums or functions that are connected directly with uart communication. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Kamil Kosnik, Kacper Radzikowski </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://github.com/FRSH-0109/Radar_Project_PMIK_2023Z">https://github.com/FRSH-0109/Radar_Project_PMIK_2023Z</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usart_8h" kindref="compound">usart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stm32g0xx__hal__dma_8h" kindref="compound">stm32g0xx_hal_dma.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usart__custom_8h" kindref="compound">usart_custom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="radar_8h" kindref="compound">radar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref><sp/><ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/><ref refid="usart__custom_8c_1a34251392f0d5e2461e3aef615918c235" kindref="member">hdma_usart1_rx</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/><ref refid="usart__custom_8c_1a5af94ab36bfe698db3e6beea96d10a90" kindref="member">hdma_usart1_tx</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/><ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structradar_struct" kindref="compound">radarStruct</ref><sp/><ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structdraw_helper_struct" kindref="compound">drawHelperStruct</ref><sp/><ref refid="usart__custom_8c_1adf53ce83636ba14bf6b66c48aae16e49" kindref="member">drawHelper</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8c_1ae07c419a1a1df7134ddbfedd9bdf7c91" kindref="member">uartCustomInit</ref>(<ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref><sp/>*huartCustom,<sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint16_t<sp/>rxDataLen,<sp/>uint16_t<sp/>txDataLen)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a1ed7dab212fde0a3a4600d33399c67b6" kindref="member">huart</ref><sp/>=<sp/>huart;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a9011455a25b27b0d2bc3cbd56eafb3ad" kindref="member">txTransmissionCmplt</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1aa2fa02d67a76264094f28e5349d128bd" kindref="member">txTransmissionCmpltTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a962988d59051dfab0ce7da4c9d66f7b2" kindref="member">dataRxMaxLen</ref><sp/>=<sp/>rxDataLen;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1aa1a20fe601cf7e4b3f0134222621c0ad" kindref="member">dataTxMaxLen</ref><sp/>=<sp/>txDataLen;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="usart__custom_8c_1a123702bc9950b2a0ce9a34e889842f74" kindref="member">uartCustomReceiveDMA</ref>(<ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref><sp/>*huartCustom)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a1ed7dab212fde0a3a4600d33399c67b6" kindref="member">huart</ref>,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gaf482a22a09d594e0aa687937aef17949" kindref="member">HAL_UARTEx_ReceiveToIdle_DMA</ref>(huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a1ed7dab212fde0a3a4600d33399c67b6" kindref="member">huart</ref>,<sp/>(uint8_t*)<sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1aeea8c98a5a0f7d7f8d5719f46a45f2d2" kindref="member">dataRx</ref>,<sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a962988d59051dfab0ce7da4c9d66f7b2" kindref="member">dataRxMaxLen</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="usart__custom_8c_1a74ea4ae09ad7d11a8ed037ed585f4c24" kindref="member">uartCustomTransmitDMA</ref>(<ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref><sp/>*huartCustom,<sp/>uint16_t<sp/>msgLen)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(huartCustom<sp/>==<sp/>&amp;<ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(&amp;<ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>,<sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1ab9bc9891f04881264d1131c2a5ffe711" kindref="member">dataTx</ref>,<sp/>msgLen);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CommandSearchForString(uint8_t<sp/>*data,<sp/>uint16_t<sp/>dataLen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataLen<sp/>&gt;=<sp/>strlen(str))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strnstr((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data,<sp/>str,<sp/>strlen(str))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeChar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>uint16_t<sp/>dataLen)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dataLen;<sp/>i++)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str[i]<sp/>!=<sp/>c)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[j++]<sp/>=<sp/>str[i];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>str[j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352" kindref="member">CommandType</ref><sp/><ref refid="usart__custom_8c_1a4dd5805db71c5e3e11920b812bddaa71" kindref="member">CommandDecode</ref>(uint8_t<sp/>*data,<sp/>uint16_t<sp/>dataLen)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>removeChar((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(data),<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>dataLen);<sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>spaces<sp/>from<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>strupr((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(data));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>all<sp/>chars<sp/>upper<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a6547da940a1c63d92d200f92f5509884" kindref="member">COMMAND_START</ref>))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ad067bb0a784084623648fd149c3768c4" kindref="member">COMMAND_TYPE_START</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a6b66389416f72046f80d9c2c1a77d63f" kindref="member">COMMAND_STOP</ref>))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ae442cf6a5aa8d6270bd646e928af19b0" kindref="member">COMMAND_TYPE_STOP</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a928e45f29cb44f16b29fecd2d902d8df" kindref="member">COMMAND_GET_RADAR_POS_MIN</ref>))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352aad50a044ab6e6a8996b8fa8205cfd55b" kindref="member">COMMAND_TYPE_GET_POS_MIN</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a589d75ff318022a4c91c872b7d080643" kindref="member">COMMAND_GET_RADAR_POS_MAX</ref>))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a3fee678b3bd7e7f389e89110002d183c" kindref="member">COMMAND_TYPE_GET_POS_MAX</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1ae124f9df385262c264482a5720ca4c29" kindref="member">COMMAND_SET_RADAR_POS_MIN</ref>))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a476ef9ec942339853c7ed9d676d0e3e5" kindref="member">COMMAND_TYPE_SET_POS_MIN</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1ae0abe32ca9558776605bb52edb877ce2" kindref="member">COMMAND_SET_RADAR_POS_MAX</ref>))</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a7521841ceae5759a2e4d08da783d077e" kindref="member">COMMAND_TYPE_SET_POS_MAX</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a32ec74d8416e440eada5dc39f7bbb70e" kindref="member">COMMAND_GET_RADAR_POSITION</ref>))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a21276fbc1ae96774c5eb8367ca6f1d11" kindref="member">COMMAND_TYPE_GET_POS</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a2947acf776dfe702ef6160098dd5befb" kindref="member">COMMAND_SET_RADAR_POSITION</ref>))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a6759dda3a89ea617c6535fd492790e7d" kindref="member">COMMAND_TYPE_SET_POS</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a07f8ec7fbb604c801d0d8bdd5768e8eb" kindref="member">COMMAND_GET_RADAR_STEP</ref>))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a3d94d1bcc54db15c881c3e520d3d9732" kindref="member">COMMAND_TYPE_GET_STEP</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a1f77428b61c541203cab70145eb29521" kindref="member">COMMAND_SET_RADAR_STEP</ref>))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ae5984587ad3258688d05ffae48475902" kindref="member">COMMAND_TYPE_SET_STEP</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a87e889c83c8bb5fe95eef467e97324ae" kindref="member">COMMAND_SET_RADAR_SENSOR_PERIOD</ref>))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352acdcd32b093e7a31e121d9a65d8546385" kindref="member">COMMAND_TYPE_SET_SENSOR_PERIOD</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1ad2e5fdeff329cb9461a501a30a427479" kindref="member">COMMAND_GET_RADAR_SENSOR_PERIOD</ref>))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ad12f98e1b0e69ac0ccf8c5633ffa2a54" kindref="member">COMMAND_TYPE_GET_SENSOR_PERIOD</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a20001dd5b0549da64d44fb993776e591" kindref="member">COMMAND_GET_RADAR_SENSOR_MEASURE</ref>))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352aa314a1e1244d7b6f89a45ca0ef88ebcf" kindref="member">COMMAND_TYPE_GET_SENSOR_MEASURE</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a17ad9cab657264453606c4336af72ef5" kindref="member">COMMAND_GET_RADAR_DRAW_SCALE</ref>))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a5c968c059a75367c9bcb1f4f82ffb71e" kindref="member">COMMAND_TYPE_GET_DRAW_SCALE</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a1f725e00de2969785293adb422d7ac35" kindref="member">COMMAND_SET_RADAR_DRAW_SCALE</ref>))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ab54684c7e7eb692bda06a46888116eaa" kindref="member">COMMAND_TYPE_SET_DRAW_SCALE</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a674552e14bdfbf1353a65d826222b1da" kindref="member">COMMAND_GET_RADAR_DRAW_RULES</ref>))</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a858946b754a6edb87080905ce69e578d" kindref="member">COMMAND_TYPE_GET_DRAW_RULES</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CommandSearchForString(data,<sp/>dataLen,<sp/><ref refid="usart__custom_8h_1a3486962082cdaf2c29d61c7099b75541" kindref="member">COMMAND_SET_RADAR_DRAW_RULES</ref>))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352aa492f0fce57cb811434e7080dd8e9279" kindref="member">COMMAND_TYPE_SET_DRAW_RULES</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a7272b7f468cc8202d75d96a8043f9e87" kindref="member">COMMAND_TYPE_IDLE</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitResponse(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7" kindref="member">ResponseType</ref><sp/>respType)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(respType)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,<sp/></highlight><highlight class="stringliteral">&quot;OK\r\n&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;OK\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7acebd78e00b6e0841ba1526eb58c32a43" kindref="member">RESPONSE_UNKNOW_CMD</ref>:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,</highlight><highlight class="stringliteral">&quot;UNKNOW<sp/>CMD\r\n&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;UNKNOW<sp/>CMD\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,<sp/></highlight><highlight class="stringliteral">&quot;ERROR\r\n&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;ERROR\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitPosition(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Position:<sp/>%.2f\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>.<ref refid="structradar_struct_1a76777b356ab2a080225682528119c4fe" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitStep(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Step:<sp/>%.2f\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>.<ref refid="structradar_struct_1a83f07e02ef2f0c0682cc8dff5de67695" kindref="member">positionUpdateStep</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitPositionMinMax(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMin)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isMin)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Position<sp/>Min:<sp/>%.2f\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>.<ref refid="structradar_struct_1acac5383e682fd24496c39ab7d5023a46" kindref="member">positionMin</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Position<sp/>Max:<sp/>%.2f\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>.<ref refid="structradar_struct_1a9dca5220660a30c5b0649234a6c22761" kindref="member">positionMax</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitSensorMeasure(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Measure:<sp/>%.2f\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="radar_8c_1a8d37f58cbd2c9affac492868fdc72b5e" kindref="member">radarGetMeasure</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitSensorPeriod(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Measure<sp/>Period:<sp/>%d<sp/>ms\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>.<ref refid="structradar_struct_1a1fb6c4ca380736554edf1b5778d03bb6" kindref="member">measurePeriodMs</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitDrawScale(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Draw<sp/>Scale:<sp/>%.2f\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usart__custom_8c_1adf53ce83636ba14bf6b66c48aae16e49" kindref="member">drawHelper</ref>.<ref refid="structdraw_helper_struct_1aeb3238cbef436c3e4bac1fa66d733e99" kindref="member">drawScale</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uartTransmitDrawRules(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="usart__custom_8h_1ad33fa5c178f516badf8b705c646ba9f9" kindref="member">MAX_UART_TX_DATA_LEN</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLen<sp/>=<sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>)data,<sp/></highlight><highlight class="stringliteral">&quot;Draw<sp/>rules<sp/>number:<sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="usart__custom_8c_1adf53ce83636ba14bf6b66c48aae16e49" kindref="member">drawHelper</ref>.<ref refid="structdraw_helper_struct_1ab0b5ae05a58dca99008939a192b6594f" kindref="member">measureScalesNumber</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(uartQueue,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8c_1abbc250ac23ac518f14aa24e1f9a11ead" kindref="member">uartQueueReceive</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref><sp/>!=<sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1ac87fbf2375e4a60a0ea19b9c572fc02b" kindref="member">headIxndex</ref><sp/>&amp;&amp;<sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>][0]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352" kindref="member">CommandType</ref><sp/>commandType<sp/>=<sp/><ref refid="usart__custom_8c_1a4dd5805db71c5e3e11920b812bddaa71" kindref="member">CommandDecode</ref>((uint8_t<sp/>*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>],<sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1ad5bd92c0c4e4441b3843d3718af24cdd" kindref="member">dataRxLength</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>]);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(commandType)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a7272b7f468cc8202d75d96a8043f9e87" kindref="member">COMMAND_TYPE_IDLE</ref>:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7acebd78e00b6e0841ba1526eb58c32a43" kindref="member">RESPONSE_UNKNOW_CMD</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ad067bb0a784084623648fd149c3768c4" kindref="member">COMMAND_TYPE_START</ref>:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="radar_8c_1abfc9c42283fc76d21b3e56cc39c8f385" kindref="member">radarMeasureStart</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="radar_8c_1a19fed3b3d140e2c18a4122ad7e783ac6" kindref="member">radarServoStart</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ae442cf6a5aa8d6270bd646e928af19b0" kindref="member">COMMAND_TYPE_STOP</ref>:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="radar_8c_1ad5258fad0b27b8d14b803775e6f1457c" kindref="member">radarMeasureStop</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="radar_8c_1a22df522cbce2d07e06b2c92be3f0349b" kindref="member">radarServoStop</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a21276fbc1ae96774c5eb8367ca6f1d11" kindref="member">COMMAND_TYPE_GET_POS</ref>:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitPosition(uartQueue);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a6759dda3a89ea617c6535fd492790e7d" kindref="member">COMMAND_TYPE_SET_POS</ref>:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="radar_8c_1ade099662844a751716ebda7bd3c1de78" kindref="member">radarParseSetPosition</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>,<sp/>(uint8_t*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>]))</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a3d94d1bcc54db15c881c3e520d3d9732" kindref="member">COMMAND_TYPE_GET_STEP</ref>:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitStep(uartQueue);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ae5984587ad3258688d05ffae48475902" kindref="member">COMMAND_TYPE_SET_STEP</ref>:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="radar_8c_1a93217053e1875c7eac9c60f4bb30a149" kindref="member">radarParseSetStep</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>,<sp/>(uint8_t*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>]))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352aad50a044ab6e6a8996b8fa8205cfd55b" kindref="member">COMMAND_TYPE_GET_POS_MIN</ref>:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitPositionMinMax(uartQueue,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a3fee678b3bd7e7f389e89110002d183c" kindref="member">COMMAND_TYPE_GET_POS_MAX</ref>:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitPositionMinMax(uartQueue,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a476ef9ec942339853c7ed9d676d0e3e5" kindref="member">COMMAND_TYPE_SET_POS_MIN</ref>:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="radar_8c_1ac2d8eafddd3e2e5ceec639b9009c40fc" kindref="member">radarParseSetPositionMinMax</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>,<sp/>(uint8_t*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a7521841ceae5759a2e4d08da783d077e" kindref="member">COMMAND_TYPE_SET_POS_MAX</ref>:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="radar_8c_1ac2d8eafddd3e2e5ceec639b9009c40fc" kindref="member">radarParseSetPositionMinMax</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>,<sp/>(uint8_t*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352aa314a1e1244d7b6f89a45ca0ef88ebcf" kindref="member">COMMAND_TYPE_GET_SENSOR_MEASURE</ref>:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitSensorMeasure(uartQueue);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352acdcd32b093e7a31e121d9a65d8546385" kindref="member">COMMAND_TYPE_SET_SENSOR_PERIOD</ref>:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="radar_8c_1a7c584e4dccab771e02d9520ec9cc89bb" kindref="member">radarParseSetMeasurePeriod</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>,<sp/>(uint8_t*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>]))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ad12f98e1b0e69ac0ccf8c5633ffa2a54" kindref="member">COMMAND_TYPE_GET_SENSOR_PERIOD</ref>:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitSensorPeriod(uartQueue);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a5c968c059a75367c9bcb1f4f82ffb71e" kindref="member">COMMAND_TYPE_GET_DRAW_SCALE</ref>:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitDrawScale(uartQueue);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352a858946b754a6edb87080905ce69e578d" kindref="member">COMMAND_TYPE_GET_DRAW_RULES</ref>:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitDrawRules(uartQueue);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352ab54684c7e7eb692bda06a46888116eaa" kindref="member">COMMAND_TYPE_SET_DRAW_SCALE</ref>:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="radar_8c_1a446ac04525db3179676463097f06d3ac" kindref="member">radarParseSetDrawScale</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>,<sp/>(uint8_t*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>]))</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8h_1a21e038f5b8958e203d28bc4f18472352aa492f0fce57cb811434e7080dd8e9279" kindref="member">COMMAND_TYPE_SET_DRAW_RULES</ref>:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="radar_8c_1af268b360cfbc8508e87589e75178eff4" kindref="member">radarParseSetDrawRules</ref>(&amp;<ref refid="usart__custom_8c_1a9f3a2a5f24724aadbb21c4a8e74b5a09" kindref="member">radar</ref>,<sp/>(uint8_t*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>]))</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ad9a009eaad7d808678adbea41b8b1faa" kindref="member">RESPONSE_OK</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7ada8db732ee34297d85ba9014b3e3f166" kindref="member">RESPONSE_ERROR</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartTransmitResponse(uartQueue,<sp/><ref refid="usart__custom_8h_1af5055605e320b3f9ea9fa330b57604e7acebd78e00b6e0841ba1526eb58c32a43" kindref="member">RESPONSE_UNKNOW_CMD</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1ad5bd92c0c4e4441b3843d3718af24cdd" kindref="member">dataRxLength</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref><sp/>==<sp/><ref refid="usart__custom_8h_1a1ed0601fc12697a226bb7717c7ab573e" kindref="member">UART_QUEUE_LEN</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8c_1affe2663ea2814b2c9ab3695c28961355" kindref="member">uartQueueInit</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a614486ec92e3549168b31c4350e47910" kindref="member">dataIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1ac87fbf2375e4a60a0ea19b9c572fc02b" kindref="member">headIxndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3b4e9fc9e72aaeaa7086915ef71e9e18" kindref="member">tailIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8c_1ab0cdd1e74b215a0e58dca5e866c11de8" kindref="member">uartQueueAdd</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue,<sp/>uint8_t<sp/>*dataTxSource,<sp/>uint16_t<sp/>msgLen)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((uint8_t<sp/>*)uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3efa81db0281c5e6ec8803214fe30378" kindref="member">dataTx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a614486ec92e3549168b31c4350e47910" kindref="member">dataIndex</ref>],<sp/>dataTxSource,<sp/>msgLen);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a7be530387eca02e13ed41567d8c328af" kindref="member">dataTxLength</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a614486ec92e3549168b31c4350e47910" kindref="member">dataIndex</ref>]<sp/>=<sp/>msgLen;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a614486ec92e3549168b31c4350e47910" kindref="member">dataIndex</ref><sp/>=<sp/>(++uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a614486ec92e3549168b31c4350e47910" kindref="member">dataIndex</ref>)<sp/>%<sp/><ref refid="usart__custom_8h_1a1ed0601fc12697a226bb7717c7ab573e" kindref="member">UART_QUEUE_LEN</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8c_1a971ac04f29008014c47a53f31a0eca02" kindref="member">uartQueueClear</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="usart__custom_8h_1a1ed0601fc12697a226bb7717c7ab573e" kindref="member">UART_QUEUE_LEN</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3efa81db0281c5e6ec8803214fe30378" kindref="member">dataTx</ref>[i][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a614486ec92e3549168b31c4350e47910" kindref="member">dataIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart__custom_8c_1a434833c4433f588d5fda684a54dcb0ff" kindref="member">uartQueueTransmit</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_u_a_r_t___queue" kindref="compound">UART_Queue</ref><sp/>*uartQueue,<sp/><ref refid="struct_u_a_r_t___custom___handle_type_def" kindref="compound">UART_Custom_HandleTypeDef</ref><sp/>*huartCustom)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uartQueue<sp/>==<sp/>&amp;<ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a9011455a25b27b0d2bc3cbd56eafb3ad" kindref="member">txTransmissionCmplt</ref><sp/>&amp;&amp;<sp/>(<ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>()<sp/>-<sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1aa2fa02d67a76264094f28e5349d128bd" kindref="member">txTransmissionCmpltTime</ref>)<sp/>&gt;<sp/><ref refid="usart__custom_8h_1ad3ab3c92bd02a106c0182be9c79dac55" kindref="member">UART_TX_TRANSMISSION_CMPLT_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3efa81db0281c5e6ec8803214fe30378" kindref="member">dataTx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>][0]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a9011455a25b27b0d2bc3cbd56eafb3ad" kindref="member">txTransmissionCmplt</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a7be530387eca02e13ed41567d8c328af" kindref="member">dataTxLength</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>]<sp/>&gt;<sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1aa1a20fe601cf7e4b3f0134222621c0ad" kindref="member">dataTxMaxLen</ref>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a7be530387eca02e13ed41567d8c328af" kindref="member">dataTxLength</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>]<sp/>=<sp/>huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1aa1a20fe601cf7e4b3f0134222621c0ad" kindref="member">dataTxMaxLen</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga821472e8c11e667d793b829a19c3e46c" kindref="member">HAL_UART_Transmit_DMA</ref>(huartCustom-&gt;<ref refid="struct_u_a_r_t___custom___handle_type_def_1a1ed7dab212fde0a3a4600d33399c67b6" kindref="member">huart</ref>,(uint8_t<sp/>*)<sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3efa81db0281c5e6ec8803214fe30378" kindref="member">dataTx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>],<sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a7be530387eca02e13ed41567d8c328af" kindref="member">dataTxLength</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>]);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_m_a___exported___macros_1ga2867eab09398df2daac55c3f327654da" kindref="member">__HAL_DMA_DISABLE_IT</ref>(&amp;<ref refid="usart__custom_8c_1a5af94ab36bfe698db3e6beea96d10a90" kindref="member">hdma_usart1_tx</ref>,<sp/><ref refid="group___d_m_a__interrupt__enable__definitions_1gadf11c572b9797e04a14b105fdc2e5f66" kindref="member">DMA_IT_HT</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a3efa81db0281c5e6ec8803214fe30378" kindref="member">dataTx</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a7be530387eca02e13ed41567d8c328af" kindref="member">dataTxLength</ref>[uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref><sp/>=<sp/>(++uartQueue-&gt;<ref refid="struct_u_a_r_t___queue_1a21c6464b9d460c444aae6a9b093c02b9" kindref="member">transmitIndex</ref>)<sp/>%<sp/><ref refid="usart__custom_8h_1a1ed0601fc12697a226bb7717c7ab573e" kindref="member">UART_QUEUE_LEN</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref><sp/>==<sp/><ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>.<ref refid="struct_u_a_r_t___custom___handle_type_def_1a1ed7dab212fde0a3a4600d33399c67b6" kindref="member">huart</ref>-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>.<ref refid="struct_u_a_r_t___queue_1aabf0dabd48dff725071bf5ec713f42e9" kindref="member">dataRx</ref>[<ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>.<ref refid="struct_u_a_r_t___queue_1ac87fbf2375e4a60a0ea19b9c572fc02b" kindref="member">headIxndex</ref>],<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>.<ref refid="struct_u_a_r_t___custom___handle_type_def_1aeea8c98a5a0f7d7f8d5719f46a45f2d2" kindref="member">dataRx</ref>,<sp/>Size);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>.<ref refid="struct_u_a_r_t___queue_1ad5bd92c0c4e4441b3843d3718af24cdd" kindref="member">dataRxLength</ref>[<ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>.<ref refid="struct_u_a_r_t___queue_1ac87fbf2375e4a60a0ea19b9c572fc02b" kindref="member">headIxndex</ref>]<sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>.<ref refid="struct_u_a_r_t___queue_1ac87fbf2375e4a60a0ea19b9c572fc02b" kindref="member">headIxndex</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>.<ref refid="struct_u_a_r_t___queue_1ac87fbf2375e4a60a0ea19b9c572fc02b" kindref="member">headIxndex</ref><sp/>==<sp/><ref refid="usart__custom_8h_1a1ed0601fc12697a226bb7717c7ab573e" kindref="member">UART_QUEUE_LEN</ref>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1a730b36042999ad73efb22a259d91845a" kindref="member">uartQueuePC</ref>.<ref refid="struct_u_a_r_t___queue_1ac87fbf2375e4a60a0ea19b9c572fc02b" kindref="member">headIxndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1a123702bc9950b2a0ce9a34e889842f74" kindref="member">uartCustomReceiveDMA</ref>(&amp;<ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_m_a___exported___macros_1ga2867eab09398df2daac55c3f327654da" kindref="member">__HAL_DMA_DISABLE_IT</ref>(&amp;<ref refid="usart__custom_8c_1a34251392f0d5e2461e3aef615918c235" kindref="member">hdma_usart1_rx</ref>,<sp/><ref refid="group___d_m_a__interrupt__enable__definitions_1gadf11c572b9797e04a14b105fdc2e5f66" kindref="member">DMA_IT_HT</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gabcdf9b59049eccbc87d54042f9235b1a" kindref="member">HAL_UART_TxCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref><sp/>==<sp/><ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>.<ref refid="struct_u_a_r_t___custom___handle_type_def_1a1ed7dab212fde0a3a4600d33399c67b6" kindref="member">huart</ref>-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>.<ref refid="struct_u_a_r_t___custom___handle_type_def_1a9011455a25b27b0d2bc3cbd56eafb3ad" kindref="member">txTransmissionCmplt</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>.<ref refid="struct_u_a_r_t___custom___handle_type_def_1aa2fa02d67a76264094f28e5349d128bd" kindref="member">txTransmissionCmpltTime</ref><sp/>=<sp/><ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref><sp/>==<sp/><ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>.<ref refid="struct_u_a_r_t___custom___handle_type_def_1a1ed7dab212fde0a3a4600d33399c67b6" kindref="member">huart</ref>-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>DMA<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gad674cce054e58927720cd689620ffa08" kindref="member">HAL_UART_Receive_DMA</ref>(huart,<sp/>NULL,<sp/>0);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>the<sp/>UART<sp/>RX<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_m_a___exported___functions___group1_1ga0fbcb690074233a03f2fa366dc22ff01" kindref="member">HAL_DMA_Init</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reconfigure<sp/>the<sp/>DMA<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usart__custom_8c_1a123702bc9950b2a0ce9a34e889842f74" kindref="member">uartCustomReceiveDMA</ref>(&amp;<ref refid="usart__custom_8c_1aa8f73ccd6c2e2b10c7ee326ad9b700ce" kindref="member">huartPC</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restart<sp/>the<sp/>DMA<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_m_a___exported___macros_1ga2867eab09398df2daac55c3f327654da" kindref="member">__HAL_DMA_DISABLE_IT</ref>(&amp;<ref refid="usart__custom_8c_1a34251392f0d5e2461e3aef615918c235" kindref="member">hdma_usart1_rx</ref>,<sp/><ref refid="group___d_m_a__interrupt__enable__definitions_1gadf11c572b9797e04a14b105fdc2e5f66" kindref="member">DMA_IT_HT</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="RadarApp/usart_custom/usart_custom.c"/>
  </compounddef>
</doxygen>

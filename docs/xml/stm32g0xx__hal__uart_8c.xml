<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="stm32g0xx__hal__uart_8c" kind="file" language="C++">
    <compoundname>stm32g0xx_hal_uart.c</compoundname>
    <includes refid="stm32g0xx__hal_8h" local="yes">stm32g0xx_hal.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stm32g0xx_hal_conf.h</label>
        <link refid="stm32g0xx__hal__conf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32g0xx.h</label>
        <link refid="stm32g0xx_8h"/>
      </node>
      <node id="7">
        <label>Legacy/stm32_hal_legacy.h</label>
        <link refid="stm32__hal__legacy_8h"/>
      </node>
      <node id="2">
        <label>stm32g0xx_hal.h</label>
        <link refid="stm32g0xx__hal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stm32g0xx_hal_cortex.h</label>
        <link refid="stm32g0xx__hal__cortex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stm32g0xx_hal_def.h</label>
        <link refid="stm32g0xx__hal__def_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stm32g0xx_hal_dma.h</label>
        <link refid="stm32g0xx__hal__dma_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stm32g0xx_hal_dma_ex.h</label>
        <link refid="stm32g0xx__hal__dma__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stm32g0xx_hal_exti.h</label>
        <link refid="stm32g0xx__hal__exti_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stm32g0xx_hal_flash.h</label>
        <link refid="stm32g0xx__hal__flash_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32g0xx_hal_flash_ex.h</label>
        <link refid="stm32g0xx__hal__flash__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stm32g0xx_hal_gpio.h</label>
        <link refid="stm32g0xx__hal__gpio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32g0xx_hal_gpio_ex.h</label>
        <link refid="stm32g0xx__hal__gpio__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32g0xx_hal_pwr.h</label>
        <link refid="stm32g0xx__hal__pwr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stm32g0xx_hal_pwr_ex.h</label>
        <link refid="stm32g0xx__hal__pwr__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32g0xx_hal_rcc.h</label>
        <link refid="stm32g0xx__hal__rcc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stm32g0xx_hal_rcc_ex.h</label>
        <link refid="stm32g0xx__hal__rcc__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stm32g0xx_hal_spi.h</label>
        <link refid="stm32g0xx__hal__spi_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>stm32g0xx_hal_spi_ex.h</label>
        <link refid="stm32g0xx__hal__spi__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stm32g0xx_hal_tim.h</label>
        <link refid="stm32g0xx__hal__tim_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stm32g0xx_hal_tim_ex.h</label>
        <link refid="stm32g0xx__hal__tim__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>stm32g0xx_hal_uart.h</label>
        <link refid="stm32g0xx__hal__uart_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stm32g0xx_hal_uart_ex.h</label>
        <link refid="stm32g0xx__hal__uart__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32g0xx_ll_dma.h</label>
        <link refid="stm32g0xx__ll__dma_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stm32g0xx_ll_dmamux.h</label>
        <link refid="stm32g0xx__ll__dmamux_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stm32g0xx_ll_rcc.h</label>
        <link refid="stm32g0xx__ll__rcc_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c</label>
        <link refid="stm32g0xx__hal__uart_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>UART HAL module driver. This file provides firmware functions to manage the following functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART). </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team<itemizedlist>
<listitem><para>Initialization and de-initialization functions</para>
</listitem><listitem><para>IO operation functions</para>
</listitem><listitem><para>Peripheral Control functions</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="attention"><para></para>
</simplesect>
Copyright (c) 2018 STMicroelectronics. All rights reserved.</para>
<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS.</para>
<para><verbatim>===============================================================================
                       ##### How to use this driver #####
===============================================================================
 [..]
   The UART HAL driver can be used as follows:

   (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
   (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
       (++) Enable the USARTx interface clock.
       (++) UART pins configuration:
           (+++) Enable the clock for the UART GPIOs.
           (+++) Configure these UART pins as alternate function pull-up.
       (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
            and HAL_UART_Receive_IT() APIs):
           (+++) Configure the USARTx interrupt priority.
           (+++) Enable the NVIC USART IRQ handle.
       (++) UART interrupts handling:
             -@@-  The specific UART interrupts (Transmission complete interrupt,
               RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
               are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
               inside the transmit and receive processes.
       (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
            and HAL_UART_Receive_DMA() APIs):
           (+++) Declare a DMA handle structure for the Tx/Rx channel.
           (+++) Enable the DMAx interface clock.
           (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
           (+++) Configure the DMA Tx/Rx channel.
           (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
           (+++) Configure the priority and enable the NVIC for the transfer complete
                 interrupt on the DMA Tx/Rx channel.

   (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
       flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.

   (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
       in the huart handle AdvancedInit structure.

   (#) For the UART asynchronous mode, initialize the UART registers by calling
       the HAL_UART_Init() API.

   (#) For the UART Half duplex mode, initialize the UART registers by calling
       the HAL_HalfDuplex_Init() API.

   (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
       by calling the HAL_LIN_Init() API.

   (#) For the UART Multiprocessor mode, initialize the UART registers
       by calling the HAL_MultiProcessor_Init() API.

   (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
       by calling the HAL_RS485Ex_Init() API.

   [..]
   (@) These API&apos;s (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Init(),
       also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
       calling the customized HAL_UART_MspInit() API.

   ##### Callback registration #####
   ==================================

   [..]
   The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
   allows the user to configure dynamically the driver callbacks.

   [..]
   Use Function HAL_UART_RegisterCallback() to register a user callback.
   Function HAL_UART_RegisterCallback() allows to register following callbacks:
   (+) TxHalfCpltCallback        : Tx Half Complete Callback.
   (+) TxCpltCallback            : Tx Complete Callback.
   (+) RxHalfCpltCallback        : Rx Half Complete Callback.
   (+) RxCpltCallback            : Rx Complete Callback.
   (+) ErrorCallback             : Error Callback.
   (+) AbortCpltCallback         : Abort Complete Callback.
   (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
   (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
   (+) WakeupCallback            : Wakeup Callback.
   (+) RxFifoFullCallback        : Rx Fifo Full Callback.
   (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
   (+) MspInitCallback           : UART MspInit.
   (+) MspDeInitCallback         : UART MspDeInit.
   This function takes as parameters the HAL peripheral handle, the Callback ID
   and a pointer to the user callback function.

   [..]
   Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
   weak (surcharged) function.
   HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
   and the Callback ID.
   This function allows to reset following callbacks:
   (+) TxHalfCpltCallback        : Tx Half Complete Callback.
   (+) TxCpltCallback            : Tx Complete Callback.
   (+) RxHalfCpltCallback        : Rx Half Complete Callback.
   (+) RxCpltCallback            : Rx Complete Callback.
   (+) ErrorCallback             : Error Callback.
   (+) AbortCpltCallback         : Abort Complete Callback.
   (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
   (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
   (+) WakeupCallback            : Wakeup Callback.
   (+) RxFifoFullCallback        : Rx Fifo Full Callback.
   (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
   (+) MspInitCallback           : UART MspInit.
   (+) MspDeInitCallback         : UART MspDeInit.

   [..]
   For specific callback RxEventCallback, use dedicated registration/reset functions:
   respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().

   [..]
   By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
   all callbacks are set to the corresponding weak (surcharged) functions:
   examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
   Exception done for MspInit and MspDeInit functions that are respectively
   reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
   and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
   If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
   keep and use the user MspInit/MspDeInit callbacks (registered beforehand).

   [..]
   Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
   Exception done MspInit/MspDeInit that can be registered/unregistered
   in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
   MspInit/DeInit callbacks can be used during the Init/DeInit.
   In that case first register the MspInit/MspDeInit user callbacks
   using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
   or HAL_UART_Init() function.

   [..]
   When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
   not defined, the callback registration feature is not available
   and weak (surcharged) callbacks are used.</verbatim> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32g0xx__hal_8h" kindref="compound">stm32g0xx_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAL_UART_MODULE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>typedef<sp/>-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>define<sp/>------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_CR1_FIELDS<sp/><sp/>((uint32_t)(USART_CR1_M<sp/>|<sp/>USART_CR1_PCE<sp/>|<sp/>USART_CR1_PS<sp/>|<sp/>USART_CR1_TE<sp/>|<sp/>USART_CR1_RE<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USART_CR1_OVER8<sp/>|<sp/>USART_CR1_FIFOEN))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_CR3_FIELDS<sp/><sp/>((uint32_t)(USART_CR3_RTSE<sp/>|<sp/>USART_CR3_CTSE<sp/>|<sp/>USART_CR3_ONEBIT<sp/>|<sp/>USART_CR3_TXFTCFG<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USART_CR3_RXFTCFG))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LPUART_BRR_MIN<sp/><sp/>0x00000300U<sp/><sp/></highlight><highlight class="comment">/*<sp/>LPUART<sp/>BRR<sp/>minimum<sp/>authorized<sp/>value<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LPUART_BRR_MAX<sp/><sp/>0x000FFFFFU<sp/><sp/></highlight><highlight class="comment">/*<sp/>LPUART<sp/>BRR<sp/>maximum<sp/>authorized<sp/>value<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_BRR_MIN<sp/><sp/><sp/><sp/>0x10U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>BRR<sp/>minimum<sp/>authorized<sp/>value<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_BRR_MAX<sp/><sp/><sp/><sp/>0x0000FFFFU<sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>BRR<sp/>maximum<sp/>authorized<sp/>value<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macros<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>-----------------------------------------------*/</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_EndTxTransfer(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_EndRxTransfer(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATransmitCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMAReceiveCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMARxHalfCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATxHalfCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMAError(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMAAbortOnError(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATxAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMARxAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATxOnlyAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMARxOnlyAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_8BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_16BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_8BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_16BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_EndTransmit_IT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_8BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_16BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_8BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_16BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>---------------------------------------------------------*/</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group___u_a_r_t___private__variables_1gac70d2aee3dafd85230030ff31ae8364e" kindref="member">UARTPrescTable</ref>[12]<sp/>=<sp/>{1U,<sp/>2U,<sp/>4U,<sp/>6U,<sp/>8U,<sp/>10U,<sp/>12U,<sp/>16U,<sp/>32U,<sp/>64U,<sp/>128U,<sp/>256U};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>Constants<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1gabe47045024787099b0bfa82bbe7b0b6a" kindref="member">HAL_UART_Init</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>UART<sp/>handle<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a0a933d213b17470c582c8fec23a24d09" kindref="member">HwFlowCtl</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___hardware___flow___control_1gae0569001c06b7760cd38c481f84116cf" kindref="member">UART_HWCONTROL_NONE</ref>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1gaf9a11d0720f3efa780126414a4ac50ad" kindref="member">IS_UART_HWFLOW_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>((<ref refid="group___exported__macros_1gacbd2efab4cd39d4867c4dbeacb87e84b" kindref="member">IS_UART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>))<sp/>||<sp/>(<ref refid="group___exported__macros_1gabe1d97ef8a001d77efa0d7633e7a42de" kindref="member">IS_LPUART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>lock<sp/>resource<sp/>and<sp/>initialize<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad4cf225029dbefe8d3fe660c33b8bb6b" kindref="member">Lock</ref><sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1ab367482e943333a1299294eadaad284ba9bd487430440139444e6e7ff226005c0" kindref="member">HAL_UNLOCKED</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_InitCallbacksToDefault(huart);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;MspInitCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback(huart);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>:<sp/>GPIO,<sp/>CLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>(huart);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>Communication<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1ga5a87d1b1c4284cae14f5a1402efaa11b" kindref="member">UART_SetConfig</ref>(huart)<sp/>==<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1gab696b28f33174d038e0bfd300c1b2a77" kindref="member">UART_ADVFEATURE_NO_INIT</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___private___functions_1gacd304011919c5ccd02544208c7aa451b" kindref="member">UART_AdvFeatureConfig</ref>(huart);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>asynchronous<sp/>mode,<sp/>the<sp/>following<sp/>bits<sp/>must<sp/>be<sp/>kept<sp/>cleared:</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/>-<sp/>LINEN<sp/>and<sp/>CLKEN<sp/>bits<sp/>in<sp/>the<sp/>USART_CR2<sp/>register,</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/>-<sp/>SCEN,<sp/>HDSEL<sp/>and<sp/>IREN<sp/><sp/>bits<sp/>in<sp/>the<sp/>USART_CR3<sp/>register.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gac8931efa62c29d92f5c0ec5a05f907ef" kindref="member">USART_CR2_LINEN</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga42a396cde02ffa0c4d3fd9817b6af853" kindref="member">USART_CR2_CLKEN</ref>));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga9180b9249a26988f71d4bb2b0c3eec27" kindref="member">USART_CR3_SCEN</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gac71129810fab0b46d91161a39e3f8d01" kindref="member">USART_CR3_HDSEL</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga31c66373bfbae7724c836ac63b8411dd" kindref="member">USART_CR3_IREN</ref>));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga49eb5ea4996a957afeb8be2793ba3fe9" kindref="member">__HAL_UART_ENABLE</ref>(huart);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TEACK<sp/>and/or<sp/>REACK<sp/>to<sp/>check<sp/>before<sp/>moving<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga927245827265eff1f3580a0121efd424" kindref="member">HAL_HalfDuplex_Init</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>UART<sp/>handle<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>UART<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga69c4aa0c561c4c39c621710fbbb0cb7b" kindref="member">IS_UART_HALFDUPLEX_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>lock<sp/>resource<sp/>and<sp/>initialize<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad4cf225029dbefe8d3fe660c33b8bb6b" kindref="member">Lock</ref><sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1ab367482e943333a1299294eadaad284ba9bd487430440139444e6e7ff226005c0" kindref="member">HAL_UNLOCKED</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_InitCallbacksToDefault(huart);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;MspInitCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback(huart);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>:<sp/>GPIO,<sp/>CLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>(huart);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>Communication<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1ga5a87d1b1c4284cae14f5a1402efaa11b" kindref="member">UART_SetConfig</ref>(huart)<sp/>==<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1gab696b28f33174d038e0bfd300c1b2a77" kindref="member">UART_ADVFEATURE_NO_INIT</ref>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___private___functions_1gacd304011919c5ccd02544208c7aa451b" kindref="member">UART_AdvFeatureConfig</ref>(huart);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>half-duplex<sp/>mode,<sp/>the<sp/>following<sp/>bits<sp/>must<sp/>be<sp/>kept<sp/>cleared:</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/>-<sp/>LINEN<sp/>and<sp/>CLKEN<sp/>bits<sp/>in<sp/>the<sp/>USART_CR2<sp/>register,</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/>-<sp/>SCEN<sp/>and<sp/>IREN<sp/>bits<sp/>in<sp/>the<sp/>USART_CR3<sp/>register.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gac8931efa62c29d92f5c0ec5a05f907ef" kindref="member">USART_CR2_LINEN</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga42a396cde02ffa0c4d3fd9817b6af853" kindref="member">USART_CR2_CLKEN</ref>));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga31c66373bfbae7724c836ac63b8411dd" kindref="member">USART_CR3_IREN</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9180b9249a26988f71d4bb2b0c3eec27" kindref="member">USART_CR3_SCEN</ref>));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Half-Duplex<sp/>mode<sp/>by<sp/>setting<sp/>the<sp/>HDSEL<sp/>bit<sp/>in<sp/>the<sp/>CR3<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gac71129810fab0b46d91161a39e3f8d01" kindref="member">USART_CR3_HDSEL</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga49eb5ea4996a957afeb8be2793ba3fe9" kindref="member">__HAL_UART_ENABLE</ref>(huart);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TEACK<sp/>and/or<sp/>REACK<sp/>to<sp/>check<sp/>before<sp/>moving<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga27e4497270bd06434e3965e4b06f5516" kindref="member">HAL_LIN_Init</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint32_t<sp/>BreakDetectLength)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>UART<sp/>handle<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>LIN<sp/>UART<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga7d2763df993c77cfa6e249ec7bc80482" kindref="member">IS_UART_LIN_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>Break<sp/>detection<sp/>length<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gac8ac0d0dc7fad5edf53150ce05d902ee" kindref="member">IS_UART_LIN_BREAK_DETECT_LENGTH</ref>(BreakDetectLength));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>LIN<sp/>mode<sp/>limited<sp/>to<sp/>16-bit<sp/>oversampling<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a35770b237370fda7fd0fabad22898490" kindref="member">OverSampling</ref><sp/>==<sp/><ref refid="group___u_a_r_t___over___sampling_1gaeb13896e8bdc1bb041e01a86a868ee0b" kindref="member">UART_OVERSAMPLING_8</ref>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>LIN<sp/>mode<sp/>limited<sp/>to<sp/>8-bit<sp/>data<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>!=<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf394e9abaf17932ee89591f990fe6407" kindref="member">UART_WORDLENGTH_8B</ref>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>lock<sp/>resource<sp/>and<sp/>initialize<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad4cf225029dbefe8d3fe660c33b8bb6b" kindref="member">Lock</ref><sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1ab367482e943333a1299294eadaad284ba9bd487430440139444e6e7ff226005c0" kindref="member">HAL_UNLOCKED</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_InitCallbacksToDefault(huart);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;MspInitCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback(huart);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>:<sp/>GPIO,<sp/>CLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>(huart);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>Communication<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1ga5a87d1b1c4284cae14f5a1402efaa11b" kindref="member">UART_SetConfig</ref>(huart)<sp/>==<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1gab696b28f33174d038e0bfd300c1b2a77" kindref="member">UART_ADVFEATURE_NO_INIT</ref>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___private___functions_1gacd304011919c5ccd02544208c7aa451b" kindref="member">UART_AdvFeatureConfig</ref>(huart);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>LIN<sp/>mode,<sp/>the<sp/>following<sp/>bits<sp/>must<sp/>be<sp/>kept<sp/>cleared:</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/>-<sp/>LINEN<sp/>and<sp/>CLKEN<sp/>bits<sp/>in<sp/>the<sp/>USART_CR2<sp/>register,</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/>-<sp/>SCEN<sp/>and<sp/>IREN<sp/>bits<sp/>in<sp/>the<sp/>USART_CR3<sp/>register.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga42a396cde02ffa0c4d3fd9817b6af853" kindref="member">USART_CR2_CLKEN</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gac71129810fab0b46d91161a39e3f8d01" kindref="member">USART_CR3_HDSEL</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga31c66373bfbae7724c836ac63b8411dd" kindref="member">USART_CR3_IREN</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9180b9249a26988f71d4bb2b0c3eec27" kindref="member">USART_CR3_SCEN</ref>));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>LIN<sp/>mode<sp/>by<sp/>setting<sp/>the<sp/>LINEN<sp/>bit<sp/>in<sp/>the<sp/>CR2<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gac8931efa62c29d92f5c0ec5a05f907ef" kindref="member">USART_CR2_LINEN</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>USART<sp/>LIN<sp/>Break<sp/>detection<sp/>length.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga7f9bc41700717fd93548e0e95b6072ed" kindref="member">USART_CR2_LBDL</ref>,<sp/>BreakDetectLength);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga49eb5ea4996a957afeb8be2793ba3fe9" kindref="member">__HAL_UART_ENABLE</ref>(huart);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TEACK<sp/>and/or<sp/>REACK<sp/>to<sp/>check<sp/>before<sp/>moving<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1gaae1b49f0cb62235141807d8cbc61bc4d" kindref="member">HAL_MultiProcessor_Init</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>Address,<sp/>uint32_t<sp/>WakeUpMethod)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>UART<sp/>handle<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>wake<sp/>up<sp/>method<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga144aecf3ad6ca3ce6653ae113c9a6141" kindref="member">IS_UART_WAKEUPMETHOD</ref>(WakeUpMethod));</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>lock<sp/>resource<sp/>and<sp/>initialize<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad4cf225029dbefe8d3fe660c33b8bb6b" kindref="member">Lock</ref><sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1ab367482e943333a1299294eadaad284ba9bd487430440139444e6e7ff226005c0" kindref="member">HAL_UNLOCKED</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_InitCallbacksToDefault(huart);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;MspInitCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback(huart);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>:<sp/>GPIO,<sp/>CLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>(huart);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>Communication<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1ga5a87d1b1c4284cae14f5a1402efaa11b" kindref="member">UART_SetConfig</ref>(huart)<sp/>==<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1gab696b28f33174d038e0bfd300c1b2a77" kindref="member">UART_ADVFEATURE_NO_INIT</ref>)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___private___functions_1gacd304011919c5ccd02544208c7aa451b" kindref="member">UART_AdvFeatureConfig</ref>(huart);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>multiprocessor<sp/>mode,<sp/>the<sp/>following<sp/>bits<sp/>must<sp/>be<sp/>kept<sp/>cleared:</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/>-<sp/>LINEN<sp/>and<sp/>CLKEN<sp/>bits<sp/>in<sp/>the<sp/>USART_CR2<sp/>register,</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/>-<sp/>SCEN,<sp/>HDSEL<sp/>and<sp/>IREN<sp/><sp/>bits<sp/>in<sp/>the<sp/>USART_CR3<sp/>register.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gac8931efa62c29d92f5c0ec5a05f907ef" kindref="member">USART_CR2_LINEN</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga42a396cde02ffa0c4d3fd9817b6af853" kindref="member">USART_CR2_CLKEN</ref>));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga9180b9249a26988f71d4bb2b0c3eec27" kindref="member">USART_CR3_SCEN</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gac71129810fab0b46d91161a39e3f8d01" kindref="member">USART_CR3_HDSEL</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga31c66373bfbae7724c836ac63b8411dd" kindref="member">USART_CR3_IREN</ref>));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WakeUpMethod<sp/>==<sp/><ref refid="group___u_a_r_t___wake_up___methods_1ga4c6935f26f8f2a9fe70fd6306a9882cb" kindref="member">UART_WAKEUPMETHOD_ADDRESSMARK</ref>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>address<sp/>mark<sp/>wake<sp/>up<sp/>method<sp/>is<sp/>chosen,<sp/>set<sp/>the<sp/>USART<sp/>address<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga3ee77fac25142271ad56d49685e518b3" kindref="member">USART_CR2_ADD</ref>,<sp/>((uint32_t)Address<sp/>&lt;&lt;<sp/><ref refid="group___u_a_r_t___c_r2___a_d_d_r_e_s_s___l_s_b___p_o_s_1ga28e21d5a49aa9e9812b870697c554d97" kindref="member">UART_CR2_ADDRESS_LSB_POS</ref>));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>wake<sp/>up<sp/>method<sp/>by<sp/>setting<sp/>the<sp/>WAKE<sp/>bit<sp/>in<sp/>the<sp/>CR1<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gad831dfc169fcf14b7284984dbecf322d" kindref="member">USART_CR1_WAKE</ref>,<sp/>WakeUpMethod);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga49eb5ea4996a957afeb8be2793ba3fe9" kindref="member">__HAL_UART_ENABLE</ref>(huart);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TEACK<sp/>and/or<sp/>REACK<sp/>to<sp/>check<sp/>before<sp/>moving<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga8d98eaab25e61ae12e2e240c3388c57b" kindref="member">HAL_UART_DeInit</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>UART<sp/>handle<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>((<ref refid="group___exported__macros_1gacbd2efab4cd39d4867c4dbeacb87e84b" kindref="member">IS_UART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>))<sp/>||<sp/>(<ref refid="group___exported__macros_1gabe1d97ef8a001d77efa0d7633e7a42de" kindref="member">IS_LPUART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref><sp/>=<sp/>0x0U;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref><sp/>=<sp/>0x0U;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref><sp/>=<sp/>0x0U;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;MspDeInitCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;MspDeInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga718f39804e3b910d738a0e1e46151188" kindref="member">HAL_UART_MspDeInit</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DeInit<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>huart-&gt;MspDeInitCallback(huart);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DeInit<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga718f39804e3b910d738a0e1e46151188" kindref="member">HAL_UART_MspDeInit</ref>(huart);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_MspInit<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga718f39804e3b910d738a0e1e46151188" kindref="member">HAL_UART_MspDeInit</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_MspDeInit<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_UART_RegisterCallback(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>HAL_UART_CallbackIDTypeDef<sp/>CallbackID,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pUART_CallbackTypeDef<sp/>pCallback)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(CallbackID)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_TX_HALFCOMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxHalfCpltCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_TX_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxCpltCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_RX_HALFCOMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxHalfCpltCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_RX_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ERROR_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ABORT_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortCpltCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortTransmitCpltCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortReceiveCpltCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_WAKEUP_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;WakeupCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_RX_FIFO_FULL_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxFifoFullCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_TX_FIFO_EMPTY_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxFifoEmptyCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPDEINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspDeInitCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(CallbackID)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPDEINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspDeInitCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_UART_UnRegisterCallback(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>HAL_UART_CallbackIDTypeDef<sp/>CallbackID)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref><sp/>==<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(CallbackID)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_TX_HALFCOMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxHalfCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga49b287e7de94cd0a38d333629298f7c4" kindref="member">HAL_UART_TxHalfCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/><sp/>TxHalfCpltCallback<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_TX_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gabcdf9b59049eccbc87d54042f9235b1a" kindref="member">HAL_UART_TxCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>TxCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_RX_HALFCOMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxHalfCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga1884970cc493d8efba5aec28c0d526e7" kindref="member">HAL_UART_RxHalfCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>RxHalfCpltCallback<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_RX_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>RxCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ERROR_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>ErrorCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ABORT_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacdcb274a742093c45869f2cfbb0a8b09" kindref="member">HAL_UART_AbortCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>AbortCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortTransmitCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacf94995fb9986930151f3c5586d37e5c" kindref="member">HAL_UART_AbortTransmitCpltCallback</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbortTransmitCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortReceiveCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0f9d15c5ae7b69f09e0ee5f2461e7e7a" kindref="member">HAL_UART_AbortReceiveCpltCallback</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbortReceiveCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_WAKEUP_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;WakeupCallback<sp/>=<sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga44d09cdf66fec468d956c64a23f61856" kindref="member">HAL_UARTEx_WakeupCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>WakeupCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_RX_FIFO_FULL_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxFifoFullCallback<sp/>=<sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga9275d738be064c56277b69384e6e3d14" kindref="member">HAL_UARTEx_RxFifoFullCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>RxFifoFullCallback<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_TX_FIFO_EMPTY_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxFifoEmptyCallback<sp/>=<sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga6136c1516c4319853fba64290aed1e9d" kindref="member">HAL_UARTEx_TxFifoEmptyCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>TxFifoEmptyCallback<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>MspInitCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPDEINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspDeInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga718f39804e3b910d738a0e1e46151188" kindref="member">HAL_UART_MspDeInit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>MspDeInitCallback<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref><sp/>==<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref>)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(CallbackID)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAL_UART_MSPDEINIT_CB_ID<sp/>:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspDeInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga718f39804e3b910d738a0e1e46151188" kindref="member">HAL_UART_MspDeInit</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_UART_RegisterRxEventCallback(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>pUART_RxEventCallbackTypeDef<sp/>pCallback)</highlight></codeline>
<codeline lineno="958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback<sp/>=<sp/>pCallback;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>Lock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>HAL_UART_UnRegisterRxEventCallback(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>UART<sp/>Rx<sp/>Event<sp/>Callback<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/>HAL_UART_ERROR_INVALID_CALLBACK;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>Lock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga01a7a7ac3cf0a262814ba44ee7580ddb" kindref="member">HAL_UART_Transmit</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size,<sp/>uint32_t<sp/>Timeout)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><sp/>*pdata8bits;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*pdata16bits;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>u16<sp/>frontier,<sp/>as<sp/>data<sp/>to<sp/>be<sp/>filled<sp/>into<sp/>TDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>through<sp/>a<sp/>u16<sp/>cast.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>tickstart<sp/>for<sp/>timeout<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/><ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a80907b65d6f9541bc0dee444d16bc45b" kindref="member">TxXferSize</ref><sp/><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>needs<sp/>to<sp/>be<sp/>handled<sp/>as<sp/>a<sp/>uint16_t<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*)<sp/>pData;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits<sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>&gt;<sp/>0U)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad377d340a4703ef434289d54794c281f" kindref="member">UART_WaitOnFlagUntilTimeout</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1gad39c017d415a7774c82eb07413a9dbe4" kindref="member">UART_FLAG_TXE</ref>,<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>,<sp/>tickstart,<sp/>Timeout)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdata8bits<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a40540a209bca9f0e2045a5748e1803da" kindref="member">TDR</ref><sp/>=<sp/>(uint16_t)(*pdata16bits<sp/>&amp;<sp/>0x01FFU);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits++;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a40540a209bca9f0e2045a5748e1803da" kindref="member">TDR</ref><sp/>=<sp/>(uint8_t)(*pdata8bits<sp/>&amp;<sp/>0xFFU);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits++;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref>--;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad377d340a4703ef434289d54794c281f" kindref="member">UART_WaitOnFlagUntilTimeout</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga82e68a0ee4a8b987a47c66fc6f744894" kindref="member">UART_FLAG_TC</ref>,<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>,<sp/>tickstart,<sp/>Timeout)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>end<sp/>of<sp/>Tx<sp/>process,<sp/>restore<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gab868edc590e3b827a14528a25c999e2f" kindref="member">HAL_UART_Receive</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size,<sp/>uint32_t<sp/>Timeout)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/>*pdata8bits;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*pdata16bits;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>uint16_t<sp/>uhMask;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>u16<sp/>frontier,<sp/>as<sp/>data<sp/>to<sp/>be<sp/>received<sp/>from<sp/>RDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>through<sp/>a<sp/>u16<sp/>cast.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>tickstart<sp/>for<sp/>timeout<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/><ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>();</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computation<sp/>of<sp/>UART<sp/>mask<sp/>to<sp/>apply<sp/>to<sp/>RDR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_ex___private___macros_1gad9330184a8bd9399a36bcc93215a50d1" kindref="member">UART_MASK_COMPUTATION</ref>(huart);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>uhMask<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab8dae64f3b86c2eb2b7a080fcdee3ef4" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pRxData<sp/>needs<sp/>to<sp/>be<sp/>handled<sp/>as<sp/>a<sp/>uint16_t<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits<sp/>=<sp/>(uint16_t<sp/>*)<sp/>pData;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits<sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>as<sp/>long<sp/>as<sp/>data<sp/>have<sp/>to<sp/>be<sp/>received<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>&gt;<sp/>0U)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad377d340a4703ef434289d54794c281f" kindref="member">UART_WaitOnFlagUntilTimeout</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga9d1b2860d84a87abb05c3b2fed3c108c" kindref="member">UART_FLAG_RXNE</ref>,<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>,<sp/>tickstart,<sp/>Timeout)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdata8bits<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdata16bits<sp/>=<sp/>(uint16_t)(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref><sp/>&amp;<sp/>uhMask);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits++;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdata8bits<sp/>=<sp/>(uint8_t)(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref><sp/>&amp;<sp/>(uint8_t)uhMask);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits++;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>--;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>end<sp/>of<sp/>Rx<sp/>process,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga695812b114bd1eb4d9afd6831143b01b" kindref="member">HAL_UART_Transmit_IT</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>u16<sp/>frontier,<sp/>as<sp/>data<sp/>to<sp/>be<sp/>filled<sp/>into<sp/>TDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>through<sp/>a<sp/>u16<sp/>cast.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref><sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a80907b65d6f9541bc0dee444d16bc45b" kindref="member">TxXferSize</ref><sp/><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>Tx<sp/>interrupt<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Tx<sp/>ISR<sp/>function<sp/>pointer<sp/>according<sp/>to<sp/>the<sp/>data<sp/>word<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>UART_TxISR_16BIT_FIFOEN;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>UART_TxISR_8BIT_FIFOEN;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>TX<sp/>FIFO<sp/>threshold<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Tx<sp/>ISR<sp/>function<sp/>pointer<sp/>according<sp/>to<sp/>the<sp/>data<sp/>word<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>UART_TxISR_16BIT;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>UART_TxISR_8BIT;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Transmit<sp/>Data<sp/>Register<sp/>Empty<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gadc0c3ef2109881d011601f0d41e70e40" kindref="member">HAL_UART_Receive_IT</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>u16<sp/>frontier,<sp/>as<sp/>data<sp/>to<sp/>be<sp/>received<sp/>from<sp/>RDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>through<sp/>a<sp/>u16<sp/>cast.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Reception<sp/>type<sp/>to<sp/>Standard<sp/>reception<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group___exported__macros_1gabe1d97ef8a001d77efa0d7633e7a42de" kindref="member">IS_LPUART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)))</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>USART<sp/>RTOEN<sp/>bit<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gab89524eda63950f55bc47208a66b7dca" kindref="member">USART_CR2_RTOEN</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Receiver<sp/>Timeout<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gabfe55005a97f8ea7ca8e630e6c08912d" kindref="member">USART_CR1_RTOIE</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1ga6629cec6016bd4dc0ea1bbce9e20898f" kindref="member">UART_Start_Receive_IT</ref>(huart,<sp/>pData,<sp/>Size));</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga821472e8c11e667d793b829a19c3e46c" kindref="member">HAL_UART_Transmit_DMA</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="1478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>u16<sp/>frontier,<sp/>as<sp/>data<sp/>copy<sp/>into<sp/>TDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>by<sp/>DMA<sp/>from<sp/>a<sp/>u16<sp/>frontier.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref><sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a80907b65d6f9541bc0dee444d16bc45b" kindref="member">TxXferSize</ref><sp/><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>transfer<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a3d7716d1d7a5717f09525efd19334864" kindref="member">XferCpltCallback</ref><sp/>=<sp/>UART_DMATransmitCplt;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Half<sp/>transfer<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1aea6af14bab20d3f9a82f08df1abea01a" kindref="member">XferHalfCpltCallback</ref><sp/>=<sp/>UART_DMATxHalfCplt;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>DMA<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a695c6fe664a7baf827e461652ebdb9e0" kindref="member">XferErrorCallback</ref><sp/>=<sp/>UART_DMAError;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>DMA<sp/>abort<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>transmit<sp/>DMA<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga7eddc0931ac8a3d77b23d6d5e68407c7" kindref="member">HAL_DMA_Start_IT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>,<sp/>(uint32_t)huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref>,<sp/>(uint32_t)&amp;huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a40540a209bca9f0e2045a5748e1803da" kindref="member">TDR</ref>,<sp/>Size)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>to<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>TC<sp/>flag<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gadfbfe4df408d1d09ff2adc1ddad3de09" kindref="member">UART_CLEAR_TCF</ref>);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>DMA<sp/>transfer<sp/>for<sp/>transmit<sp/>request<sp/>by<sp/>setting<sp/>the<sp/>DMAT<sp/>bit</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>UART<sp/>CR3<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gad674cce054e58927720cd689620ffa08" kindref="member">HAL_UART_Receive_DMA</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>u16<sp/>frontier,<sp/>as<sp/>data<sp/>copy<sp/>from<sp/>RDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>by<sp/>DMA<sp/>from<sp/>a<sp/>u16<sp/>frontier.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Reception<sp/>type<sp/>to<sp/>Standard<sp/>reception<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group___exported__macros_1gabe1d97ef8a001d77efa0d7633e7a42de" kindref="member">IS_LPUART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)))</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>USART<sp/>RTOEN<sp/>bit<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gab89524eda63950f55bc47208a66b7dca" kindref="member">USART_CR2_RTOEN</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Receiver<sp/>Timeout<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gabfe55005a97f8ea7ca8e630e6c08912d" kindref="member">USART_CR1_RTOIE</ref>);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1ga3821d988f1d6feb39dc86ab5010d0a9c" kindref="member">UART_Start_Receive_DMA</ref>(huart,<sp/>pData,<sp/>Size));</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga8a713fd976d8ef02b818ea6ff0d4e41a" kindref="member">HAL_UART_DMAPause</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref><sp/>gstate<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref>;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref><sp/>rxstate<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref>;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(gstate<sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>))</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(rxstate<sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>))</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gaf2b3e6004d0200857781809baa16072d" kindref="member">HAL_UART_DMAResume</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>)</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Overrun<sp/>flag<sp/>before<sp/>resuming<sp/>the<sp/>Rx<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Re-enable<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gab21aa06cfbaa1665b1062a803fcb4217" kindref="member">HAL_UART_DMAStop</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>Lock<sp/>is<sp/>not<sp/>implemented<sp/>on<sp/>this<sp/>API<sp/>to<sp/>allow<sp/>the<sp/>user<sp/>application</highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>to<sp/>call<sp/>the<sp/>HAL<sp/>UART<sp/>API<sp/>under<sp/>callbacks<sp/>HAL_UART_TxCpltCallback()<sp/>/<sp/>HAL_UART_RxCpltCallback()<sp/>/</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>HAL_UART_TxHalfCpltCallback<sp/>/<sp/>HAL_UART_RxHalfCpltCallback:</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>indeed,<sp/>when<sp/>HAL_DMA_Abort()<sp/>API<sp/>is<sp/>called,<sp/>the<sp/>DMA<sp/>TX/RX<sp/>Transfer<sp/>or<sp/>Half<sp/>Transfer<sp/>complete</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>interrupt<sp/>is<sp/>generated<sp/>if<sp/>the<sp/>DMA<sp/>transfer<sp/>interruption<sp/>occurs<sp/>at<sp/>the<sp/>middle<sp/>or<sp/>at<sp/>the<sp/>end<sp/>of</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>stream<sp/>and<sp/>the<sp/>corresponding<sp/>call<sp/>back<sp/>is<sp/>executed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref><sp/>gstate<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref>;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref><sp/>rxstate<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>if<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(gstate<sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>))</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group3_1gabc0735694a0dd08e352b796d7fa7634f" kindref="member">HAL_DMA_GetError</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>==<sp/><ref refid="group___d_m_a___error___code_1ga6cf6a5b8881ff36ed4316a29bbfb5b79" kindref="member">HAL_DMA_ERROR_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_EndTxTransfer(huart);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(rxstate<sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>))</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group3_1gabc0735694a0dd08e352b796d7fa7634f" kindref="member">HAL_DMA_GetError</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>==<sp/><ref refid="group___d_m_a___error___code_1ga6cf6a5b8881ff36ed4316a29bbfb5b79" kindref="member">HAL_DMA_ERROR_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_EndRxTransfer(huart);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga2d7be1f59fc810f49dadc580307a4862" kindref="member">HAL_UART_Abort</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>TXE,<sp/>TC,<sp/>RXNE,<sp/>PE,<sp/>RXFT,<sp/>TXFT<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>));</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>was<sp/>ongoing,<sp/>disable<sp/>IDLEIE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>));</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>:<sp/>use<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(no<sp/>callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Abort<sp/>callback<sp/>to<sp/>Null.</highlight></codeline>
<codeline lineno="1759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No<sp/>call<sp/>back<sp/>execution<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group3_1gabc0735694a0dd08e352b796d7fa7634f" kindref="member">HAL_DMA_GetError</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>==<sp/><ref refid="group___d_m_a___error___code_1ga6cf6a5b8881ff36ed4316a29bbfb5b79" kindref="member">HAL_DMA_ERROR_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>:<sp/>use<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(no<sp/>callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Abort<sp/>callback<sp/>to<sp/>Null.</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No<sp/>call<sp/>back<sp/>execution<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group3_1gabc0735694a0dd08e352b796d7fa7634f" kindref="member">HAL_DMA_GetError</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>==<sp/><ref refid="group___d_m_a___error___code_1ga6cf6a5b8881ff36ed4316a29bbfb5b79" kindref="member">HAL_DMA_ERROR_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Tx<sp/>and<sp/>Rx<sp/>transfer<sp/>counters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>whole<sp/>TX<sp/>FIFO<sp/>(if<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gafecbd800f456ed666a42ac0842cd2c4b" kindref="member">UART_TXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>received<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga5a8858ffca45541416097961523d5fb2" kindref="member">HAL_UART_AbortTransmit</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>TCIE,<sp/>TXEIE<sp/>and<sp/>TXFTIE<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>));</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>:<sp/>use<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(no<sp/>callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Abort<sp/>callback<sp/>to<sp/>Null.</highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No<sp/>call<sp/>back<sp/>execution<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group3_1gabc0735694a0dd08e352b796d7fa7634f" kindref="member">HAL_DMA_GetError</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>==<sp/><ref refid="group___d_m_a___error___code_1ga6cf6a5b8881ff36ed4316a29bbfb5b79" kindref="member">HAL_DMA_ERROR_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Tx<sp/>transfer<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>whole<sp/>TX<sp/>FIFO<sp/>(if<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gafecbd800f456ed666a42ac0842cd2c4b" kindref="member">UART_TXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga9732372cfae60c019bb41554ab12edd6" kindref="member">HAL_UART_AbortReceive</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>PEIE,<sp/>EIE,<sp/>RXNEIE<sp/>and<sp/>RXFTIE<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>));</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>was<sp/>ongoing,<sp/>disable<sp/>IDLEIE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>));</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>:<sp/>use<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(no<sp/>callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Abort<sp/>callback<sp/>to<sp/>Null.</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No<sp/>call<sp/>back<sp/>execution<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group3_1gabc0735694a0dd08e352b796d7fa7634f" kindref="member">HAL_DMA_GetError</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>==<sp/><ref refid="group___d_m_a___error___code_1ga6cf6a5b8881ff36ed4316a29bbfb5b79" kindref="member">HAL_DMA_ERROR_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Rx<sp/>transfer<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>received<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga3183626ee21f103cbcb50241eca50e4d" kindref="member">HAL_UART_Abort_IT</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/>uint32_t<sp/>abortcplt<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>));</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>));</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>was<sp/>ongoing,<sp/>disable<sp/>IDLEIE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>));</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>DMA<sp/>Tx<sp/>and/or<sp/>DMA<sp/>Rx<sp/>Handles<sp/>are<sp/>associated<sp/>to<sp/>UART<sp/>Handle,<sp/>DMA<sp/>Abort<sp/>complete<sp/>callbacks<sp/>should<sp/>be<sp/>initialised</highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>before<sp/>any<sp/>call<sp/>to<sp/>DMA<sp/>Abort<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>Tx<sp/>Handle<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DMA<sp/>Abort<sp/>Complete<sp/>callback<sp/>if<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>if<sp/>enabled.</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise,<sp/>set<sp/>it<sp/>to<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>UART_DMATxAbortCallback;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>Rx<sp/>Handle<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DMA<sp/>Abort<sp/>Complete<sp/>callback<sp/>if<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>enabled.</highlight></codeline>
<codeline lineno="2001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise,<sp/>set<sp/>it<sp/>to<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>UART_DMARxAbortCallback;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>DMA<sp/>Tx<sp/>at<sp/>UART<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>:<sp/>use<sp/>non<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>Tx<sp/>DMA<sp/>Abort<sp/>callback<sp/>has<sp/>already<sp/>been<sp/>initialised<sp/>:</highlight></codeline>
<codeline lineno="2022"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>lead<sp/>to<sp/>call<sp/>HAL_UART_AbortCpltCallback()<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>DMA<sp/>TX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga6677d7e614747341a58ffd7a048fd390" kindref="member">HAL_DMA_Abort_IT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortcplt<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>:<sp/>use<sp/>non<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>Rx<sp/>DMA<sp/>Abort<sp/>callback<sp/>has<sp/>already<sp/>been<sp/>initialised<sp/>:</highlight></codeline>
<codeline lineno="2046"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>lead<sp/>to<sp/>call<sp/>HAL_UART_AbortCpltCallback()<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>DMA<sp/>RX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga6677d7e614747341a58ffd7a048fd390" kindref="member">HAL_DMA_Abort_IT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortcplt<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortcplt<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>DMA<sp/>abort<sp/>complete<sp/>callback<sp/>execution<sp/>is<sp/>required<sp/>=&gt;<sp/>call<sp/>user<sp/>Abort<sp/>Complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abortcplt<sp/>==<sp/>1U)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Tx<sp/>and<sp/>Rx<sp/>transfer<sp/>counters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>ISR<sp/>function<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>errorCode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>whole<sp/>TX<sp/>FIFO<sp/>(if<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gafecbd800f456ed666a42ac0842cd2c4b" kindref="member">UART_TXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>received<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>no<sp/>DMA<sp/>to<sp/>be<sp/>aborted,<sp/>call<sp/>directly<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;AbortCpltCallback(huart);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacdcb274a742093c45869f2cfbb0a8b09" kindref="member">HAL_UART_AbortCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0fba12f56413e2dbe8b96040ecf5aa7e" kindref="member">HAL_UART_AbortTransmit_IT</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>));</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Tx<sp/>channel<sp/>:<sp/>use<sp/>non<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Abort<sp/>callback<sp/>:</highlight></codeline>
<codeline lineno="2135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>lead<sp/>to<sp/>call<sp/>HAL_UART_AbortCpltCallback()<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>UART_DMATxOnlyAbortCallback;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>DMA<sp/>TX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga6677d7e614747341a58ffd7a048fd390" kindref="member">HAL_DMA_Abort_IT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>Directly<sp/>huart-&gt;hdmatx-&gt;XferAbortCallback<sp/>function<sp/>in<sp/>case<sp/>of<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Tx<sp/>transfer<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>TxISR<sp/>function<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>no<sp/>DMA<sp/>to<sp/>be<sp/>aborted,<sp/>call<sp/>directly<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>Transmit<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortTransmitCpltCallback(huart);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>Transmit<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacf94995fb9986930151f3c5586d37e5c" kindref="member">HAL_UART_AbortTransmitCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Tx<sp/>transfer<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>TxISR<sp/>function<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>whole<sp/>TX<sp/>FIFO<sp/>(if<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gafecbd800f456ed666a42ac0842cd2c4b" kindref="member">UART_TXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>no<sp/>DMA<sp/>to<sp/>be<sp/>aborted,<sp/>call<sp/>directly<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>Transmit<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;AbortTransmitCpltCallback(huart);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>Transmit<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacf94995fb9986930151f3c5586d37e5c" kindref="member">HAL_UART_AbortTransmitCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gaad7bc5748b849abc29d18b2ddd02876f" kindref="member">HAL_UART_AbortReceive_IT</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>RXNE,<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>));</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>));</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>was<sp/>ongoing,<sp/>disable<sp/>IDLEIE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>));</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>:<sp/>use<sp/>non<sp/>blocking<sp/>DMA<sp/>Abort<sp/>API<sp/>(callback)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Abort<sp/>callback<sp/>:</highlight></codeline>
<codeline lineno="2232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>lead<sp/>to<sp/>call<sp/>HAL_UART_AbortCpltCallback()<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>UART_DMARxOnlyAbortCallback;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>DMA<sp/>RX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga6677d7e614747341a58ffd7a048fd390" kindref="member">HAL_DMA_Abort_IT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>Directly<sp/>huart-&gt;hdmarx-&gt;XferAbortCallback<sp/>function<sp/>in<sp/>case<sp/>of<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Rx<sp/>transfer<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>received<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>no<sp/>DMA<sp/>to<sp/>be<sp/>aborted,<sp/>call<sp/>directly<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortReceiveCpltCallback(huart);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0f9d15c5ae7b69f09e0ee5f2461e7e7a" kindref="member">HAL_UART_AbortReceiveCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Rx<sp/>transfer<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>no<sp/>DMA<sp/>to<sp/>be<sp/>aborted,<sp/>call<sp/>directly<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;AbortReceiveCpltCallback(huart);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0f9d15c5ae7b69f09e0ee5f2461e7e7a" kindref="member">HAL_UART_AbortReceiveCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gaad01472c507ceee3c5f2274c775ff3bf" kindref="member">HAL_UART_IRQHandler</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>uint32_t<sp/>isrflags<sp/><sp/><sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab3c49a96815fcbee63d95e1e74f20e75" kindref="member">ISR</ref>);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/>uint32_t<sp/>cr1its<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/>uint32_t<sp/>cr3its<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/>uint32_t<sp/>errorflags;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/>uint32_t<sp/>errorcode;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>no<sp/>error<sp/>occurs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>errorflags<sp/>=<sp/>(isrflags<sp/>&amp;<sp/>(uint32_t)(<ref refid="group___peripheral___registers___bits___definition_1gaa10e69d231b67d698ab59db3d338baa6" kindref="member">USART_ISR_PE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27cc4dfb6d5e817a69c80471b87deb4b" kindref="member">USART_ISR_FE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9e5b4a08e3655bed8ec3022947cfc542" kindref="member">USART_ISR_ORE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09c7d19477a091689f50bd0ef5b6a3d8" kindref="member">USART_ISR_NE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09f8a368294fb6a5c47de1193484f3b8" kindref="member">USART_ISR_RTOF</ref>));</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorflags<sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>in<sp/>mode<sp/>Receiver<sp/>---------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe52544cefa3642d3d1b3db7473bdbf2" kindref="member">USART_ISR_RXNE_RXFNE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>)<sp/>!=<sp/>0U)))</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref>(huart);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>some<sp/>errors<sp/>occur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((errorflags<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((((cr3its<sp/>&amp;<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>))<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((cr1its<sp/>&amp;<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gabfe55005a97f8ea7ca8e630e6c08912d" kindref="member">USART_CR1_RTOIE</ref>))<sp/>!=<sp/>0U))))</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>parity<sp/>error<sp/>interrupt<sp/>occurred<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa10e69d231b67d698ab59db3d338baa6" kindref="member">USART_ISR_PE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref>);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gad447a37701acd199dcb653ce32917970" kindref="member">HAL_UART_ERROR_PE</ref>;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>frame<sp/>error<sp/>interrupt<sp/>occurred<sp/>--------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27cc4dfb6d5e817a69c80471b87deb4b" kindref="member">USART_ISR_FE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gaf23cb510d4dc2c8e05a45abfbf5f3457" kindref="member">HAL_UART_ERROR_FE</ref>;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>noise<sp/>error<sp/>interrupt<sp/>occurred<sp/>--------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09c7d19477a091689f50bd0ef5b6a3d8" kindref="member">USART_ISR_NE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref>);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1ga4a4e32a346dd01f4c41c4fc27afbc72c" kindref="member">HAL_UART_ERROR_NE</ref>;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>Over-Run<sp/>interrupt<sp/>occurred<sp/>-----------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga9e5b4a08e3655bed8ec3022947cfc542" kindref="member">USART_ISR_ORE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>)<sp/>!=<sp/>0U)<sp/>||</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((cr3its<sp/>&amp;<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>))<sp/>!=<sp/>0U)))</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref>);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gaedc030add6c499cf41be7f12dd95930c" kindref="member">HAL_UART_ERROR_ORE</ref>;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>Receiver<sp/>Timeout<sp/>interrupt<sp/>occurred<sp/>---------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09f8a368294fb6a5c47de1193484f3b8" kindref="member">USART_ISR_RTOF</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabfe55005a97f8ea7ca8e630e6c08912d" kindref="member">USART_CR1_RTOIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2735a415d2c7930fdf2818943fd7ddd2" kindref="member">UART_CLEAR_RTOF</ref>);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1ga54c152e7fd4eb25b6e7a3d5dedabfdc2" kindref="member">HAL_UART_ERROR_RTO</ref>;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>UART<sp/>Error<sp/>Call<sp/>back<sp/>function<sp/>if<sp/>need<sp/>be<sp/>----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>)</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>in<sp/>mode<sp/>Receiver<sp/>--------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe52544cefa3642d3d1b3db7473bdbf2" kindref="member">USART_ISR_RXNE_RXFNE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>)<sp/>!=<sp/>0U)))</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref>(huart);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Error<sp/>is<sp/>to<sp/>be<sp/>considered<sp/>as<sp/>blocking<sp/>:</highlight></codeline>
<codeline lineno="2391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Receiver<sp/>Timeout<sp/>error<sp/>in<sp/>Reception</highlight></codeline>
<codeline lineno="2392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Overrun<sp/>error<sp/>in<sp/>Reception</highlight></codeline>
<codeline lineno="2393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>any<sp/>error<sp/>occurs<sp/>in<sp/>DMA<sp/>mode<sp/>reception</highlight></codeline>
<codeline lineno="2394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errorcode<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref>;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))<sp/>||</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((errorcode<sp/>&amp;<sp/>(<ref refid="group___u_a_r_t___error___definition_1ga54c152e7fd4eb25b6e7a3d5dedabfdc2" kindref="member">HAL_UART_ERROR_RTO</ref><sp/>|<sp/><ref refid="group___u_a_r_t___error___definition_1gaedc030add6c499cf41be7f12dd95930c" kindref="member">HAL_UART_ERROR_ORE</ref>))<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Blocking<sp/>error<sp/>:<sp/>transfer<sp/>is<sp/>aborted</highlight></codeline>
<codeline lineno="2400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>UART<sp/>state<sp/>ready<sp/>to<sp/>be<sp/>able<sp/>to<sp/>start<sp/>again<sp/>the<sp/>process,</highlight></codeline>
<codeline lineno="2401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>Rx<sp/>Interrupts,<sp/>and<sp/>disable<sp/>Rx<sp/>DMA<sp/>request,<sp/>if<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UART_EndRxTransfer(huart);</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>the<sp/>UART<sp/>DMA<sp/>Rx<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Abort<sp/>callback<sp/>:</highlight></codeline>
<codeline lineno="2414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>lead<sp/>to<sp/>call<sp/>HAL_UART_ErrorCallback()<sp/>at<sp/>end<sp/>of<sp/>DMA<sp/>abort<sp/>procedure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>UART_DMAAbortOnError;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>DMA<sp/>RX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga6677d7e614747341a58ffd7a048fd390" kindref="member">HAL_DMA_Abort_IT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>Directly<sp/>huart-&gt;hdmarx-&gt;XferAbortCallback<sp/>function<sp/>in<sp/>case<sp/>of<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>user<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCallback(huart);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>user<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCallback(huart);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non<sp/>Blocking<sp/>error<sp/>:<sp/>transfer<sp/>could<sp/>go<sp/>on.</highlight></codeline>
<codeline lineno="2452"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>is<sp/>notified<sp/>to<sp/>user<sp/>through<sp/>user<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCallback(huart);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>if<sp/>some<sp/>error<sp/>occurs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>current<sp/>reception<sp/>Mode<sp/>:</highlight></codeline>
<codeline lineno="2468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected<sp/>:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gacee745b19e0a6073280d234fdc96e627" kindref="member">USART_ISR_IDLE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gacee745b19e0a6073280d234fdc96e627" kindref="member">USART_ISR_IDLE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>DMA<sp/>mode<sp/>is<sp/>enabled<sp/>in<sp/>UART<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>mode<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>received<sp/>length<sp/>:<sp/>If<sp/>all<sp/>expected<sp/>data<sp/>are<sp/>received,<sp/>do<sp/>nothing,</highlight></codeline>
<codeline lineno="2480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DMA<sp/>cplt<sp/>callback<sp/>will<sp/>be<sp/>called).</highlight></codeline>
<codeline lineno="2481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise,<sp/>if<sp/>at<sp/>least<sp/>one<sp/>data<sp/>has<sp/>already<sp/>been<sp/>received,<sp/>IDLE<sp/>event<sp/>is<sp/>to<sp/>be<sp/>notified<sp/>to<sp/>user<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>nb_remaining_rx_data<sp/>=<sp/>(uint16_t)<sp/><ref refid="group___d_m_a___exported___macros_1ga082d691311bac96641dc35a17cfe8e63" kindref="member">__HAL_DMA_GET_COUNTER</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nb_remaining_rx_data<sp/>&gt;<sp/>0U)</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(nb_remaining_rx_data<sp/>&lt;<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>))</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reception<sp/>is<sp/>not<sp/>complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>nb_remaining_rx_data;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>Normal<sp/>mode,<sp/>end<sp/>DMA<sp/>xfer<sp/>and<sp/>HAL<sp/>UART<sp/>Rx<sp/>process*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a82637a84fbdca0e2a25496089b549924" kindref="member">HAL_IS_BIT_CLR</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1adc5940b5bbf1fc712118cd40ff3ea69b" kindref="member">Instance</ref>-&gt;<ref refid="struct_d_m_a___channel___type_def_1a5e1322e27c40bf91d172f9673f205c97" kindref="member">CCR</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga445471396e741418bcd6f63404f4052c" kindref="member">DMA_CCR_CIRC</ref>))</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>DMA<sp/>transfer<sp/>for<sp/>the<sp/>receiver<sp/>request<sp/>by<sp/>resetting<sp/>the<sp/>DMAR<sp/>bit</highlight></codeline>
<codeline lineno="2497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>UART<sp/>CR3<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>end<sp/>of<sp/>Rx<sp/>process,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>bytes<sp/>received,<sp/>so<sp/>no<sp/>need<sp/>as<sp/>the<sp/>abort<sp/>is<sp/>immediate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="group___d_m_a___exported___functions___group2_1ga001f9fb04328a7460f9ff16908ff987c" kindref="member">HAL_DMA_Abort</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>that<sp/>correspond<sp/>to<sp/>RxEvent<sp/>callback<sp/>execution;</highlight></codeline>
<codeline lineno="2511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>Rx<sp/>Event<sp/>type<sp/>is<sp/>Idle<sp/>Event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1ga3c0c16c839b49a4ad14cdcb479b3e8d0" kindref="member">HAL_UART_RXEVENT_IDLE</ref>;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/>-<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>));</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/>-<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>));</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>mode<sp/>not<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>received<sp/>length<sp/>:<sp/>If<sp/>all<sp/>expected<sp/>data<sp/>are<sp/>received,<sp/>do<sp/>nothing.</highlight></codeline>
<codeline lineno="2528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise,<sp/>if<sp/>at<sp/>least<sp/>one<sp/>data<sp/>has<sp/>already<sp/>been<sp/>received,<sp/>IDLE<sp/>event<sp/>is<sp/>to<sp/>be<sp/>notified<sp/>to<sp/>user<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>nb_rx_data<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/>-<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>&gt;<sp/>0U)</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(nb_rx_data<sp/>&gt;<sp/>0U))</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>Interrupt<sp/>and<sp/>RXNE<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>));</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>and<sp/>RX<sp/>FIFO<sp/>Threshold<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>));</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rx<sp/>process<sp/>is<sp/>completed,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>that<sp/>correspond<sp/>to<sp/>RxEvent<sp/>callback<sp/>execution;</highlight></codeline>
<codeline lineno="2549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>Rx<sp/>Event<sp/>type<sp/>is<sp/>Idle<sp/>Event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1ga3c0c16c839b49a4ad14cdcb479b3e8d0" kindref="member">HAL_UART_RXEVENT_IDLE</ref>;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>nb_rx_data);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>nb_rx_data);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>wakeup<sp/>from<sp/>Stop<sp/>mode<sp/>interrupt<sp/>occurred<sp/>---------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gad8ea420fd72b3f22e3ae5c22242c6b72" kindref="member">USART_ISR_WUF</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8006ca5d160f9805977f2c77f146a75c" kindref="member">USART_CR3_WUFIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga5081c579f9956a7712248430f3fe129b" kindref="member">UART_CLEAR_WUF</ref>);</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>Rx<sp/>state<sp/>is<sp/>not<sp/>reset<sp/>as<sp/>a<sp/>reception<sp/>process<sp/>might<sp/>be<sp/>ongoing.</highlight></codeline>
<codeline lineno="2570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>UART<sp/>handle<sp/>state<sp/>fields<sp/>need<sp/>to<sp/>be<sp/>reset<sp/>to<sp/>READY,<sp/>this<sp/>could<sp/>be<sp/>done<sp/>in<sp/>Wakeup<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Wakeup<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;WakeupCallback(huart);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Wakeup<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga44d09cdf66fec468d956c64a23f61856" kindref="member">HAL_UARTEx_WakeupCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>in<sp/>mode<sp/>Transmitter<sp/>------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga18793a28000fe6bf23a08265951eb3e5" kindref="member">USART_ISR_TXE_TXFNF</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>)<sp/>!=<sp/>0U)))</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref>(huart);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>in<sp/>mode<sp/>Transmitter<sp/>(transmission<sp/>end)<sp/>-----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa41e8667b30453a6b966aded9f5e8cbb" kindref="member">USART_ISR_TC</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_EndTransmit_IT(huart);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>TX<sp/>Fifo<sp/>Empty<sp/>occurred<sp/>----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf322143841cafcdbc2f46b0a99c8c7c5" kindref="member">USART_ISR_TXFE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gab80e139b33533a335a75c58ef2e3ca3c" kindref="member">USART_CR1_TXFEIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Tx<sp/>Fifo<sp/>Empty<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;TxFifoEmptyCallback(huart);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Tx<sp/>Fifo<sp/>Empty<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga6136c1516c4319853fba64290aed1e9d" kindref="member">HAL_UARTEx_TxFifoEmptyCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>RX<sp/>Fifo<sp/>Full<sp/>occurred<sp/>----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaaf5a3b29c38098274947c0b8782997f" kindref="member">USART_ISR_RXFF</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga6d438200ec45e5fe92171128fcf48437" kindref="member">USART_CR1_RXFFIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Rx<sp/>Fifo<sp/>Full<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxFifoFullCallback(huart);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Fifo<sp/>Full<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga9275d738be064c56277b69384e6e3d14" kindref="member">HAL_UARTEx_RxFifoFullCallback</ref>(huart);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gabcdf9b59049eccbc87d54042f9235b1a" kindref="member">HAL_UART_TxCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_TxCpltCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2640"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga49b287e7de94cd0a38d333629298f7c4" kindref="member">HAL_UART_TxHalfCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_TxHalfCpltCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2655"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_RxCpltCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2670"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga1884970cc493d8efba5aec28c0d526e7" kindref="member">HAL_UART_RxHalfCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_RxHalfCpltCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2685"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2699"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_ErrorCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2700"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacdcb274a742093c45869f2cfbb0a8b09" kindref="member">HAL_UART_AbortCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_AbortCpltCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2715"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacf94995fb9986930151f3c5586d37e5c" kindref="member">HAL_UART_AbortTransmitCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2729"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_AbortTransmitCpltCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2730"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0f9d15c5ae7b69f09e0ee5f2461e7e7a" kindref="member">HAL_UART_AbortReceiveCpltCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UART_AbortReceiveCpltCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2745"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="2756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(Size);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="2762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UARTEx_RxEventCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="2763"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1gad4f80d5b4401432af132dedff0604d62" kindref="member">HAL_UART_ReceiverTimeout_Config</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint32_t<sp/>TimeoutValue)</highlight></codeline>
<codeline lineno="2804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group___exported__macros_1gabe1d97ef8a001d77efa0d7633e7a42de" kindref="member">IS_LPUART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)))</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gaee43ee42a5b1ba061322ab0763c6ef4f" kindref="member">IS_UART_RECEIVER_TIMEOUT_VALUE</ref>(TimeoutValue));</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1af702fd1614d8606cf715e9f961f2e381" kindref="member">RTOR</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5f6cdc5aefbbb5959a978588c1a6047e" kindref="member">USART_RTOR_RTO</ref>,<sp/>TimeoutValue);</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1gacda9bbd9e186cc41cb9895ab71c4161d" kindref="member">HAL_UART_EnableReceiverTimeout</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group___exported__macros_1gabe1d97ef8a001d77efa0d7633e7a42de" kindref="member">IS_LPUART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)))</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>USART<sp/>RTOEN<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gab89524eda63950f55bc47208a66b7dca" kindref="member">USART_CR2_RTOEN</ref>);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1ga9ef6e546da136b62ae4365cb4142dde8" kindref="member">HAL_UART_DisableReceiverTimeout</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group___exported__macros_1gabe1d97ef8a001d77efa0d7633e7a42de" kindref="member">IS_LPUART_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>)))</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>USART<sp/>RTOEN<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gab89524eda63950f55bc47208a66b7dca" kindref="member">USART_CR2_RTOEN</ref>);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1gad1e8ba15af5c8b25fd9eb31b9c85dfac" kindref="member">HAL_MultiProcessor_EnableMuteMode</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>USART<sp/>mute<sp/>mode<sp/>by<sp/>setting<sp/>the<sp/>MME<sp/>bit<sp/>in<sp/>the<sp/>CR1<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga4ae32b0c22f90fa8295d2ed96c2fd54d" kindref="member">USART_CR1_MME</ref>);</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="2906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1ga60e23409c6c4039dd71a45e41c69654f" kindref="member">HAL_MultiProcessor_DisableMuteMode</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>USART<sp/>mute<sp/>mode<sp/>by<sp/>clearing<sp/>the<sp/>MME<sp/>bit<sp/>in<sp/>the<sp/>CR1<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga4ae32b0c22f90fa8295d2ed96c2fd54d" kindref="member">USART_CR1_MME</ref>);</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="2926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1ga62b7a4ce64c678a3a79d747fe3f50883" kindref="member">HAL_MultiProcessor_EnterMuteMode</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gadd5f511803928fd042f7fc6ef99f9cfb" kindref="member">UART_MUTE_MODE_REQUEST</ref>);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1ga58d73e260a5536fb9cb40d7d2fe2b4bb" kindref="member">HAL_HalfDuplex_EnableTransmitter</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>TE<sp/>and<sp/>RE<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gade7f090b04fd78b755b43357ecaa9622" kindref="member">USART_CR1_TE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gada0d5d407a22264de847bc1b40a17aeb" kindref="member">USART_CR1_RE</ref>));</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>USART&apos;s<sp/>transmit<sp/>interface<sp/>by<sp/>setting<sp/>the<sp/>TE<sp/>bit<sp/>in<sp/>the<sp/>USART<sp/>CR1<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gade7f090b04fd78b755b43357ecaa9622" kindref="member">USART_CR1_TE</ref>);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1ga396ebbcdbe352c3393ad3007614383ac" kindref="member">HAL_HalfDuplex_EnableReceiver</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>TE<sp/>and<sp/>RE<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gade7f090b04fd78b755b43357ecaa9622" kindref="member">USART_CR1_TE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gada0d5d407a22264de847bc1b40a17aeb" kindref="member">USART_CR1_RE</ref>));</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>USART&apos;s<sp/>receive<sp/>interface<sp/>by<sp/>setting<sp/>the<sp/>RE<sp/>bit<sp/>in<sp/>the<sp/>USART<sp/>CR1<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gada0d5d407a22264de847bc1b40a17aeb" kindref="member">USART_CR1_RE</ref>);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group3_1gaffbf11fb4929f709004a11675cd25fcf" kindref="member">HAL_LIN_SendBreak</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="2992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga7d2763df993c77cfa6e249ec7bc80482" kindref="member">IS_UART_LIN_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>break<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1ga52ced88a9f4ce90f3725901cf91f38b3" kindref="member">UART_SENDBREAK_REQUEST</ref>);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref><sp/><ref refid="group___u_a_r_t___exported___functions___group4_1gad2799699d4d4b3c9d7fac0c3523fe45e" kindref="member">HAL_UART_GetState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/>uint32_t<sp/>temp1;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/>uint32_t<sp/>temp2;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/>temp1<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref>;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/>temp2<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref>;</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref>)(temp1<sp/>|<sp/>temp2);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal">uint32_t<sp/><ref refid="group___u_a_r_t___exported___functions___group4_1ga7297bf8c1679501a19c34f737c2eeea7" kindref="member">HAL_UART_GetError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref>;</highlight></codeline>
<codeline lineno="3055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_InitCallbacksToDefault(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>UART<sp/>Callback<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/>huart-&gt;TxHalfCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga49b287e7de94cd0a38d333629298f7c4" kindref="member">HAL_UART_TxHalfCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>TxHalfCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/>huart-&gt;TxCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gabcdf9b59049eccbc87d54042f9235b1a" kindref="member">HAL_UART_TxCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>TxCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/>huart-&gt;RxHalfCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga1884970cc493d8efba5aec28c0d526e7" kindref="member">HAL_UART_RxHalfCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>RxHalfCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/>huart-&gt;RxCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>RxCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/>huart-&gt;ErrorCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>ErrorCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>huart-&gt;AbortCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacdcb274a742093c45869f2cfbb0a8b09" kindref="member">HAL_UART_AbortCpltCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>AbortCpltCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/>huart-&gt;AbortTransmitCpltCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacf94995fb9986930151f3c5586d37e5c" kindref="member">HAL_UART_AbortTransmitCpltCallback</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>AbortTransmitCpltCallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/>huart-&gt;AbortReceiveCpltCallback<sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0f9d15c5ae7b69f09e0ee5f2461e7e7a" kindref="member">HAL_UART_AbortReceiveCpltCallback</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>AbortReceiveCpltCallback<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/>huart-&gt;WakeupCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga44d09cdf66fec468d956c64a23f61856" kindref="member">HAL_UARTEx_WakeupCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>WakeupCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/>huart-&gt;RxFifoFullCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga9275d738be064c56277b69384e6e3d14" kindref="member">HAL_UARTEx_RxFifoFullCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>RxFifoFullCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/>huart-&gt;TxFifoEmptyCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga6136c1516c4319853fba64290aed1e9d" kindref="member">HAL_UARTEx_TxFifoEmptyCallback</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>TxFifoEmptyCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>huart-&gt;RxEventCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Legacy<sp/>weak<sp/>RxEventCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___private___functions_1ga5a87d1b1c4284cae14f5a1402efaa11b" kindref="member">UART_SetConfig</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpreg;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>uint16_t<sp/>brrtemp;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___types_1gad957348fe227e5cb75b70be026c5ae81" kindref="member">UART_ClockSourceTypeDef</ref><sp/>clocksource;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/>uint32_t<sp/>usartdiv;</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/>uint32_t<sp/>lpuart_ker_ck_pres;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>uint32_t<sp/>pclk;</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gaa8f50c3cc4c04875ea490fb81a08731d" kindref="member">IS_UART_BAUDRATE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1aaad609733f3fd8146c8745e953a91b2a" kindref="member">BaudRate</ref>));</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t_ex___private___macros_1gaf856254e5a61d2ee81086918bffabde5" kindref="member">IS_UART_WORD_LENGTH</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref>));</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___macros_1gac0df0132f5d0ad91a86f2ee9489ba699" kindref="member">UART_INSTANCE_LOWPOWER</ref>(huart))</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga165adc0070f15c78424d279cb1ea70fc" kindref="member">IS_LPUART_STOPBITS</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a8394ba239444e3e5fe1ada1c37cb1019" kindref="member">StopBits</ref>));</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga0fa4dec621a59f8c07f42548cdbb7f18" kindref="member">IS_UART_STOPBITS</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a8394ba239444e3e5fe1ada1c37cb1019" kindref="member">StopBits</ref>));</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga6452a4420dac4abd4f0ea0e1677f37a9" kindref="member">IS_UART_ONE_BIT_SAMPLE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1af699e096fa74b5f58c1ee172025981ba" kindref="member">OneBitSampling</ref>));</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga57b0798bfa43d210f492eb3c5e218a86" kindref="member">IS_UART_PARITY</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref>));</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gae5b637b9191dea1f8fd3846b886dd38b" kindref="member">IS_UART_MODE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref>));</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga92977d9daf0c39d875df200ae0ae6acd" kindref="member">IS_UART_HARDWARE_FLOW_CONTROL</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a0a933d213b17470c582c8fec23a24d09" kindref="member">HwFlowCtl</ref>));</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga8d918253e015c4a8aa07316a89f8265e" kindref="member">IS_UART_OVERSAMPLING</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a35770b237370fda7fd0fabad22898490" kindref="member">OverSampling</ref>));</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga9d8c59b67eaeb7e5f112e7c9123039ae" kindref="member">IS_UART_PRESCALER</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ab791f8fac403d508e1c53b6f27cf1f24" kindref="member">ClockPrescaler</ref>));</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------<sp/>USART<sp/>CR1<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>M,<sp/>PCE,<sp/>PS,<sp/>TE,<sp/>RE<sp/>and<sp/>OVER8<sp/>bits<sp/>and<sp/>configure</highlight></codeline>
<codeline lineno="3129"><highlight class="comment"><sp/><sp/>*<sp/><sp/>the<sp/>UART<sp/>Word<sp/>Length,<sp/>Parity,<sp/>Mode<sp/>and<sp/>oversampling:</highlight></codeline>
<codeline lineno="3130"><highlight class="comment"><sp/><sp/>*<sp/><sp/>set<sp/>the<sp/>M<sp/>bits<sp/>according<sp/>to<sp/>huart-&gt;Init.WordLength<sp/>value</highlight></codeline>
<codeline lineno="3131"><highlight class="comment"><sp/><sp/>*<sp/><sp/>set<sp/>PCE<sp/>and<sp/>PS<sp/>bits<sp/>according<sp/>to<sp/>huart-&gt;Init.Parity<sp/>value</highlight></codeline>
<codeline lineno="3132"><highlight class="comment"><sp/><sp/>*<sp/><sp/>set<sp/>TE<sp/>and<sp/>RE<sp/>bits<sp/>according<sp/>to<sp/>huart-&gt;Init.Mode<sp/>value</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/><sp/>*<sp/><sp/>set<sp/>OVER8<sp/>bit<sp/>according<sp/>to<sp/>huart-&gt;Init.OverSampling<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/>(uint32_t)huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>|<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>|<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" kindref="member">Mode</ref><sp/>|<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a35770b237370fda7fd0fabad22898490" kindref="member">OverSampling</ref><sp/>;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>USART_CR1_FIELDS,<sp/>tmpreg);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------<sp/>USART<sp/>CR2<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>UART<sp/>Stop<sp/>Bits:<sp/>Set<sp/>STOP[13:12]<sp/>bits<sp/>according</highlight></codeline>
<codeline lineno="3139"><highlight class="comment"><sp/><sp/>*<sp/>to<sp/>huart-&gt;Init.StopBits<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf993e483318ebcecffd18649de766dc6" kindref="member">USART_CR2_STOP</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a8394ba239444e3e5fe1ada1c37cb1019" kindref="member">StopBits</ref>);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------<sp/>USART<sp/>CR3<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure</highlight></codeline>
<codeline lineno="3144"><highlight class="comment"><sp/><sp/>*<sp/>-<sp/>UART<sp/>HardWare<sp/>Flow<sp/>Control:<sp/>set<sp/>CTSE<sp/>and<sp/>RTSE<sp/>bits<sp/>according</highlight></codeline>
<codeline lineno="3145"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/>to<sp/>huart-&gt;Init.HwFlowCtl<sp/>value</highlight></codeline>
<codeline lineno="3146"><highlight class="comment"><sp/><sp/>*<sp/>-<sp/>one-bit<sp/>sampling<sp/>method<sp/>versus<sp/>three<sp/>samples&apos;<sp/>majority<sp/>rule<sp/>according</highlight></codeline>
<codeline lineno="3147"><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/>to<sp/>huart-&gt;Init.OneBitSampling<sp/>(not<sp/>applicable<sp/>to<sp/>LPUART)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/>tmpreg<sp/>=<sp/>(uint32_t)huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a0a933d213b17470c582c8fec23a24d09" kindref="member">HwFlowCtl</ref>;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group___u_a_r_t___private___macros_1gac0df0132f5d0ad91a86f2ee9489ba699" kindref="member">UART_INSTANCE_LOWPOWER</ref>(huart)))</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpreg<sp/>|=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1af699e096fa74b5f58c1ee172025981ba" kindref="member">OneBitSampling</ref>;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>USART_CR3_FIELDS,<sp/>tmpreg);</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------<sp/>USART<sp/>PRESC<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure</highlight></codeline>
<codeline lineno="3158"><highlight class="comment"><sp/><sp/>*<sp/>-<sp/>UART<sp/>Clock<sp/>Prescaler<sp/>:<sp/>set<sp/>PRESCALER<sp/>according<sp/>to<sp/>huart-&gt;Init.ClockPrescaler<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1af455f54206b36a7cfd7441501adf7535" kindref="member">PRESC</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga232a983aab5682e588622a06c176ebfa" kindref="member">USART_PRESC_PRESCALER</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ab791f8fac403d508e1c53b6f27cf1f24" kindref="member">ClockPrescaler</ref>);</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*--------------------------<sp/>USART<sp/>BRR<sp/>Configuration<sp/>-----------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/>UART_GETCLOCKSOURCE(huart,<sp/>clocksource);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>LPUART<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___macros_1gac0df0132f5d0ad91a86f2ee9489ba699" kindref="member">UART_INSTANCE_LOWPOWER</ref>(huart))</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retrieve<sp/>frequency<sp/>clock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(clocksource)</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81a96ac2df7b663207f2e8be97e0e18a3bb" kindref="member">UART_CLOCKSOURCE_PCLK1</ref>:</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/><ref refid="group___r_c_c___exported___functions___group2_1gab3042d8ac5703ac696cabf0ee461c599" kindref="member">HAL_RCC_GetPCLK1Freq</ref>();</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81af4da147f3b62642e1ce6d2cb22aff32e" kindref="member">UART_CLOCKSOURCE_HSI</ref>:</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>(uint32_t)<sp/><ref refid="stm32g0xx__hal__conf_8h_1aaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9abf4484d0f83bf9b3ccc8ef72a592e" kindref="member">UART_CLOCKSOURCE_SYSCLK</ref>:</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/><ref refid="group___r_c_c___exported___functions___group2_1ga887cafe88b21a059061b077a1e3fa7d8" kindref="member">HAL_RCC_GetSysClockFreq</ref>();</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9335bad77171144c2994f1554ce3901" kindref="member">UART_CLOCKSOURCE_LSE</ref>:</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>(uint32_t)<sp/><ref refid="stm32g0xx__hal__conf_8h_1a7bbb9d19e5189a6ccd0fb6fa6177d20d" kindref="member">LSE_VALUE</ref>;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>proper<sp/>clock<sp/>source<sp/>reported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pclk<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>clock<sp/>after<sp/>Prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpuart_ker_ck_pres<sp/>=<sp/>(pclk<sp/>/<sp/><ref refid="group___u_a_r_t___private__variables_1gac70d2aee3dafd85230030ff31ae8364e" kindref="member">UARTPrescTable</ref>[huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ab791f8fac403d508e1c53b6f27cf1f24" kindref="member">ClockPrescaler</ref>]);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>that<sp/>Frequency<sp/>clock<sp/>is<sp/>in<sp/>the<sp/>range<sp/>[3<sp/>*<sp/>baudrate,<sp/>4096<sp/>*<sp/>baudrate]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lpuart_ker_ck_pres<sp/>&lt;<sp/>(3U<sp/>*<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1aaad609733f3fd8146c8745e953a91b2a" kindref="member">BaudRate</ref>))<sp/>||</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lpuart_ker_ck_pres<sp/>&gt;<sp/>(4096U<sp/>*<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1aaad609733f3fd8146c8745e953a91b2a" kindref="member">BaudRate</ref>)))</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>computed<sp/>UsartDiv<sp/>value<sp/>is<sp/>in<sp/>allocated<sp/>range</highlight></codeline>
<codeline lineno="3203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it<sp/>is<sp/>forbidden<sp/>to<sp/>write<sp/>values<sp/>lower<sp/>than<sp/>0x300<sp/>in<sp/>the<sp/>LPUART_BRR<sp/>register)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usartdiv<sp/>=<sp/>(uint32_t)(<ref refid="group___u_a_r_t___private___macros_1gacdbf9c41318d542f8fe3841d6981e89f" kindref="member">UART_DIV_LPUART</ref>(pclk,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1aaad609733f3fd8146c8745e953a91b2a" kindref="member">BaudRate</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ab791f8fac403d508e1c53b6f27cf1f24" kindref="member">ClockPrescaler</ref>));</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((usartdiv<sp/>&gt;=<sp/>LPUART_BRR_MIN)<sp/>&amp;&amp;<sp/>(usartdiv<sp/>&lt;=<sp/>LPUART_BRR_MAX))</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a092e59d908b2ca112e31047e942340cb" kindref="member">BRR</ref><sp/>=<sp/>usartdiv;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>(<sp/>(lpuart_ker_ck_pres<sp/>&lt;<sp/>(3<sp/>*<sp/>huart-&gt;Init.BaudRate)<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="3214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lpuart_ker_ck_pres<sp/>&gt;<sp/>(4096<sp/>*<sp/>huart-&gt;Init.BaudRate)<sp/>))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>(pclk<sp/>!=<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>UART<sp/>Over<sp/>Sampling<sp/>to<sp/>set<sp/>Baud<sp/>Rate<sp/>Register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a35770b237370fda7fd0fabad22898490" kindref="member">OverSampling</ref><sp/>==<sp/><ref refid="group___u_a_r_t___over___sampling_1gaeb13896e8bdc1bb041e01a86a868ee0b" kindref="member">UART_OVERSAMPLING_8</ref>)</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(clocksource)</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81a96ac2df7b663207f2e8be97e0e18a3bb" kindref="member">UART_CLOCKSOURCE_PCLK1</ref>:</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/><ref refid="group___r_c_c___exported___functions___group2_1gab3042d8ac5703ac696cabf0ee461c599" kindref="member">HAL_RCC_GetPCLK1Freq</ref>();</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81af4da147f3b62642e1ce6d2cb22aff32e" kindref="member">UART_CLOCKSOURCE_HSI</ref>:</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>(uint32_t)<sp/><ref refid="stm32g0xx__hal__conf_8h_1aaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9abf4484d0f83bf9b3ccc8ef72a592e" kindref="member">UART_CLOCKSOURCE_SYSCLK</ref>:</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/><ref refid="group___r_c_c___exported___functions___group2_1ga887cafe88b21a059061b077a1e3fa7d8" kindref="member">HAL_RCC_GetSysClockFreq</ref>();</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9335bad77171144c2994f1554ce3901" kindref="member">UART_CLOCKSOURCE_LSE</ref>:</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>(uint32_t)<sp/><ref refid="stm32g0xx__hal__conf_8h_1a7bbb9d19e5189a6ccd0fb6fa6177d20d" kindref="member">LSE_VALUE</ref>;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USARTDIV<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0d16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pclk<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usartdiv<sp/>=<sp/>(uint32_t)(<ref refid="group___u_a_r_t___private___macros_1gae18b02b9da2d07b28bfc070fec4225a4" kindref="member">UART_DIV_SAMPLING8</ref>(pclk,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1aaad609733f3fd8146c8745e953a91b2a" kindref="member">BaudRate</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ab791f8fac403d508e1c53b6f27cf1f24" kindref="member">ClockPrescaler</ref>));</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((usartdiv<sp/>&gt;=<sp/>UART_BRR_MIN)<sp/>&amp;&amp;<sp/>(usartdiv<sp/>&lt;=<sp/>UART_BRR_MAX))</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brrtemp<sp/>=<sp/>(uint16_t)(usartdiv<sp/>&amp;<sp/>0xFFF0U);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brrtemp<sp/>|=<sp/>(uint16_t)((usartdiv<sp/>&amp;<sp/>(uint16_t)0x000FU)<sp/>&gt;&gt;<sp/>1U);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a092e59d908b2ca112e31047e942340cb" kindref="member">BRR</ref><sp/>=<sp/>brrtemp;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(clocksource)</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81a96ac2df7b663207f2e8be97e0e18a3bb" kindref="member">UART_CLOCKSOURCE_PCLK1</ref>:</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/><ref refid="group___r_c_c___exported___functions___group2_1gab3042d8ac5703ac696cabf0ee461c599" kindref="member">HAL_RCC_GetPCLK1Freq</ref>();</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81af4da147f3b62642e1ce6d2cb22aff32e" kindref="member">UART_CLOCKSOURCE_HSI</ref>:</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>(uint32_t)<sp/><ref refid="stm32g0xx__hal__conf_8h_1aaa8c76e274d0f6dd2cefb5d0b17fbc37" kindref="member">HSI_VALUE</ref>;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9abf4484d0f83bf9b3ccc8ef72a592e" kindref="member">UART_CLOCKSOURCE_SYSCLK</ref>:</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/><ref refid="group___r_c_c___exported___functions___group2_1ga887cafe88b21a059061b077a1e3fa7d8" kindref="member">HAL_RCC_GetSysClockFreq</ref>();</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9335bad77171144c2994f1554ce3901" kindref="member">UART_CLOCKSOURCE_LSE</ref>:</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>(uint32_t)<sp/><ref refid="stm32g0xx__hal__conf_8h_1a7bbb9d19e5189a6ccd0fb6fa6177d20d" kindref="member">LSE_VALUE</ref>;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pclk<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pclk<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USARTDIV<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0d16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usartdiv<sp/>=<sp/>(uint32_t)(<ref refid="group___u_a_r_t___private___macros_1ga5321c542a31ad6a0dff145a71e55c1c2" kindref="member">UART_DIV_SAMPLING16</ref>(pclk,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1aaad609733f3fd8146c8745e953a91b2a" kindref="member">BaudRate</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ab791f8fac403d508e1c53b6f27cf1f24" kindref="member">ClockPrescaler</ref>));</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((usartdiv<sp/>&gt;=<sp/>UART_BRR_MIN)<sp/>&amp;&amp;<sp/>(usartdiv<sp/>&lt;=<sp/>UART_BRR_MAX))</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a092e59d908b2ca112e31047e942340cb" kindref="member">BRR</ref><sp/>=<sp/>(uint16_t)usartdiv;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>number<sp/>of<sp/>data<sp/>to<sp/>process<sp/>during<sp/>RX/TX<sp/>ISR<sp/>execution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4edc9627c21dad457c2cfadf59f08b45" kindref="member">NbTxDataToProcess</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a3cd3fa87f15dcbca9a876ec343ccf3b7" kindref="member">NbRxDataToProcess</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>ISR<sp/>function<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="3302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___private___functions_1gacd304011919c5ccd02544208c7aa451b" kindref="member">UART_AdvFeatureConfig</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>whether<sp/>the<sp/>set<sp/>of<sp/>advanced<sp/>features<sp/>to<sp/>configure<sp/>is<sp/>properly<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gad91bec43fbbaa25cec138ef8fcfbdad5" kindref="member">IS_UART_ADVFEATURE_INIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>));</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>TX<sp/>pin<sp/>active<sp/>level<sp/>inversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1ga17c49d1895d43bfd6e0cf993103731ae" kindref="member">UART_ADVFEATURE_TXINVERT_INIT</ref>))</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga4295a61b0afe152975609cedb9034fdc" kindref="member">IS_UART_ADVFEATURE_TXINV</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a60e165495975a7d568a8ffad4e8d8d82" kindref="member">TxPinLevelInvert</ref>));</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gadc2ad93cdc6d8f138f455a2fb671a211" kindref="member">USART_CR2_TXINV</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a60e165495975a7d568a8ffad4e8d8d82" kindref="member">TxPinLevelInvert</ref>);</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>RX<sp/>pin<sp/>active<sp/>level<sp/>inversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1gad5a4923f3e771d276c6a5332e3945e2a" kindref="member">UART_ADVFEATURE_RXINVERT_INIT</ref>))</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga7f53ad0eca57b7ffabcae9007b7bbfa6" kindref="member">IS_UART_ADVFEATURE_RXINV</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1aac4de1a4e7a0036f074a66c3bdc81322" kindref="member">RxPinLevelInvert</ref>));</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gafff10115e1adb07c00f42627cedf01e5" kindref="member">USART_CR2_RXINV</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1aac4de1a4e7a0036f074a66c3bdc81322" kindref="member">RxPinLevelInvert</ref>);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>data<sp/>inversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1ga3066937ab29631f78820865605e83628" kindref="member">UART_ADVFEATURE_DATAINVERT_INIT</ref>))</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga8f6cd85ae5ce7f8dd0ed9227ef5154f6" kindref="member">IS_UART_ADVFEATURE_DATAINV</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a1feb1398f541e95a819aea3aed2d7552" kindref="member">DataInvert</ref>));</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8f743bbd3df209bd1d434b17e08a78fe" kindref="member">USART_CR2_DATAINV</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a1feb1398f541e95a819aea3aed2d7552" kindref="member">DataInvert</ref>);</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>RX/TX<sp/>pins<sp/>swap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1ga56b48c24063e0f04b09f592c3ce7d2ac" kindref="member">UART_ADVFEATURE_SWAP_INIT</ref>))</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gaf095ad39d3035f722c6976921a84dbea" kindref="member">IS_UART_ADVFEATURE_SWAP</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ac584fd738a8eca4af2f92cd10d593ab0" kindref="member">Swap</ref>));</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga4aecba5721df1c1adb6d0264625accad" kindref="member">USART_CR2_SWAP</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ac584fd738a8eca4af2f92cd10d593ab0" kindref="member">Swap</ref>);</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>RX<sp/>overrun<sp/>detection<sp/>disabling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1ga053355b64de3105a19f3e5560f3557e4" kindref="member">UART_ADVFEATURE_RXOVERRUNDISABLE_INIT</ref>))</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga57b4229ecb4387a0bb9137fed8de13b8" kindref="member">IS_UART_OVERRUN</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a482f50369e2e24a560b9fd8db7b23aae" kindref="member">OverrunDisable</ref>));</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga33d63c7953788124179cd18a8890a91a" kindref="member">USART_CR3_OVRDIS</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a482f50369e2e24a560b9fd8db7b23aae" kindref="member">OverrunDisable</ref>);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>DMA<sp/>disabling<sp/>on<sp/>reception<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1gafd2fb1991911b82d75556eafe228ef90" kindref="member">UART_ADVFEATURE_DMADISABLEONERROR_INIT</ref>))</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga15b46dfa0d80a4583864a31da73e3c99" kindref="member">IS_UART_ADVFEATURE_DMAONRXERROR</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a8ebe515413b9d135fc10d8b6d7a81ac9" kindref="member">DMADisableonRxError</ref>));</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gae1f1b53b09336e82958755747853a753" kindref="member">USART_CR3_DDRE</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a8ebe515413b9d135fc10d8b6d7a81ac9" kindref="member">DMADisableonRxError</ref>);</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>auto<sp/>Baud<sp/>rate<sp/>detection<sp/>scheme<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1ga09fdbb71292c899d6dc89a41e5752564" kindref="member">UART_ADVFEATURE_AUTOBAUDRATE_INIT</ref>))</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga4130cef42f8cada5a91c38b85f76939e" kindref="member">IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga7318c3e5c175b896444697a0a9407b2f" kindref="member">IS_UART_ADVFEATURE_AUTOBAUDRATE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1aa0294d5e5601064664be71c10a9601c2" kindref="member">AutoBaudRateEnable</ref>));</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaa290a89959d43fecf43f89d66123a0a" kindref="member">USART_CR2_ABREN</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1aa0294d5e5601064664be71c10a9601c2" kindref="member">AutoBaudRateEnable</ref>);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>auto<sp/>Baudrate<sp/>detection<sp/>parameters<sp/>if<sp/>detection<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1aa0294d5e5601064664be71c10a9601c2" kindref="member">AutoBaudRateEnable</ref><sp/>==<sp/><ref refid="group___u_a_r_t___auto_baud_rate___enable_1gad4eee70c6d23721dd95c6a2465e10ca4" kindref="member">UART_ADVFEATURE_AUTOBAUDRATE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga88f07bdfe1fcdff17edbbba2f196110d" kindref="member">IS_UART_ADVFEATURE_AUTOBAUDRATEMODE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a428166055c9499e0753a75703aeadae5" kindref="member">AutoBaudRateMode</ref>));</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga7b0a61926b32b1bbe136944c4133d2be" kindref="member">USART_CR2_ABRMODE</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a428166055c9499e0753a75703aeadae5" kindref="member">AutoBaudRateMode</ref>);</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>required,<sp/>configure<sp/>MSB<sp/>first<sp/>on<sp/>communication<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref>,<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1ga911654f44cd040f41871ec5af5ec1343" kindref="member">UART_ADVFEATURE_MSBFIRST_INIT</ref>))</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga82289de330949918b037acf94fb12aef" kindref="member">IS_UART_ADVFEATURE_MSBFIRST</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a4533506da01ae4e82bf4dd7211fb1c45" kindref="member">MSBFirst</ref>));</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga7342ab16574cebf157aa885a79986812" kindref="member">USART_CR2_MSBFIRST</ref>,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1a4533506da01ae4e82bf4dd7211fb1c45" kindref="member">MSBFirst</ref>);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>UART<sp/>ErrorCode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>tickstart<sp/>for<sp/>timeout<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/><ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>();</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>Transmitter<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref><sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gade7f090b04fd78b755b43357ecaa9622" kindref="member">USART_CR1_TE</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1gade7f090b04fd78b755b43357ecaa9622" kindref="member">USART_CR1_TE</ref>)</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>until<sp/>TEACK<sp/>flag<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad377d340a4703ef434289d54794c281f" kindref="member">UART_WaitOnFlagUntilTimeout</ref>(huart,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaf1433ae77d20ec6da645117cde536f81" kindref="member">USART_ISR_TEACK</ref>,<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>,<sp/>tickstart,<sp/><ref refid="group___u_a_r_t___time_out___value_1gaddb45b57fd556fb7cd763daa479f8ced" kindref="member">HAL_UART_TIMEOUT_VALUE</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timeout<sp/>occurred<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>Receiver<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref><sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gada0d5d407a22264de847bc1b40a17aeb" kindref="member">USART_CR1_RE</ref>)<sp/>==<sp/><ref refid="group___peripheral___registers___bits___definition_1gada0d5d407a22264de847bc1b40a17aeb" kindref="member">USART_CR1_RE</ref>)</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>until<sp/>REACK<sp/>flag<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad377d340a4703ef434289d54794c281f" kindref="member">UART_WaitOnFlagUntilTimeout</ref>(huart,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa513c61dd111de0945d8dd0778e70ad5" kindref="member">USART_ISR_REACK</ref>,<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>,<sp/>tickstart,<sp/><ref refid="group___u_a_r_t___time_out___value_1gaddb45b57fd556fb7cd763daa479f8ced" kindref="member">HAL_UART_TIMEOUT_VALUE</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timeout<sp/>occurred<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>UART<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___private___functions_1gad377d340a4703ef434289d54794c281f" kindref="member">UART_WaitOnFlagUntilTimeout</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint32_t<sp/>Flag,<sp/><ref refid="group___exported__types_1ga89136caac2e14c55151f527ac02daaff" kindref="member">FlagStatus</ref><sp/>Status,</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Tickstart,<sp/>uint32_t<sp/>Timeout)</highlight></codeline>
<codeline lineno="3438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>until<sp/>flag<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/>Flag)<sp/>?<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref><sp/>:<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>)<sp/>==<sp/>Status)</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>the<sp/>Timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Timeout<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1aad28bc64749c50dcedd6bf819fdc6974" kindref="member">HAL_MAX_DELAY</ref>)</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>()<sp/>-<sp/>Tickstart)<sp/>&gt;<sp/>Timeout)<sp/>||<sp/>(Timeout<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>TXE,<sp/>RXNE,<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)</highlight></codeline>
<codeline lineno="3448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupts<sp/>for<sp/>the<sp/>interrupt<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>));</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gada0d5d407a22264de847bc1b40a17aeb" kindref="member">USART_CR1_RE</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga69afec3b174a6b5969e71ea25d973958" kindref="member">UART_FLAG_RTOF</ref>)<sp/>==<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>)</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>Receiver<sp/>Timeout<sp/>flag*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2735a415d2c7930fdf2818943fd7ddd2" kindref="member">UART_CLEAR_RTOF</ref>);</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>TXE,<sp/>RXNE,<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)</highlight></codeline>
<codeline lineno="3469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupts<sp/>for<sp/>the<sp/>interrupt<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>));</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga54c152e7fd4eb25b6e7a3d5dedabfdc2" kindref="member">HAL_UART_ERROR_RTO</ref>;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___private___functions_1ga6629cec6016bd4dc0ea1bbce9e20898f" kindref="member">UART_Start_Receive_IT</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="3501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computation<sp/>of<sp/>UART<sp/>mask<sp/>to<sp/>apply<sp/>to<sp/>RDR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t_ex___private___macros_1gad9330184a8bd9399a36bcc93215a50d1" kindref="member">UART_MASK_COMPUTATION</ref>(huart);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>Rx<sp/>interrupt<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)<sp/>&amp;&amp;<sp/>(Size<sp/>&gt;=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a3cd3fa87f15dcbca9a876ec343ccf3b7" kindref="member">NbRxDataToProcess</ref>))</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Rx<sp/>ISR<sp/>function<sp/>pointer<sp/>according<sp/>to<sp/>the<sp/>data<sp/>word<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>UART_RxISR_16BIT_FIFOEN;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>UART_RxISR_8BIT_FIFOEN;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>interrupt<sp/>and<sp/>RX<sp/>FIFO<sp/>Threshold<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>)</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Rx<sp/>ISR<sp/>function<sp/>pointer<sp/>according<sp/>to<sp/>the<sp/>data<sp/>word<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>UART_RxISR_16BIT;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>UART_RxISR_8BIT;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>interrupt<sp/>and<sp/>Data<sp/>Register<sp/>Not<sp/>Empty<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>)</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>);</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>);</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t___private___functions_1ga3821d988f1d6feb39dc86ab5010d0a9c" kindref="member">UART_Start_Receive_DMA</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="3573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>transfer<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a3d7716d1d7a5717f09525efd19334864" kindref="member">XferCpltCallback</ref><sp/>=<sp/>UART_DMAReceiveCplt;</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>DMA<sp/>Half<sp/>transfer<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1aea6af14bab20d3f9a82f08df1abea01a" kindref="member">XferHalfCpltCallback</ref><sp/>=<sp/>UART_DMARxHalfCplt;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>DMA<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a695c6fe664a7baf827e461652ebdb9e0" kindref="member">XferErrorCallback</ref><sp/>=<sp/>UART_DMAError;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>DMA<sp/>abort<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>DMA<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_m_a___exported___functions___group2_1ga7eddc0931ac8a3d77b23d6d5e68407c7" kindref="member">HAL_DMA_Start_IT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>,<sp/>(uint32_t)&amp;huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref>,<sp/>(uint32_t)huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref>,<sp/>Size)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>error<sp/>code<sp/>to<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;RxState<sp/>to<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>)</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>DMA<sp/>transfer<sp/>for<sp/>the<sp/>receiver<sp/>request<sp/>by<sp/>setting<sp/>the<sp/>DMAR<sp/>bit</highlight></codeline>
<codeline lineno="3617"><highlight class="comment"><sp/><sp/>in<sp/>the<sp/>UART<sp/>CR3<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_EndTxTransfer(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>TXEIE,<sp/>TCIE,<sp/>TXFT<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>));</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>));</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>end<sp/>of<sp/>Tx<sp/>process,<sp/>restore<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_EndRxTransfer(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="3646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>RXNE,<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>));</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>));</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>reception<sp/>waiting<sp/>for<sp/>IDLE<sp/>event,<sp/>disable<sp/>also<sp/>the<sp/>IDLE<sp/>IE<sp/>interrupt<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>end<sp/>of<sp/>Rx<sp/>process,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"></highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>RxIsr<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATransmitCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>Normal<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a82637a84fbdca0e2a25496089b549924" kindref="member">HAL_IS_BIT_CLR</ref>(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1adc5940b5bbf1fc712118cd40ff3ea69b" kindref="member">Instance</ref>-&gt;<ref refid="struct_d_m_a___channel___type_def_1a5e1322e27c40bf91d172f9673f205c97" kindref="member">CCR</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga445471396e741418bcd6f63404f4052c" kindref="member">DMA_CCR_CIRC</ref>))</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>DMA<sp/>transfer<sp/>for<sp/>transmit<sp/>request<sp/>by<sp/>resetting<sp/>the<sp/>DMAT<sp/>bit</highlight></codeline>
<codeline lineno="3681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>UART<sp/>CR3<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>);</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Transmit<sp/>Complete<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>);</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>Circular<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Tx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;TxCpltCallback(huart);</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Tx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gabcdf9b59049eccbc87d54042f9235b1a" kindref="member">HAL_UART_TxCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATxHalfCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Tx<sp/>Half<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/>huart-&gt;TxHalfCpltCallback(huart);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Tx<sp/>Half<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga49b287e7de94cd0a38d333629298f7c4" kindref="member">HAL_UART_TxHalfCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMAReceiveCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>Normal<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stm32g0xx__hal__def_8h_1a82637a84fbdca0e2a25496089b549924" kindref="member">HAL_IS_BIT_CLR</ref>(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1adc5940b5bbf1fc712118cd40ff3ea69b" kindref="member">Instance</ref>-&gt;<ref refid="struct_d_m_a___channel___type_def_1a5e1322e27c40bf91d172f9673f205c97" kindref="member">CCR</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga445471396e741418bcd6f63404f4052c" kindref="member">DMA_CCR_CIRC</ref>))</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>PE<sp/>and<sp/>ERR<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>DMA<sp/>transfer<sp/>for<sp/>the<sp/>receiver<sp/>request<sp/>by<sp/>resetting<sp/>the<sp/>DMAR<sp/>bit</highlight></codeline>
<codeline lineno="3737"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>UART<sp/>CR3<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>);</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>end<sp/>of<sp/>Rx<sp/>process,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected,<sp/>Disable<sp/>IDLE<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>that<sp/>correspond<sp/>to<sp/>RxEvent<sp/>callback<sp/>execution;</highlight></codeline>
<codeline lineno="3751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>Rx<sp/>Event<sp/>type<sp/>is<sp/>Transfer<sp/>Complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>current<sp/>reception<sp/>Mode<sp/>:</highlight></codeline>
<codeline lineno="3755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected<sp/>:<sp/>use<sp/>Rx<sp/>Event<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>other<sp/>cases<sp/>:<sp/>use<sp/>Rx<sp/>Complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback(huart);</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMARxHalfCplt(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>that<sp/>correspond<sp/>to<sp/>RxEvent<sp/>callback<sp/>execution;</highlight></codeline>
<codeline lineno="3789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>Rx<sp/>Event<sp/>type<sp/>is<sp/>Half<sp/>Transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1ga2c892e22044c836a9cc922859663562c" kindref="member">HAL_UART_RXEVENT_HT</ref>;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>current<sp/>reception<sp/>Mode<sp/>:</highlight></codeline>
<codeline lineno="3793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected<sp/>:<sp/>use<sp/>Rx<sp/>Event<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/>/<sp/>2U);</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/>/<sp/>2U);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>other<sp/>cases<sp/>:<sp/>use<sp/>Rx<sp/>Half<sp/>Complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Half<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxHalfCpltCallback(huart);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Half<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga1884970cc493d8efba5aec28c0d526e7" kindref="member">HAL_UART_RxHalfCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMAError(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref><sp/>gstate<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref>;</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" kindref="member">HAL_UART_StateTypeDef</ref><sp/>rxstate<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref>;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>UART<sp/>DMA<sp/>Tx<sp/>request<sp/>if<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5bb515d3814d448f84e2c98bf44f3993" kindref="member">USART_CR3_DMAT</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(gstate<sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>))</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_EndTxTransfer(huart);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>UART<sp/>DMA<sp/>Rx<sp/>request<sp/>if<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="stm32g0xx__hal__def_8h_1a5b44dfd2a26f85f7b628b0945daff2c3" kindref="member">HAL_IS_BIT_SET</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaff130f15493c765353ec2fd605667c5a" kindref="member">USART_CR3_DMAR</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(rxstate<sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>))</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_EndRxTransfer(huart);</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gac1d608ae3499a449cd6cd102e7f86605" kindref="member">HAL_UART_ERROR_DMA</ref>;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/>huart-&gt;ErrorCallback(huart);</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMAAbortOnError(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/>huart-&gt;ErrorCallback(huart);</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATxAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>an<sp/>Abort<sp/>process<sp/>is<sp/>still<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>Abort<sp/>process<sp/>still<sp/>ongoing<sp/>:<sp/>All<sp/>DMA<sp/>channels<sp/>are<sp/>aborted,<sp/>call<sp/>user<sp/>Abort<sp/>Complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"></highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>errorCode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>whole<sp/>TX<sp/>FIFO<sp/>(if<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gafecbd800f456ed666a42ac0842cd2c4b" kindref="member">UART_TXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3922"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/>huart-&gt;AbortCpltCallback(huart);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacdcb274a742093c45869f2cfbb0a8b09" kindref="member">HAL_UART_AbortCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMARxAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1abd0aeec20298a55d89a440320e35634f" kindref="member">hdmarx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>an<sp/>Abort<sp/>process<sp/>is<sp/>still<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a33e13c28b1a70e6164417abb026d7a22" kindref="member">hdmatx</ref>-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6253dc8680e566bbc244228374dd647d" kindref="member">XferAbortCallback</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>Abort<sp/>process<sp/>still<sp/>ongoing<sp/>:<sp/>All<sp/>DMA<sp/>channels<sp/>are<sp/>aborted,<sp/>call<sp/>user<sp/>Abort<sp/>Complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>errorCode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>received<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/>huart-&gt;AbortCpltCallback(huart);</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacdcb274a742093c45869f2cfbb0a8b09" kindref="member">HAL_UART_AbortCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMATxOnlyAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="3993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)(hdma-&gt;<ref refid="struct_____d_m_a___handle_type_def_1a6ee5f2130887847bbc051932ea43b73d" kindref="member">Parent</ref>);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>the<sp/>whole<sp/>TX<sp/>FIFO<sp/>(if<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>)</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gafecbd800f456ed666a42ac0842cd2c4b" kindref="member">UART_TXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"></highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>Transmit<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/>huart-&gt;AbortTransmitCpltCallback(huart);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>Transmit<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gacf94995fb9986930151f3c5586d37e5c" kindref="member">HAL_UART_AbortTransmitCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_DMARxOnlyAbortCallback(<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*hdma)</highlight></codeline>
<codeline lineno="4026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart<sp/>=<sp/>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*)((<ref refid="struct_____d_m_a___handle_type_def" kindref="compound">DMA_HandleTypeDef</ref><sp/>*)hdma)-&gt;Parent;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"></highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga3bc97b70293f9a7bf8cc21a74094afad" kindref="member">UART_CLEAR_OREF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref><sp/>|<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>received<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/>huart-&gt;AbortReceiveCpltCallback(huart);</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0f9d15c5ae7b69f09e0ee5f2461e7e7a" kindref="member">HAL_UART_AbortReceiveCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_8BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>)</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Transmit<sp/>Data<sp/>Register<sp/>Empty<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>);</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Transmit<sp/>Complete<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>);</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a40540a209bca9f0e2045a5748e1803da" kindref="member">TDR</ref><sp/>=<sp/>(uint8_t)(*huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref><sp/>&amp;<sp/>(uint8_t)0xFF);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref>++;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_16BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*tmp;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>)</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Transmit<sp/>Data<sp/>Register<sp/>Empty<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga91ad128d8b96d94461290e19164bbfc3" kindref="member">USART_CR1_TXEIE_TXFNFIE</ref>);</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Transmit<sp/>Complete<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>);</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*)<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref>;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a40540a209bca9f0e2045a5748e1803da" kindref="member">TDR</ref><sp/>=<sp/>(((uint32_t)(*tmp))<sp/>&amp;<sp/>0x01FFUL);</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref><sp/>+=<sp/>2U;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_8BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>nb_tx_data;</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>)</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nb_tx_data<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4edc9627c21dad457c2cfadf59f08b45" kindref="member">NbTxDataToProcess</ref><sp/>;<sp/>nb_tx_data<sp/>&gt;<sp/>0U<sp/>;<sp/>nb_tx_data--)</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>TX<sp/>FIFO<sp/>threshold<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>);</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Transmit<sp/>Complete<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>);</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>force<sp/>exit<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab3c49a96815fcbee63d95e1e74f20e75" kindref="member">ISR</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga18793a28000fe6bf23a08265951eb3e5" kindref="member">USART_ISR_TXE_TXFNF</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a40540a209bca9f0e2045a5748e1803da" kindref="member">TDR</ref><sp/>=<sp/>(uint8_t)(*huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref><sp/>&amp;<sp/>(uint8_t)0xFF);</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref>++;</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_TxISR_16BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*tmp;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>nb_tx_data;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gabfe9c686182148f2ecd8527d31576163" kindref="member">HAL_UART_STATE_BUSY_TX</ref>)</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nb_tx_data<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4edc9627c21dad457c2cfadf59f08b45" kindref="member">NbTxDataToProcess</ref><sp/>;<sp/>nb_tx_data<sp/>&gt;<sp/>0U<sp/>;<sp/>nb_tx_data--)</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>TX<sp/>FIFO<sp/>threshold<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga55ca97ca5a14b5dfd06424324a35550f" kindref="member">USART_CR3_TXFTIE</ref>);</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Transmit<sp/>Complete<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>);</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>force<sp/>exit<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab3c49a96815fcbee63d95e1e74f20e75" kindref="member">ISR</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga18793a28000fe6bf23a08265951eb3e5" kindref="member">USART_ISR_TXE_TXFNF</ref>)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*)<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref>;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a40540a209bca9f0e2045a5748e1803da" kindref="member">TDR</ref><sp/>=<sp/>(((uint32_t)(*tmp))<sp/>&amp;<sp/>0x01FFUL);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a56746f60fbacd516e52e344de94f8195" kindref="member">pTxBuffPtr</ref><sp/>+=<sp/>2U;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a1823437fbed80bdd1510782ced4e5532" kindref="member">TxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_EndTransmit_IT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Transmit<sp/>Complete<sp/>Interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa17130690a1ca95b972429eb64d4254e" kindref="member">USART_CR1_TCIE</ref>);</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tx<sp/>process<sp/>is<sp/>ended,<sp/>restore<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cleat<sp/>TxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0cdae59c1d16b3bd4bcba349503728ed" kindref="member">TxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Tx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/>huart-&gt;TxCpltCallback(huart);</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Tx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gabcdf9b59049eccbc87d54042f9235b1a" kindref="member">HAL_UART_TxCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"></highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_8BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>uint16_t<sp/>uhMask<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab8dae64f3b86c2eb2b7a080fcdee3ef4" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>uhdata;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>)</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/>uhdata<sp/>=<sp/>(uint16_t)<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref>);</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/>*huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>=<sp/>(uint8_t)(uhdata<sp/>&amp;<sp/>(uint8_t)uhMask);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref>++;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>Interrupt<sp/>and<sp/>RXNE<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>));</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rx<sp/>process<sp/>is<sp/>completed,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"></highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>to<sp/>Transfer<sp/>Complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>current<sp/>reception<sp/>Mode<sp/>:</highlight></codeline>
<codeline lineno="4256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected<sp/>:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>reception<sp/>type<sp/>to<sp/>Standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>IDLE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga5d7a320c505672f7508e3bd99f532a69" kindref="member">UART_FLAG_IDLE</ref>)<sp/>==<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>)</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>IDLE<sp/>Flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Standard<sp/>reception<sp/>API<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback(huart);</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RXNE<sp/>interrupt<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_16BIT(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*tmp;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/>uint16_t<sp/>uhMask<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab8dae64f3b86c2eb2b7a080fcdee3ef4" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>uhdata;</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>)</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/>uhdata<sp/>=<sp/>(uint16_t)<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref>);</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(uint16_t<sp/>*)<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>;</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/>*tmp<sp/>=<sp/>(uint16_t)(uhdata<sp/>&amp;<sp/>uhMask);</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>+=<sp/>2U;</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>Interrupt<sp/>and<sp/>RXNE<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>));</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>);</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rx<sp/>process<sp/>is<sp/>completed,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>to<sp/>Transfer<sp/>Complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>current<sp/>reception<sp/>Mode<sp/>:</highlight></codeline>
<codeline lineno="4339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected<sp/>:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>reception<sp/>type<sp/>to<sp/>Standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>IDLE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga5d7a320c505672f7508e3bd99f532a69" kindref="member">UART_FLAG_IDLE</ref>)<sp/>==<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>)</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>IDLE<sp/>Flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Standard<sp/>reception<sp/>API<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback(huart);</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RXNE<sp/>interrupt<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_8BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>uhMask<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab8dae64f3b86c2eb2b7a080fcdee3ef4" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>uhdata;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>nb_rx_data;</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>rxdatacount;</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>isrflags<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab3c49a96815fcbee63d95e1e74f20e75" kindref="member">ISR</ref>);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>cr1its<sp/><sp/><sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>cr3its<sp/><sp/><sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>)</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_rx_data<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a3cd3fa87f15dcbca9a876ec343ccf3b7" kindref="member">NbRxDataToProcess</ref>;</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((nb_rx_data<sp/>&gt;<sp/>0U)<sp/>&amp;&amp;<sp/>((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe52544cefa3642d3d1b3db7473bdbf2" kindref="member">USART_ISR_RXNE_RXFNE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uhdata<sp/>=<sp/>(uint16_t)<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref>);</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>=<sp/>(uint8_t)(uhdata<sp/>&amp;<sp/>(uint8_t)uhMask);</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref>++;</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isrflags<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab3c49a96815fcbee63d95e1e74f20e75" kindref="member">ISR</ref>);</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>some<sp/>non<sp/>blocking<sp/>errors<sp/>occurred<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((isrflags<sp/>&amp;<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaa10e69d231b67d698ab59db3d338baa6" kindref="member">USART_ISR_PE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27cc4dfb6d5e817a69c80471b87deb4b" kindref="member">USART_ISR_FE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09c7d19477a091689f50bd0ef5b6a3d8" kindref="member">USART_ISR_NE</ref>))<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>parity<sp/>error<sp/>interrupt<sp/>occurred<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa10e69d231b67d698ab59db3d338baa6" kindref="member">USART_ISR_PE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref>);</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gad447a37701acd199dcb653ce32917970" kindref="member">HAL_UART_ERROR_PE</ref>;</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>frame<sp/>error<sp/>interrupt<sp/>occurred<sp/>--------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27cc4dfb6d5e817a69c80471b87deb4b" kindref="member">USART_ISR_FE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"></highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gaf23cb510d4dc2c8e05a45abfbf5f3457" kindref="member">HAL_UART_ERROR_FE</ref>;</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"></highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>noise<sp/>error<sp/>interrupt<sp/>occurred<sp/>--------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09c7d19477a091689f50bd0ef5b6a3d8" kindref="member">USART_ISR_NE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref>);</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1ga4a4e32a346dd01f4c41c4fc27afbc72c" kindref="member">HAL_UART_ERROR_NE</ref>;</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>UART<sp/>Error<sp/>Call<sp/>back<sp/>function<sp/>if<sp/>need<sp/>be<sp/>----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>)</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non<sp/>Blocking<sp/>error<sp/>:<sp/>transfer<sp/>could<sp/>go<sp/>on.</highlight></codeline>
<codeline lineno="4442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>is<sp/>notified<sp/>to<sp/>user<sp/>through<sp/>user<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCallback(huart);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>Interrupt<sp/>and<sp/>RXFT<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)</highlight></codeline>
<codeline lineno="4460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>RX<sp/>FIFO<sp/>Threshold<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>));</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rx<sp/>process<sp/>is<sp/>completed,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>to<sp/>Transfer<sp/>Complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>current<sp/>reception<sp/>Mode<sp/>:</highlight></codeline>
<codeline lineno="4473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected<sp/>:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>reception<sp/>type<sp/>to<sp/>Standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>IDLE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"></highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga5d7a320c505672f7508e3bd99f532a69" kindref="member">UART_FLAG_IDLE</ref>)<sp/>==<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>)</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>IDLE<sp/>Flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Standard<sp/>reception<sp/>API<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4499"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback(huart);</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>remaining<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>receive<sp/>is<sp/>less<sp/>than<sp/>the<sp/>RX<sp/>FIFO</highlight></codeline>
<codeline lineno="4511"><highlight class="comment"><sp/><sp/><sp/><sp/>threshold,<sp/>next<sp/>incoming<sp/>frames<sp/>are<sp/>processed<sp/>as<sp/>if<sp/>FIFO<sp/>mode<sp/>was</highlight></codeline>
<codeline lineno="4512"><highlight class="comment"><sp/><sp/><sp/><sp/>disabled<sp/>(i.e.<sp/>one<sp/>interrupt<sp/>per<sp/>received<sp/>frame).</highlight></codeline>
<codeline lineno="4513"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/>rxdatacount<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>;</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rxdatacount<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>(rxdatacount<sp/>&lt;<sp/>huart-&gt;NbRxDataToProcess))</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>RXFT<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>);</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>UART_RxISR_8BIT;</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"></highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Data<sp/>Register<sp/>Not<sp/>Empty<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>);</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RXNE<sp/>interrupt<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UART_RxISR_16BIT_FIFOEN(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="4542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*tmp;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>uhMask<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab8dae64f3b86c2eb2b7a080fcdee3ef4" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>uhdata;</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>nb_rx_data;</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>rxdatacount;</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>isrflags<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab3c49a96815fcbee63d95e1e74f20e75" kindref="member">ISR</ref>);</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>cr1its<sp/><sp/><sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>);</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>cr3its<sp/><sp/><sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>);</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>)</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_rx_data<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a3cd3fa87f15dcbca9a876ec343ccf3b7" kindref="member">NbRxDataToProcess</ref>;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((nb_rx_data<sp/>&gt;<sp/>0U)<sp/>&amp;&amp;<sp/>((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gabe52544cefa3642d3d1b3db7473bdbf2" kindref="member">USART_ISR_RXNE_RXFNE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uhdata<sp/>=<sp/>(uint16_t)<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref>);</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(uint16_t<sp/>*)<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>;</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*tmp<sp/>=<sp/>(uint16_t)(uhdata<sp/>&amp;<sp/>uhMask);</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a7cee540cb21048ac48ba17355440e668" kindref="member">pRxBuffPtr</ref><sp/>+=<sp/>2U;</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>--;</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isrflags<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab3c49a96815fcbee63d95e1e74f20e75" kindref="member">ISR</ref>);</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>some<sp/>non<sp/>blocking<sp/>errors<sp/>occurred<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((isrflags<sp/>&amp;<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaa10e69d231b67d698ab59db3d338baa6" kindref="member">USART_ISR_PE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27cc4dfb6d5e817a69c80471b87deb4b" kindref="member">USART_ISR_FE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09c7d19477a091689f50bd0ef5b6a3d8" kindref="member">USART_ISR_NE</ref>))<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>parity<sp/>error<sp/>interrupt<sp/>occurred<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa10e69d231b67d698ab59db3d338baa6" kindref="member">USART_ISR_PE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr1its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga9c2aef8048dd09ea5e72d69c63026f02" kindref="member">UART_CLEAR_PEF</ref>);</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gad447a37701acd199dcb653ce32917970" kindref="member">HAL_UART_ERROR_PE</ref>;</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>frame<sp/>error<sp/>interrupt<sp/>occurred<sp/>--------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27cc4dfb6d5e817a69c80471b87deb4b" kindref="member">USART_ISR_FE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga2040edf7a1daa2e9f352364e285ef5c3" kindref="member">UART_CLEAR_FEF</ref>);</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1gaf23cb510d4dc2c8e05a45abfbf5f3457" kindref="member">HAL_UART_ERROR_FE</ref>;</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>noise<sp/>error<sp/>interrupt<sp/>occurred<sp/>--------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((isrflags<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga09c7d19477a091689f50bd0ef5b6a3d8" kindref="member">USART_ISR_NE</ref>)<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>((cr3its<sp/>&amp;<sp/><ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref>)<sp/>!=<sp/>0U))</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1gad5b9aafb495296d917a5d85e63383396" kindref="member">UART_CLEAR_NEF</ref>);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>|=<sp/><ref refid="group___u_a_r_t___error___definition_1ga4a4e32a346dd01f4c41c4fc27afbc72c" kindref="member">HAL_UART_ERROR_NE</ref>;</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>UART<sp/>Error<sp/>Call<sp/>back<sp/>function<sp/>if<sp/>need<sp/>be<sp/>----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>)</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non<sp/>Blocking<sp/>error<sp/>:<sp/>transfer<sp/>could<sp/>go<sp/>on.</highlight></codeline>
<codeline lineno="4596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>is<sp/>notified<sp/>to<sp/>user<sp/>through<sp/>user<sp/>error<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4597"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCallback(huart);</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>error<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga0e0456ea96d55db31de947fb3e954f18" kindref="member">HAL_UART_ErrorCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>Interrupt<sp/>and<sp/>RXFT<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga27405d413b6d355ccdb076d52fef6875" kindref="member">USART_CR1_PEIE</ref>);</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"></highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)</highlight></codeline>
<codeline lineno="4614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>RX<sp/>FIFO<sp/>Threshold<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gaaed1a39c551b1641128f81893ff558d0" kindref="member">USART_CR3_EIE</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>));</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rx<sp/>process<sp/>is<sp/>completed,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"></highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"></highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>type<sp/>of<sp/>RxEvent<sp/>to<sp/>Transfer<sp/>Complete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>current<sp/>reception<sp/>Mode<sp/>:</highlight></codeline>
<codeline lineno="4627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>Reception<sp/>till<sp/>IDLE<sp/>event<sp/>has<sp/>been<sp/>selected<sp/>:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>reception<sp/>type<sp/>to<sp/>Standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1gae25ccd542b3d0e6180e38871da6070d2" kindref="member">HAL_UART_RECEPTION_STANDARD</ref>;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>IDLE<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga5d7a320c505672f7508e3bd99f532a69" kindref="member">UART_FLAG_IDLE</ref>)<sp/>==<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffab44c8101cc294c074709ec1b14211792" kindref="member">SET</ref>)</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>IDLE<sp/>Flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxEventCallback(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>Event<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1ga925534fb8bf7ca464fd05c982fe4bfa0" kindref="member">HAL_UARTEx_RxEventCallback</ref>(huart,<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref>);</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Standard<sp/>reception<sp/>API<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback(huart);</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group2_1gae494a9643f29b87d6d81e5264e60e57b" kindref="member">HAL_UART_RxCpltCallback</ref>(huart);</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>remaining<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>receive<sp/>is<sp/>less<sp/>than<sp/>the<sp/>RX<sp/>FIFO</highlight></codeline>
<codeline lineno="4665"><highlight class="comment"><sp/><sp/><sp/><sp/>threshold,<sp/>next<sp/>incoming<sp/>frames<sp/>are<sp/>processed<sp/>as<sp/>if<sp/>FIFO<sp/>mode<sp/>was</highlight></codeline>
<codeline lineno="4666"><highlight class="comment"><sp/><sp/><sp/><sp/>disabled<sp/>(i.e.<sp/>one<sp/>interrupt<sp/>per<sp/>received<sp/>frame).</highlight></codeline>
<codeline lineno="4667"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/>rxdatacount<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rxdatacount<sp/>!=<sp/>0U)<sp/>&amp;&amp;<sp/>(rxdatacount<sp/>&lt;<sp/>huart-&gt;NbRxDataToProcess))</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>RXFT<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga49fc035fafb880dadb6a60fdf2ba8795" kindref="member">USART_CR3_RXFTIE</ref>);</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a0926a4022cd4341cf25b918a7d74f9b8" kindref="member">RxISR</ref><sp/>=<sp/>UART_RxISR_16BIT;</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"></highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Data<sp/>Register<sp/>Not<sp/>Empty<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga8342cbdabe2a5ae03ee73452a9ebf935" kindref="member">USART_CR1_RXNEIE_RXFNEIE</ref>);</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RXNE<sp/>interrupt<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga568a15495a9e2a9d230474b9e8bcc8e4" kindref="member">__HAL_UART_SEND_REQ</ref>(huart,<sp/><ref refid="group___u_a_r_t___request___parameters_1gaf2ee2d4b1bdcbc7772ddc0da89566936" kindref="member">UART_RXDATA_FLUSH_REQUEST</ref>);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"></highlight></codeline>
<codeline lineno="4692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAL_UART_MODULE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c"/>
  </compounddef>
</doxygen>

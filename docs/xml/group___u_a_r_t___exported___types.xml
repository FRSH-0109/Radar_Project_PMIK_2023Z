<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="group___u_a_r_t___exported___types" kind="group">
    <compoundname>UART_Exported_Types</compoundname>
    <title>UART Exported Types</title>
    <innerclass refid="struct_u_a_r_t___init_type_def" prot="public">UART_InitTypeDef</innerclass>
    <innerclass refid="struct_u_a_r_t___adv_feature_init_type_def" prot="public">UART_AdvFeatureInitTypeDef</innerclass>
    <innerclass refid="struct_____u_a_r_t___handle_type_def" prot="public">__UART_HandleTypeDef</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group___u_a_r_t___exported___types_1gad957348fe227e5cb75b70be026c5ae81" prot="public" static="no" strong="no">
        <type></type>
        <name>UART_ClockSourceTypeDef</name>
        <enumvalue id="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81a96ac2df7b663207f2e8be97e0e18a3bb" prot="public">
          <name>UART_CLOCKSOURCE_PCLK1</name>
          <initializer>= 0x00U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PCLK1 clock source <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81af4da147f3b62642e1ce6d2cb22aff32e" prot="public">
          <name>UART_CLOCKSOURCE_HSI</name>
          <initializer>= 0x02U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HSI clock source <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9abf4484d0f83bf9b3ccc8ef72a592e" prot="public">
          <name>UART_CLOCKSOURCE_SYSCLK</name>
          <initializer>= 0x04U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SYSCLK clock source </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81ab9335bad77171144c2994f1554ce3901" prot="public">
          <name>UART_CLOCKSOURCE_LSE</name>
          <initializer>= 0x08U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LSE clock source <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t___exported___types_1ggad957348fe227e5cb75b70be026c5ae81a9012cc24ac82c0d7aa7558f73d770eab" prot="public">
          <name>UART_CLOCKSOURCE_UNDEFINED</name>
          <initializer>= 0x10U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Undefined clock source </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>UART clock sources definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" line="184" column="1" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" bodystart="185" bodyend="191"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___u_a_r_t___exported___types_1ga94c58ae1f4dbcf6032224edfc93a6e19" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t HAL_UART_StateTypeDef</definition>
        <argsstring></argsstring>
        <name>HAL_UART_StateTypeDef</name>
        <briefdescription>
<para>HAL UART State definition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HAL UART State value is a combination of 2 different substates: gState and RxState (see <ref refid="group___u_a_r_t___state___definition" kindref="compound">UART State Code Definition</ref>).<itemizedlist>
<listitem><para>gState contains UART state information related to global Handle management and also information related to Tx operations. gState value coding follow below described bitmap : b7-b6 Error information 00 : No Error 01 : (Not Used) 10 : Timeout 11 : Error b5 Peripheral initialization status 0 : Reset (Peripheral not initialized) 1 : Init done (Peripheral initialized. HAL UART Init function already called) b4-b3 (not used) xx : Should be set to 00 b2 Intrinsic process state 0 : Ready 1 : Busy (Peripheral busy with some configuration or internal operations) b1 (not used) x : Should be set to 0 b0 Tx state 0 : Ready (no Tx operation ongoing) 1 : Busy (Tx operation ongoing)</para>
</listitem><listitem><para>RxState contains information related to Rx operations. RxState value coding follow below described bitmap : b7-b6 (not used) xx : Should be set to 00 b5 Peripheral initialization status 0 : Reset (Peripheral not initialized) 1 : Init done (Peripheral initialized) b4-b2 (not used) xxx : Should be set to 000 b1 Rx state 0 : Ready (no Rx operation ongoing) 1 : Busy (Rx operation ongoing) b0 (not used) x : Should be set to 0. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" line="179" column="18" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___u_a_r_t___exported___types_1ga9f272475ea543a68fd8cb19f03a9bce9" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t HAL_UART_RxTypeTypeDef</definition>
        <argsstring></argsstring>
        <name>HAL_UART_RxTypeTypeDef</name>
        <briefdescription>
<para>HAL UART Reception type definition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HAL UART Reception type value aims to identify which type of Reception is ongoing. This parameter can be a value of <ref refid="group___u_a_r_t___reception___type___values" kindref="compound">UART Reception type values</ref> : HAL_UART_RECEPTION_STANDARD = 0x00U, HAL_UART_RECEPTION_TOIDLE = 0x01U, HAL_UART_RECEPTION_TORTO = 0x02U, HAL_UART_RECEPTION_TOCHARMATCH = 0x03U, </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" line="202" column="18" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___u_a_r_t___exported___types_1gadddf3d5480235c945dc8eec58f961203" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t HAL_UART_RxEventTypeTypeDef</definition>
        <argsstring></argsstring>
        <name>HAL_UART_RxEventTypeTypeDef</name>
        <briefdescription>
<para>HAL UART Rx Event type definition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>HAL UART Rx Event type value aims to identify which type of Event has occurred leading to call of the RxEvent callback. This parameter can be a value of <ref refid="group___u_a_r_t___rx_event___type___values" kindref="compound">UART RxEvent type values</ref> : HAL_UART_RXEVENT_TC = 0x00U, HAL_UART_RXEVENT_HT = 0x01U, HAL_UART_RXEVENT_IDLE = 0x02U, </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" line="213" column="18" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___u_a_r_t___exported___types_1ga5de4a49eb132735325e706f406c69d6e" prot="public" static="no">
        <type>struct <ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">__UART_HandleTypeDef</ref></type>
        <definition>typedef struct __UART_HandleTypeDef UART_HandleTypeDef</definition>
        <argsstring></argsstring>
        <name>UART_HandleTypeDef</name>
        <briefdescription>
<para>UART handle Structure definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h" line="288" column="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="stm32g0xx__hal__uart__ex_8c" kind="file" language="C++">
    <compoundname>stm32g0xx_hal_uart_ex.c</compoundname>
    <includes refid="stm32g0xx__hal_8h" local="yes">stm32g0xx_hal.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stm32g0xx_hal_conf.h</label>
        <link refid="stm32g0xx__hal__conf_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stm32g0xx.h</label>
        <link refid="stm32g0xx_8h"/>
      </node>
      <node id="7">
        <label>Legacy/stm32_hal_legacy.h</label>
        <link refid="stm32__hal__legacy_8h"/>
      </node>
      <node id="2">
        <label>stm32g0xx_hal.h</label>
        <link refid="stm32g0xx__hal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stm32g0xx_hal_cortex.h</label>
        <link refid="stm32g0xx__hal__cortex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stm32g0xx_hal_def.h</label>
        <link refid="stm32g0xx__hal__def_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stm32g0xx_hal_dma.h</label>
        <link refid="stm32g0xx__hal__dma_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stm32g0xx_hal_dma_ex.h</label>
        <link refid="stm32g0xx__hal__dma__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stm32g0xx_hal_exti.h</label>
        <link refid="stm32g0xx__hal__exti_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stm32g0xx_hal_flash.h</label>
        <link refid="stm32g0xx__hal__flash_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stm32g0xx_hal_flash_ex.h</label>
        <link refid="stm32g0xx__hal__flash__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stm32g0xx_hal_gpio.h</label>
        <link refid="stm32g0xx__hal__gpio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32g0xx_hal_gpio_ex.h</label>
        <link refid="stm32g0xx__hal__gpio__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stm32g0xx_hal_pwr.h</label>
        <link refid="stm32g0xx__hal__pwr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stm32g0xx_hal_pwr_ex.h</label>
        <link refid="stm32g0xx__hal__pwr__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32g0xx_hal_rcc.h</label>
        <link refid="stm32g0xx__hal__rcc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stm32g0xx_hal_rcc_ex.h</label>
        <link refid="stm32g0xx__hal__rcc__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>stm32g0xx_hal_spi.h</label>
        <link refid="stm32g0xx__hal__spi_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>stm32g0xx_hal_spi_ex.h</label>
        <link refid="stm32g0xx__hal__spi__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stm32g0xx_hal_tim.h</label>
        <link refid="stm32g0xx__hal__tim_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stm32g0xx_hal_tim_ex.h</label>
        <link refid="stm32g0xx__hal__tim__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>stm32g0xx_hal_uart.h</label>
        <link refid="stm32g0xx__hal__uart_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stm32g0xx_hal_uart_ex.h</label>
        <link refid="stm32g0xx__hal__uart__ex_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stm32g0xx_ll_dma.h</label>
        <link refid="stm32g0xx__ll__dma_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stm32g0xx_ll_dmamux.h</label>
        <link refid="stm32g0xx__ll__dmamux_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stm32g0xx_ll_rcc.h</label>
        <link refid="stm32g0xx__ll__rcc_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart_ex.c</label>
        <link refid="stm32g0xx__hal__uart__ex_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Extended UART HAL module driver. This file provides firmware functions to manage the following extended functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART). </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>MCD Application Team<itemizedlist>
<listitem><para>Initialization and de-initialization functions</para>
</listitem><listitem><para>Peripheral Control functions</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="attention"><para></para>
</simplesect>
Copyright (c) 2018 STMicroelectronics. All rights reserved.</para>
<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS.</para>
<para><verbatim>==============================================================================
             ##### UART peripheral extended features  #####
==============================================================================

  (#) Declare a UART_HandleTypeDef handle structure.

  (#) For the UART RS485 Driver Enable mode, initialize the UART registers
      by calling the HAL_RS485Ex_Init() API.

  (#) FIFO mode enabling/disabling and RX/TX FIFO threshold programming.

      -@- When UART operates in FIFO mode, FIFO mode must be enabled prior
          starting RX/TX transfers. Also RX/TX FIFO thresholds must be
          configured prior starting RX/TX transfers.</verbatim> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stm32g0xx__hal_8h" kindref="compound">stm32g0xx_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAL_UART_MODULE_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>typedef<sp/>-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>define<sp/>------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UART<sp/>RX<sp/>FIFO<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RX_FIFO_DEPTH<sp/>8U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UART<sp/>TX<sp/>FIFO<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TX_FIFO_DEPTH<sp/>8U</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macros<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>---------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>-----------------------------------------------*/</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UARTEx_Wakeup_AddressConfig(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/><ref refid="struct_u_a_r_t___wake_up_type_def" kindref="compound">UART_WakeUpTypeDef</ref><sp/>WakeUpSelection);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UARTEx_SetNbDataToProcess(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group1_1ga27862dc24258939a758a877b674977af" kindref="member">HAL_RS485Ex_Init</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint32_t<sp/>Polarity,<sp/>uint32_t<sp/>AssertionTime,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>DeassertionTime)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>uint32_t<sp/>temp;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>UART<sp/>handle<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>Driver<sp/>Enable<sp/>UART<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga98f122ffe4d77f03a13f682301e2d596" kindref="member">IS_UART_DRIVER_ENABLE_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>Driver<sp/>Enable<sp/>polarity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gaecf169f01673ae67b12b3155e074bf12" kindref="member">IS_UART_DE_POLARITY</ref>(Polarity));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>Driver<sp/>Enable<sp/>assertion<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga8acf6b6648717b7192439f1b426321a4" kindref="member">IS_UART_ASSERTIONTIME</ref>(AssertionTime));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>Driver<sp/>Enable<sp/>deassertion<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1ga7e060b24713e3fb49f4f0f4fa71dd85f" kindref="member">IS_UART_DEASSERTIONTIME</ref>(DeassertionTime));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1gacd81aeb745b71fc1c121cc686369600d" kindref="member">HAL_UART_STATE_RESET</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>lock<sp/>resource<sp/>and<sp/>initialize<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad4cf225029dbefe8d3fe660c33b8bb6b" kindref="member">Lock</ref><sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1ab367482e943333a1299294eadaad284ba9bd487430440139444e6e7ff226005c0" kindref="member">HAL_UNLOCKED</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_InitCallbacksToDefault(huart);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;MspInitCallback<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback<sp/>=<sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;MspInitCallback(huart);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>the<sp/>low<sp/>level<sp/>hardware<sp/>:<sp/>GPIO,<sp/>CLOCK,<sp/>CORTEX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___functions___group1_1ga0e553b32211877322f949b14801bbfa7" kindref="member">HAL_UART_MspInit</ref>(huart);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>(USE_HAL_UART_REGISTER_CALLBACKS)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>Peripheral<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>UART<sp/>Communication<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1ga5a87d1b1c4284cae14f5a1402efaa11b" kindref="member">UART_SetConfig</ref>(huart)<sp/>==<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4785c6c4b0e998062a50b706a739c6c5" kindref="member">AdvancedInit</ref>.<ref refid="struct_u_a_r_t___adv_feature_init_type_def_1ad3ebc9a49be4aa143250abfbe6c427d1" kindref="member">AdvFeatureInit</ref><sp/>!=<sp/><ref refid="group___u_a_r_t___advanced___features___initialization___type_1gab696b28f33174d038e0bfd300c1b2a77" kindref="member">UART_ADVFEATURE_NO_INIT</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___private___functions_1gacd304011919c5ccd02544208c7aa451b" kindref="member">UART_AdvFeatureConfig</ref>(huart);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Driver<sp/>Enable<sp/>mode<sp/>by<sp/>setting<sp/>the<sp/>DEM<sp/>bit<sp/>in<sp/>the<sp/>CR3<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gacd65f9fd10ee8e99db1118828deb0441" kindref="member">USART_CR3_DEM</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Driver<sp/>Enable<sp/>polarity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga2000c42015289291da1c58fe27800d64" kindref="member">USART_CR3_DEP</ref>,<sp/>Polarity);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Driver<sp/>Enable<sp/>assertion<sp/>and<sp/>deassertion<sp/>times<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>temp<sp/>=<sp/>(AssertionTime<sp/>&lt;&lt;<sp/><ref refid="group___u_a_r_t___c_r1___d_e_a_t___a_d_d_r_e_s_s___l_s_b___p_o_s_1ga90d12dcdf8fd18f3be92d9699abe02cd" kindref="member">UART_CR1_DEAT_ADDRESS_LSB_POS</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>temp<sp/>|=<sp/>(DeassertionTime<sp/>&lt;&lt;<sp/><ref refid="group___u_a_r_t___c_r1___d_e_d_t___a_d_d_r_e_s_s___l_s_b___p_o_s_1gaed41cd9ed039e3a075d0f4c433bea021" kindref="member">UART_CR1_DEDT_ADDRESS_LSB_POS</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>(<ref refid="group___peripheral___registers___bits___definition_1gab2d95af966e08146e1172c4b828bda38" kindref="member">USART_CR1_DEDT</ref><sp/>|<sp/><ref refid="group___peripheral___registers___bits___definition_1ga6bdc2e80e4545996ecb5901915d13e28" kindref="member">USART_CR1_DEAT</ref>),<sp/>temp);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Peripheral<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga49eb5ea4996a957afeb8be2793ba3fe9" kindref="member">__HAL_UART_ENABLE</ref>(huart);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TEACK<sp/>and/or<sp/>REACK<sp/>to<sp/>check<sp/>before<sp/>moving<sp/>huart-&gt;gState<sp/>and<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga44d09cdf66fec468d956c64a23f61856" kindref="member">HAL_UARTEx_WakeupCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UARTEx_WakeupCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga9275d738be064c56277b69384e6e3d14" kindref="member">HAL_UARTEx_RxFifoFullCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UARTEx_RxFifoFullCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group2_1ga6136c1516c4319853fba64290aed1e9d" kindref="member">HAL_UARTEx_TxFifoEmptyCallback</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>unused<sp/>argument(s)<sp/>compilation<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a6bc306171da085f4c7df2c66d2ff8e47" kindref="member">UNUSED</ref>(huart);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE<sp/>:<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>modified,<sp/>when<sp/>the<sp/>callback<sp/>is<sp/>needed,</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HAL_UARTEx_TxFifoEmptyCallback<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>the<sp/>user<sp/>file.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gabb9d4edfed47241a86a304856cb4e3c6" kindref="member">HAL_MultiProcessorEx_AddressLength_Set</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint32_t<sp/>AddressLength)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>UART<sp/>handle<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>address<sp/>length<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t_ex___private___macros_1gaa4cf2a15ad7ae46e2905debeef35a908" kindref="member">IS_UART_ADDRESSLENGTH_DETECT</ref>(AddressLength));</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>Peripheral<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>address<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga2d8588feb26d8b36054a060d6b691823" kindref="member">USART_CR2_ADDM7</ref>,<sp/>AddressLength);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Peripheral<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga49eb5ea4996a957afeb8be2793ba3fe9" kindref="member">__HAL_UART_ENABLE</ref>(huart);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TEACK<sp/>and/or<sp/>REACK<sp/>to<sp/>check<sp/>before<sp/>moving<sp/>huart-&gt;gState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad945067db34d4e1c3bd27a14fa8d7d25" kindref="member">UART_CheckIdleState</ref>(huart));</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gaab6cd801f4e343b1d6f8478c2575c3bf" kindref="member">HAL_UARTEx_StopModeWakeUpSourceConfig</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/><ref refid="struct_u_a_r_t___wake_up_type_def" kindref="compound">UART_WakeUpTypeDef</ref><sp/>WakeUpSelection)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>wake-up<sp/>from<sp/>stop<sp/>mode<sp/>UART<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga6303097822ab1977cc83f05319a10f1e" kindref="member">IS_UART_WAKEUP_FROMSTOP_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>wake-up<sp/>selection<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t___private___macros_1gaab6d7b59cffaf070ac3db100c76f4654" kindref="member">IS_UART_WAKEUP_SELECTION</ref>(WakeUpSelection.<ref refid="struct_u_a_r_t___wake_up_type_def_1a1146a984a15b77174e96057cb88e4f59" kindref="member">WakeUpEvent</ref>));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>Peripheral<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>wake-up<sp/>selection<sp/>scheme<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga76d102b464f15cbe18b0d83b61150293" kindref="member">USART_CR3_WUS</ref>,<sp/>WakeUpSelection.<ref refid="struct_u_a_r_t___wake_up_type_def_1a1146a984a15b77174e96057cb88e4f59" kindref="member">WakeUpEvent</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WakeUpSelection.<ref refid="struct_u_a_r_t___wake_up_type_def_1a1146a984a15b77174e96057cb88e4f59" kindref="member">WakeUpEvent</ref><sp/>==<sp/><ref refid="group___u_a_r_t___wake_up__from___stop___selection_1ga926f94a665ed3d200e76aeb01f2ae275" kindref="member">UART_WAKEUP_ON_ADDRESS</ref>)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>UARTEx_Wakeup_AddressConfig(huart,<sp/>WakeUpSelection);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Peripheral<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga49eb5ea4996a957afeb8be2793ba3fe9" kindref="member">__HAL_UART_ENABLE</ref>(huart);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>tickstart<sp/>for<sp/>timeout<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>tickstart<sp/>=<sp/><ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>until<sp/>REACK<sp/>flag<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___private___functions_1gad377d340a4703ef434289d54794c281f" kindref="member">UART_WaitOnFlagUntilTimeout</ref>(huart,<sp/><ref refid="group___peripheral___registers___bits___definition_1gaa513c61dd111de0945d8dd0778e70ad5" kindref="member">USART_ISR_REACK</ref>,<sp/><ref refid="group___exported__types_1gga89136caac2e14c55151f527ac02daaffa589b7d94a3d91d145720e2fed0eb3a05" kindref="member">RESET</ref>,<sp/>tickstart,<sp/><ref refid="group___u_a_r_t___time_out___value_1gaddb45b57fd556fb7cd763daa479f8ced" kindref="member">HAL_UART_TIMEOUT_VALUE</ref>)<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>UART<sp/>State<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gad113d7b5cd162ca36e706d812801b5ab" kindref="member">HAL_UARTEx_EnableStopMode</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>UESM<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga1bf035f3a6674183945975fdda9e5d3a" kindref="member">USART_CR1_UESM</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gae396fbc25c33343afa0084d05f83a15a" kindref="member">HAL_UARTEx_DisableStopMode</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>UESM<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga08dfef58d3b054b80745eda49e8907fb" kindref="member">ATOMIC_CLEAR_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga1bf035f3a6674183945975fdda9e5d3a" kindref="member">USART_CR1_UESM</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1ga68dcea204856c7b0316fd6562179197d" kindref="member">HAL_UARTEx_EnableFifoMode</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpcr1;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga475c1cee6992ab9325a52bca1b34c496" kindref="member">IS_UART_FIFO_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>actual<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>tmpcr1<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>UART<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>FIFO<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga26474f43799fbade9cf300e21dd3a91a" kindref="member">SET_BIT</ref>(tmpcr1,<sp/><ref refid="group___peripheral___registers___bits___definition_1gafb5e9fc4111b0159c65811f6a206c192" kindref="member">USART_CR1_FIFOEN</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>=<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1ga3ff44f476a9c4d0e6c98e50f513f3561" kindref="member">UART_FIFOMODE_ENABLE</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga32f78bffcaf6d13023dcd7f05e0c4d57" kindref="member">WRITE_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>tmpcr1);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>number<sp/>of<sp/>data<sp/>to<sp/>process<sp/>during<sp/>RX/TX<sp/>ISR<sp/>execution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>UARTEx_SetNbDataToProcess(huart);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1ga5f321105c87423e7156dbab60826b37a" kindref="member">HAL_UARTEx_DisableFifoMode</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpcr1;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga475c1cee6992ab9325a52bca1b34c496" kindref="member">IS_UART_FIFO_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>actual<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>tmpcr1<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>UART<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>FIFO<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga133aae6fc0d41bffab39ab223a7001de" kindref="member">CLEAR_BIT</ref>(tmpcr1,<sp/><ref refid="group___peripheral___registers___bits___definition_1gafb5e9fc4111b0159c65811f6a206c192" kindref="member">USART_CR1_FIFOEN</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>=<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1gaf55427ab3ae02f380954508d80b6dea3" kindref="member">UART_FIFOMODE_DISABLE</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga32f78bffcaf6d13023dcd7f05e0c4d57" kindref="member">WRITE_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>tmpcr1);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gae2e0da62ac7e71641ee696f6b6a3de11" kindref="member">HAL_UARTEx_SetTxFifoThreshold</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint32_t<sp/>Threshold)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpcr1;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga475c1cee6992ab9325a52bca1b34c496" kindref="member">IS_UART_FIFO_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t_ex___private___macros_1ga59f192f936bea1dac321a552ab3e662d" kindref="member">IS_UART_TXFIFO_THRESHOLD</ref>(Threshold));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>actual<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>tmpcr1<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>UART<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>TX<sp/>threshold<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga3fcfeb5d260242461009770e93fe5d63" kindref="member">USART_CR3_TXFTCFG</ref>,<sp/>Threshold);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>number<sp/>of<sp/>data<sp/>to<sp/>process<sp/>during<sp/>RX/TX<sp/>ISR<sp/>execution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>UARTEx_SetNbDataToProcess(huart);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga32f78bffcaf6d13023dcd7f05e0c4d57" kindref="member">WRITE_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>tmpcr1);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1ga7aa1f7a62351e140b6bc74a26ce14e5e" kindref="member">HAL_UARTEx_SetRxFifoThreshold</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint32_t<sp/>Threshold)</highlight></codeline>
<codeline lineno="655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tmpcr1;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___exported__macros_1ga475c1cee6992ab9325a52bca1b34c496" kindref="member">IS_UART_FIFO_INSTANCE</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t_ex___private___macros_1gac6cc8376326d3982bda0685dbaaff687" kindref="member">IS_UART_RXFIFO_THRESHOLD</ref>(Threshold));</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Locked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1ad3d96e1b9022ba76b69eeda91027b36c" kindref="member">__HAL_LOCK</ref>(huart);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1gabe7a46b4b59e60aa480bdf2aa4c2fd8e" kindref="member">HAL_UART_STATE_BUSY</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>actual<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>tmpcr1<sp/>=<sp/><ref refid="group___exported__macros_1gae7f188a4d26c9e713a48414783421071" kindref="member">READ_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>UART<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1gad2f9fbdb4adf3a09939e201eaeea072f" kindref="member">__HAL_UART_DISABLE</ref>(huart);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>RX<sp/>threshold<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gab90e1ecd73a2286ea1e5f056fb2b51d3" kindref="member">USART_CR3_RXFTCFG</ref>,<sp/>Threshold);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>number<sp/>of<sp/>data<sp/>to<sp/>process<sp/>during<sp/>RX/TX<sp/>ISR<sp/>execution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>UARTEx_SetNbDataToProcess(huart);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>UART<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga32f78bffcaf6d13023dcd7f05e0c4d57" kindref="member">WRITE_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/>tmpcr1);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab596705b6ce037e8debc149ccee148da" kindref="member">gState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>Unlocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a7c2c23627aed2bb71d8c1ad071cda004" kindref="member">__HAL_UNLOCK</ref>(huart);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1ga33da590bebd5fd13ce9020ac1fc05e15" kindref="member">HAL_UARTEx_ReceiveToIdle</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size,<sp/>uint16_t<sp/>*RxLen,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Timeout)</highlight></codeline>
<codeline lineno="718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/>*pdata8bits;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>uint16_t<sp/>*pdata16bits;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>uint16_t<sp/>uhMask;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tickstart;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>uint16_t<sp/>frontier,<sp/>as<sp/>data<sp/>to<sp/>be<sp/>received<sp/>from<sp/>RDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>through<sp/>a<sp/>uint16_t<sp/>cast.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a123c5063e6a3b1901b2fbe5f88c53a7e" kindref="member">ErrorCode</ref><sp/>=<sp/><ref refid="group___u_a_r_t___error___definition_1ga275de35cb518c19c284764f3ecb1aac5" kindref="member">HAL_UART_ERROR_NONE</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga7e0aa32633802a0b89a96df4909ededf" kindref="member">HAL_UART_STATE_BUSY_RX</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>tickstart<sp/>for<sp/>timeout<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>tickstart<sp/>=<sp/><ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computation<sp/>of<sp/>UART<sp/>mask<sp/>to<sp/>apply<sp/>to<sp/>RDR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_ex___private___macros_1gad9330184a8bd9399a36bcc93215a50d1" kindref="member">UART_MASK_COMPUTATION</ref>(huart);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>uhMask<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ab8dae64f3b86c2eb2b7a080fcdee3ef4" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pRxData<sp/>needs<sp/>to<sp/>be<sp/>handled<sp/>as<sp/>a<sp/>uint16_t<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits<sp/>=<sp/>(uint16_t<sp/>*)<sp/>pData;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits<sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>output<sp/>number<sp/>of<sp/>received<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>*RxLen<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>as<sp/>long<sp/>as<sp/>data<sp/>have<sp/>to<sp/>be<sp/>received<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref><sp/>&gt;<sp/>0U)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>IDLE<sp/>flag<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga5d7a320c505672f7508e3bd99f532a69" kindref="member">UART_FLAG_IDLE</ref>))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>IDLE<sp/>flag<sp/>in<sp/>ISR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Set,<sp/>but<sp/>no<sp/>data<sp/>ever<sp/>received,<sp/>clear<sp/>flag<sp/>without<sp/>exiting<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>Set,<sp/>and<sp/>data<sp/>has<sp/>already<sp/>been<sp/>received,<sp/>this<sp/>means<sp/>Idle<sp/>Event<sp/>is<sp/>valid<sp/>:<sp/>End<sp/>reception<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*RxLen<sp/>&gt;<sp/>0U)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1ga3c0c16c839b49a4ad14cdcb479b3e8d0" kindref="member">HAL_UART_RXEVENT_IDLE</ref>;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>RXNE<sp/>flag<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___u_a_r_t___exported___macros_1ga261fe8a2afe84ec048113654266c5bf6" kindref="member">__HAL_UART_GET_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___flags_1ga9d1b2860d84a87abb05c3b2fed3c108c" kindref="member">UART_FLAG_RXNE</ref>))</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdata8bits<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdata16bits<sp/>=<sp/>(uint16_t)(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref><sp/>&amp;<sp/>uhMask);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata16bits++;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pdata8bits<sp/>=<sp/>(uint8_t)(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1a8aa81f5cac584bdef4235fcc7e8fa745" kindref="member">RDR</ref><sp/>&amp;<sp/>(uint8_t)uhMask);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdata8bits++;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>number<sp/>of<sp/>received<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*RxLen<sp/>+=<sp/>1U;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>--;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>the<sp/>Timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Timeout<sp/>!=<sp/><ref refid="stm32g0xx__hal__def_8h_1aad28bc64749c50dcedd6bf819fdc6974" kindref="member">HAL_MAX_DELAY</ref>)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="group___h_a_l___exported___functions___group2_1gaf2c4f03d53e997a54e1fd5e80daa55c4" kindref="member">HAL_GetTick</ref>()<sp/>-<sp/>tickstart)<sp/>&gt;<sp/>Timeout)<sp/>||<sp/>(Timeout<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa00c89549bc881c35e8e4cd9e718337e5" kindref="member">HAL_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>number<sp/>of<sp/>received<sp/>elements<sp/>in<sp/>output<sp/>parameter<sp/>:<sp/>RxLen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>*RxLen<sp/>=<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ac12f5f1f6295b3c3327d5feabf5a96fb" kindref="member">RxXferSize</ref><sp/>-<sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1ad95a26d6b12b7087bba3d1b769175db2" kindref="member">RxXferCount</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>end<sp/>of<sp/>Rx<sp/>process,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>=<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gae70c60d3f42f1c205ebc834de99342a7" kindref="member">HAL_UARTEx_ReceiveToIdle_IT</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>uint16_t<sp/>frontier,<sp/>as<sp/>data<sp/>to<sp/>be<sp/>received<sp/>from<sp/>RDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>through<sp/>a<sp/>uint16_t<sp/>cast.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Reception<sp/>type<sp/>to<sp/>reception<sp/>till<sp/>IDLE<sp/>Event*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="group___u_a_r_t___private___functions_1ga6629cec6016bd4dc0ea1bbce9e20898f" kindref="member">UART_Start_Receive_IT</ref>(huart,<sp/>pData,<sp/>Size);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Rx<sp/>process<sp/>has<sp/>been<sp/>successfully<sp/>started<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>errors<sp/>already<sp/>pending<sp/>when<sp/>reception<sp/>is<sp/>started,</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Interrupts<sp/>may<sp/>have<sp/>already<sp/>been<sp/>raised<sp/>and<sp/>lead<sp/>to<sp/>reception<sp/>abortion.</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Overrun<sp/>error<sp/>for<sp/>instance).</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>such<sp/>case<sp/>Reception<sp/>Type<sp/>has<sp/>been<sp/>reset<sp/>to<sp/>HAL_UART_RECEPTION_STANDARD.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1gaf482a22a09d594e0aa687937aef17949" kindref="member">HAL_UARTEx_ReceiveToIdle_DMA</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>Size)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478f" kindref="member">HAL_StatusTypeDef</ref><sp/>status;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a198c30da19a1529e1665bec6dc455815" kindref="member">RxState</ref><sp/>==<sp/><ref refid="group___u_a_r_t___state___definition_1ga5f9ebc1c0e62dbad395ecf020e88bce9" kindref="member">HAL_UART_STATE_READY</ref>)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(Size<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>9bits/No<sp/>Parity<sp/>transfer,<sp/>pData<sp/>buffer<sp/>provided<sp/>as<sp/>input<sp/>parameter</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>aligned<sp/>on<sp/>a<sp/>uint16_t<sp/>frontier,<sp/>as<sp/>data<sp/>copy<sp/>from<sp/>RDR<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled<sp/>by<sp/>DMA<sp/>from<sp/>a<sp/>uint16_t<sp/>frontier.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1ae5e60b9a021fe0009588fc86c7584a5a" kindref="member">WordLength</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___word___length_1gaf867be43de35fd3c32fe0b4dd4058f7e" kindref="member">UART_WORDLENGTH_9B</ref>)<sp/>&amp;&amp;<sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a6b5ab0619ea07655a7f3bc92f78fafaa" kindref="member">Init</ref>.<ref refid="struct_u_a_r_t___init_type_def_1a1d60a99b8f3965f01ab23444b154ba79" kindref="member">Parity</ref><sp/>==<sp/><ref refid="group___u_a_r_t___parity_1ga270dea6e1a92dd83fe58802450bdd60c" kindref="member">UART_PARITY_NONE</ref>))</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((uint32_t)pData)<sp/>&amp;<sp/>1U)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Reception<sp/>type<sp/>to<sp/>reception<sp/>till<sp/>IDLE<sp/>Event*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref><sp/>=<sp/><ref refid="group___u_a_r_t___rx_event___type___values_1gacb1603ee7c4bcd848380033a2e6b3736" kindref="member">HAL_UART_RXEVENT_TC</ref>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><sp/><ref refid="group___u_a_r_t___private___functions_1ga3821d988f1d6feb39dc86ab5010d0a9c" kindref="member">UART_Start_Receive_DMA</ref>(huart,<sp/>pData,<sp/>Size);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Rx<sp/>process<sp/>has<sp/>been<sp/>successfully<sp/>started<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a861b12a5639c751ef2c54a2508b7919f" kindref="member">ReceptionType</ref><sp/>==<sp/><ref refid="group___u_a_r_t___reception___type___values_1ga0b12e95686ebebc1d6c8c77331e5bac6" kindref="member">HAL_UART_RECEPTION_TOIDLE</ref>)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t___exported___macros_1ga9bd035161d41cde4f2568c7af06493bf" kindref="member">__HAL_UART_CLEAR_FLAG</ref>(huart,<sp/><ref refid="group___u_a_r_t___i_t___c_l_e_a_r___flags_1ga75ee9be0ac2236931ef3d9514e7dedf4" kindref="member">UART_CLEAR_IDLEF</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___exported__macros_1ga5daccb3b4245b833e81ff60fd1f4cf80" kindref="member">ATOMIC_SET_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1ab0ec7102960640751d44e92ddac994f0" kindref="member">CR1</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga5221d09eebd12445a20f221bf98066f8" kindref="member">USART_CR1_IDLEIE</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>case<sp/>of<sp/>errors<sp/>already<sp/>pending<sp/>when<sp/>reception<sp/>is<sp/>started,</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Interrupts<sp/>may<sp/>have<sp/>already<sp/>been<sp/>raised<sp/>and<sp/>lead<sp/>to<sp/>reception<sp/>abortion.</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Overrun<sp/>error<sp/>for<sp/>instance).</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>such<sp/>case<sp/>Reception<sp/>Type<sp/>has<sp/>been<sp/>reset<sp/>to<sp/>HAL_UART_RECEPTION_STANDARD.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa5a04e395e501e4e400172c610478c4a4" kindref="member">HAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__hal__def_8h_1a63c0679d1cb8b8c684fbb0632743478fa8532fa3641ae7c14cb1b0554e2d9cbc7" kindref="member">HAL_BUSY</ref>;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><ref refid="group___u_a_r_t___exported___types_1gadddf3d5480235c945dc8eec58f961203" kindref="member">HAL_UART_RxEventTypeTypeDef</ref><sp/><ref refid="group___u_a_r_t_ex___exported___functions___group3_1ga31c033bf82e6ec4ce88d7cd6083b2c16" kindref="member">HAL_UARTEx_GetRxEventType</ref>(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>Rx<sp/>Event<sp/>type<sp/>value,<sp/>as<sp/>stored<sp/>in<sp/>UART<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a372214fec6d84261294a8783e9a10ef2" kindref="member">RxEventType</ref>);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UARTEx_Wakeup_AddressConfig(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart,<sp/><ref refid="struct_u_a_r_t___wake_up_type_def" kindref="compound">UART_WakeUpTypeDef</ref><sp/>WakeUpSelection)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><ref refid="stm32g0xx__hal__conf_8h_1a631dea7b230e600555f979c62af1de21" kindref="member">assert_param</ref>(<ref refid="group___u_a_r_t_ex___private___macros_1gaa4cf2a15ad7ae46e2905debeef35a908" kindref="member">IS_UART_ADDRESSLENGTH_DETECT</ref>(WakeUpSelection.<ref refid="struct_u_a_r_t___wake_up_type_def_1a5be92432486df9b5320d668c236e1b6f" kindref="member">AddressLength</ref>));</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>USART<sp/>address<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga2d8588feb26d8b36054a060d6b691823" kindref="member">USART_CR2_ADDM7</ref>,<sp/>WakeUpSelection.<ref refid="struct_u_a_r_t___wake_up_type_def_1a5be92432486df9b5320d668c236e1b6f" kindref="member">AddressLength</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>USART<sp/>address<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><ref refid="group___exported__macros_1ga6553c99f510c3bab8cc0a91602053247" kindref="member">MODIFY_REG</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1afdfa307571967afb1d97943e982b6586" kindref="member">CR2</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga3ee77fac25142271ad56d49685e518b3" kindref="member">USART_CR2_ADD</ref>,<sp/>((uint32_t)WakeUpSelection.<ref refid="struct_u_a_r_t___wake_up_type_def_1ae2bbeaf207df18992544fd4193b34112" kindref="member">Address</ref><sp/>&lt;&lt;<sp/><ref refid="group___u_a_r_t___c_r2___a_d_d_r_e_s_s___l_s_b___p_o_s_1ga28e21d5a49aa9e9812b870697c554d97" kindref="member">UART_CR2_ADDRESS_LSB_POS</ref>));</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UARTEx_SetNbDataToProcess(<ref refid="struct_____u_a_r_t___handle_type_def" kindref="compound">UART_HandleTypeDef</ref><sp/>*huart)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_fifo_depth;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tx_fifo_depth;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_fifo_threshold;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tx_fifo_threshold;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>numerator[]<sp/>=<sp/>{1U,<sp/>1U,<sp/>1U,<sp/>3U,<sp/>7U,<sp/>1U,<sp/>0U,<sp/>0U};</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>denominator[]<sp/>=<sp/>{8U,<sp/>4U,<sp/>2U,<sp/>4U,<sp/>8U,<sp/>1U,<sp/>1U,<sp/>1U};</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1af1e1c91773389b7106a54bcc8d48b64e" kindref="member">FifoMode</ref><sp/>==<sp/><ref refid="group___u_a_r_t_ex___f_i_f_o__mode_1gaf55427ab3ae02f380954508d80b6dea3" kindref="member">UART_FIFOMODE_DISABLE</ref>)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4edc9627c21dad457c2cfadf59f08b45" kindref="member">NbTxDataToProcess</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a3cd3fa87f15dcbca9a876ec343ccf3b7" kindref="member">NbRxDataToProcess</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>rx_fifo_depth<sp/>=<sp/>RX_FIFO_DEPTH;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_fifo_depth<sp/>=<sp/>TX_FIFO_DEPTH;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>rx_fifo_threshold<sp/>=<sp/>(uint8_t)(<ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1gab90e1ecd73a2286ea1e5f056fb2b51d3" kindref="member">USART_CR3_RXFTCFG</ref>)<sp/>&gt;&gt;<sp/><ref refid="group___peripheral___registers___bits___definition_1ga6491228522aa7eb6e74591a4a6be9144" kindref="member">USART_CR3_RXFTCFG_Pos</ref>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>tx_fifo_threshold<sp/>=<sp/>(uint8_t)(<ref refid="group___exported__macros_1ga822bb1bb9710d5f2fa6396b84e583c33" kindref="member">READ_BIT</ref>(huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a2b30b6d22df80fbebd8ceefc6f162310" kindref="member">Instance</ref>-&gt;<ref refid="struct_u_s_a_r_t___type_def_1add5b8e29a64c55dcd65ca4201118e9d1" kindref="member">CR3</ref>,<sp/><ref refid="group___peripheral___registers___bits___definition_1ga3fcfeb5d260242461009770e93fe5d63" kindref="member">USART_CR3_TXFTCFG</ref>)<sp/>&gt;&gt;<sp/><ref refid="group___peripheral___registers___bits___definition_1gab1a8212466a19ac9c5e967d17f86f6bb" kindref="member">USART_CR3_TXFTCFG_Pos</ref>);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a4edc9627c21dad457c2cfadf59f08b45" kindref="member">NbTxDataToProcess</ref><sp/>=<sp/>((uint16_t)tx_fifo_depth<sp/>*<sp/>numerator[tx_fifo_threshold])<sp/>/</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint16_t)denominator[tx_fifo_threshold];</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;<ref refid="struct_____u_a_r_t___handle_type_def_1a3cd3fa87f15dcbca9a876ec343ccf3b7" kindref="member">NbRxDataToProcess</ref><sp/>=<sp/>((uint16_t)rx_fifo_depth<sp/>*<sp/>numerator[rx_fifo_threshold])<sp/>/</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint16_t)denominator[rx_fifo_threshold];</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAL_UART_MODULE_ENABLED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart_ex.c"/>
  </compounddef>
</doxygen>

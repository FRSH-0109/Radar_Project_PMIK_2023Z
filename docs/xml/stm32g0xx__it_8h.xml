<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="stm32g0xx__it_8h" kind="file" language="C++">
    <compoundname>stm32g0xx_it.h</compoundname>
    <includedby refid="stm32g0xx__it_8c" local="yes">Core/Src/stm32g0xx_it.c</includedby>
    <invincdepgraph>
      <node id="1">
        <label>Core/Inc/stm32g0xx_it.h</label>
        <link refid="stm32g0xx__it_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Core/Src/stm32g0xx_it.c</label>
        <link refid="stm32g0xx__it_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="stm32g0xx__it_8h_1a6ad7a5e3ee69cb6db6a6b9111ba898bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NMI_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>NMI_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Non maskable interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="49" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="74" bodyend="84" declfile="Core/Inc/stm32g0xx_it.h" declline="49" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1a2bffc10d5bd4106753b7c30e86903bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardFault_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>HardFault_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Hard fault interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="50" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="89" bodyend="99" declfile="Core/Inc/stm32g0xx_it.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1a3e5ddb3df0d62f2dc357e64a3f04a6ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SVC_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>SVC_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles System service call via SWI instruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="51" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="104" bodyend="112" declfile="Core/Inc/stm32g0xx_it.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1a6303e1f258cbdc1f970ce579cc015623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PendSV_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>PendSV_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles Pendable request for system service. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="52" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="117" bodyend="125" declfile="Core/Inc/stm32g0xx_it.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1ab5e09814056d617c521549e542639b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SysTick_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>SysTick_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles System tick timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="53" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="130" bodyend="139" declfile="Core/Inc/stm32g0xx_it.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1ae00a10bd0f2f4c129c84120e78ad4382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI2_3_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>EXTI2_3_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles EXTI line 2 and line 3 interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="54" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="151" bodyend="160" declfile="Core/Inc/stm32g0xx_it.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1a7b6fac3d670a4860ebec8a961d5c4a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMA1_Channel1_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>DMA1_Channel1_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles DMA1 channel 1 interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="55" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="165" bodyend="174" declfile="Core/Inc/stm32g0xx_it.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1aedf923a36e99dd50350a393d4e94bc21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DMA1_Channel2_3_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>DMA1_Channel2_3_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles DMA1 channel 2 and channel 3 interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="56" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="179" bodyend="188" declfile="Core/Inc/stm32g0xx_it.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1ac8e51d2183b5230cbd5481f8867adce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM3_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM3_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM3 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="57" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="193" bodyend="202" declfile="Core/Inc/stm32g0xx_it.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1a422d57e8efb93bfbfa13cf343587af8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM14_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM14_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM14 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="58" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="207" bodyend="216" declfile="Core/Inc/stm32g0xx_it.h" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1ae194ef2e9384ca2fd29c2615e6dc4093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM16_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM16_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM16 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="59" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="221" bodyend="230" declfile="Core/Inc/stm32g0xx_it.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32g0xx__it_8h_1a7139cd4baabbbcbab0c1fe6d7d4ae1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART1_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>USART1_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI line 25. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Core/Inc/stm32g0xx_it.h" line="60" column="6" bodyfile="Core/Src/stm32g0xx_it.c" bodystart="235" bodyend="244" declfile="Core/Inc/stm32g0xx_it.h" declline="60" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This file contains the headers of the interrupt handlers. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="attention"><para></para>
</simplesect>
Copyright (c) 2023 STMicroelectronics. All rights reserved.</para>
<para>This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>Header<sp/>*/</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32G0xx_IT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32G0xx_IT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>includes<sp/>----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>types<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>ET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>ET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>constants<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>macro<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>prototypes<sp/>---------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1a6ad7a5e3ee69cb6db6a6b9111ba898bc" kindref="member">NMI_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1a2bffc10d5bd4106753b7c30e86903bea" kindref="member">HardFault_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1a3e5ddb3df0d62f2dc357e64a3f04a6ce" kindref="member">SVC_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1a6303e1f258cbdc1f970ce579cc015623" kindref="member">PendSV_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1ab5e09814056d617c521549e542639b7e" kindref="member">SysTick_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1ae00a10bd0f2f4c129c84120e78ad4382" kindref="member">EXTI2_3_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1a7b6fac3d670a4860ebec8a961d5c4a73" kindref="member">DMA1_Channel1_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1aedf923a36e99dd50350a393d4e94bc21" kindref="member">DMA1_Channel2_3_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1ac8e51d2183b5230cbd5481f8867adce9" kindref="member">TIM3_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1a422d57e8efb93bfbfa13cf343587af8c" kindref="member">TIM14_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1ae194ef2e9384ca2fd29c2615e6dc4093" kindref="member">TIM16_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32g0xx__it_8h_1a7139cd4baabbbcbab0c1fe6d7d4ae1cc" kindref="member">USART1_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EFP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EFP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32G0xx_IT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="Core/Inc/stm32g0xx_it.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_s_p_i___init_type_def" kind="struct" language="C++" prot="public">
    <compoundname>SPI_InitTypeDef</compoundname>
    <includes refid="stm32g0xx__hal__spi_8h" local="no">stm32g0xx_hal_spi.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t Mode</definition>
        <argsstring></argsstring>
        <name>Mode</name>
        <qualifiedname>SPI_InitTypeDef::Mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the SPI operating mode. This parameter can be a value of <ref refid="group___s_p_i___mode" kindref="compound">SPI Mode</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="48" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1ab94410c1333b512e271b1c135fe50916" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t Direction</definition>
        <argsstring></argsstring>
        <name>Direction</name>
        <qualifiedname>SPI_InitTypeDef::Direction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the SPI bidirectional mode state. This parameter can be a value of <ref refid="group___s_p_i___direction" kindref="compound">SPI Direction Mode</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="51" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a98999b0cd6e4c94f05b61b2554ee0371" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t DataSize</definition>
        <argsstring></argsstring>
        <name>DataSize</name>
        <qualifiedname>SPI_InitTypeDef::DataSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the SPI data size. This parameter can be a value of <ref refid="group___s_p_i___data___size" kindref="compound">SPI Data Size</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="54" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a83f278c9d173d3cd021644692bf3c435" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t CLKPolarity</definition>
        <argsstring></argsstring>
        <name>CLKPolarity</name>
        <qualifiedname>SPI_InitTypeDef::CLKPolarity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the serial clock steady state. This parameter can be a value of <ref refid="group___s_p_i___clock___polarity" kindref="compound">SPI Clock Polarity</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="57" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1aba7183911cbc41063270dab182de768f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t CLKPhase</definition>
        <argsstring></argsstring>
        <name>CLKPhase</name>
        <qualifiedname>SPI_InitTypeDef::CLKPhase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the clock active edge for the bit capture. This parameter can be a value of <ref refid="group___s_p_i___clock___phase" kindref="compound">SPI Clock Phase</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="60" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1ae4a064e48fd5945eda7210d515fed69c" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t NSS</definition>
        <argsstring></argsstring>
        <name>NSS</name>
        <qualifiedname>SPI_InitTypeDef::NSS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies whether the NSS signal is managed by hardware (NSS pin) or by software using the SSI bit. This parameter can be a value of <ref refid="group___s_p_i___slave___select__management" kindref="compound">SPI Slave Select Management</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="63" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a2fa72ad4f27606fffa2ec9456bcb0a56" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t BaudRatePrescaler</definition>
        <argsstring></argsstring>
        <name>BaudRatePrescaler</name>
        <qualifiedname>SPI_InitTypeDef::BaudRatePrescaler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the Baud Rate prescaler value which will be used to configure the transmit and receive SCK clock. This parameter can be a value of <ref refid="group___s_p_i___baud_rate___prescaler" kindref="compound">SPI BaudRate Prescaler</ref> <simplesect kind="note"><para>The communication clock is derived from the master clock. The slave clock does not need to be set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="67" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a9740c535f073c87bb06668385ce96002" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t FirstBit</definition>
        <argsstring></argsstring>
        <name>FirstBit</name>
        <qualifiedname>SPI_InitTypeDef::FirstBit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies whether data transfers start from MSB or LSB bit. This parameter can be a value of <ref refid="group___s_p_i___m_s_b___l_s_b__transmission" kindref="compound">SPI MSB LSB Transmission</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="73" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a3db685adbdc6f7bfc7ad0191ba5ab277" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t TIMode</definition>
        <argsstring></argsstring>
        <name>TIMode</name>
        <qualifiedname>SPI_InitTypeDef::TIMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies if the TI mode is enabled or not. This parameter can be a value of <ref refid="group___s_p_i___t_i__mode" kindref="compound">SPI TI Mode</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="76" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a9d334a47c34b01cbfa55ff66cfc1e0ce" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t CRCCalculation</definition>
        <argsstring></argsstring>
        <name>CRCCalculation</name>
        <qualifiedname>SPI_InitTypeDef::CRCCalculation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies if the CRC calculation is enabled or not. This parameter can be a value of <ref refid="group___s_p_i___c_r_c___calculation" kindref="compound">SPI CRC Calculation</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="79" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a48aef59cfd7bf0262b1ad993fef2fc7b" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t CRCPolynomial</definition>
        <argsstring></argsstring>
        <name>CRCPolynomial</name>
        <qualifiedname>SPI_InitTypeDef::CRCPolynomial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the polynomial used for the CRC calculation. This parameter must be an odd number between Min_Data = 1 and Max_Data = 65535 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="82" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1aba709d1ebebac9b3385fb61d6eeb79a2" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t CRCLength</definition>
        <argsstring></argsstring>
        <name>CRCLength</name>
        <qualifiedname>SPI_InitTypeDef::CRCLength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the CRC Length used for the CRC calculation. CRC Length is only used with Data8 and Data16, not other data size This parameter can be a value of <ref refid="group___s_p_i___c_r_c__length" kindref="compound">SPI CRC Length</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="85" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_p_i___init_type_def_1a537f238782f2847191f7d221ffaa6c9b" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t NSSPMode</definition>
        <argsstring></argsstring>
        <name>NSSPMode</name>
        <qualifiedname>SPI_InitTypeDef::NSSPMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies whether the NSSP signal is enabled or not . This parameter can be a value of <ref refid="group___s_p_i___n_s_s_p___mode" kindref="compound">SPI NSS Pulse Mode</ref> This mode is activated by the NSSP bit in the SPIx_CR2 register and it takes effect only if the SPI interface is configured as Motorola SPI master (FRF=0) with capture on the first edge (SPIx_CR1 CPHA = 0, CPOL setting is ignored).. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="89" column="12" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>SPI Configuration Structure definition. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" line="46" column="1" bodyfile="Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_spi.h" bodystart="47" bodyend="95"/>
    <listofallmembers>
      <member refid="struct_s_p_i___init_type_def_1a2fa72ad4f27606fffa2ec9456bcb0a56" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>BaudRatePrescaler</name></member>
      <member refid="struct_s_p_i___init_type_def_1aba7183911cbc41063270dab182de768f" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>CLKPhase</name></member>
      <member refid="struct_s_p_i___init_type_def_1a83f278c9d173d3cd021644692bf3c435" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>CLKPolarity</name></member>
      <member refid="struct_s_p_i___init_type_def_1a9d334a47c34b01cbfa55ff66cfc1e0ce" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>CRCCalculation</name></member>
      <member refid="struct_s_p_i___init_type_def_1aba709d1ebebac9b3385fb61d6eeb79a2" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>CRCLength</name></member>
      <member refid="struct_s_p_i___init_type_def_1a48aef59cfd7bf0262b1ad993fef2fc7b" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>CRCPolynomial</name></member>
      <member refid="struct_s_p_i___init_type_def_1a98999b0cd6e4c94f05b61b2554ee0371" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>DataSize</name></member>
      <member refid="struct_s_p_i___init_type_def_1ab94410c1333b512e271b1c135fe50916" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>Direction</name></member>
      <member refid="struct_s_p_i___init_type_def_1a9740c535f073c87bb06668385ce96002" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>FirstBit</name></member>
      <member refid="struct_s_p_i___init_type_def_1a0ffc93ec511ed9cf1663f6939bd3e839" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>Mode</name></member>
      <member refid="struct_s_p_i___init_type_def_1ae4a064e48fd5945eda7210d515fed69c" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>NSS</name></member>
      <member refid="struct_s_p_i___init_type_def_1a537f238782f2847191f7d221ffaa6c9b" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>NSSPMode</name></member>
      <member refid="struct_s_p_i___init_type_def_1a3db685adbdc6f7bfc7ad0191ba5ab277" prot="public" virt="non-virtual"><scope>SPI_InitTypeDef</scope><name>TIMode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
